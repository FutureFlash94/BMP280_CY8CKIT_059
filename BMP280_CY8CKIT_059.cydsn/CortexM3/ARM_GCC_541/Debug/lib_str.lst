ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"lib_str.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Str_FmtNbr_Int32,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	Str_FmtNbr_Int32, %function
  24              	Str_FmtNbr_Int32:
  25              	.LFB23:
  26              		.file 1 "uC-LIB\\lib_str.c"
   1:uC-LIB/lib_str.c **** /*
   2:uC-LIB/lib_str.c **** ***************************************************************************************************
   3:uC-LIB/lib_str.c **** *                                                uC/LIB
   4:uC-LIB/lib_str.c **** *                                        CUSTOM LIBRARY MODULES
   5:uC-LIB/lib_str.c **** *
   6:uC-LIB/lib_str.c **** *                          (c) Copyright 2004-2012; Micrium, Inc.; Weston, FL
   7:uC-LIB/lib_str.c **** *
   8:uC-LIB/lib_str.c **** *               All rights reserved.  Protected by international copyright laws.
   9:uC-LIB/lib_str.c **** *
  10:uC-LIB/lib_str.c **** *               uC/LIB is provided in source form to registered licensees ONLY.  It is 
  11:uC-LIB/lib_str.c **** *               illegal to distribute this source code to any third party unless you receive 
  12:uC-LIB/lib_str.c **** *               written permission by an authorized Micrium representative.  Knowledge of 
  13:uC-LIB/lib_str.c **** *               the source code may NOT be used to develop a similar product.
  14:uC-LIB/lib_str.c **** *
  15:uC-LIB/lib_str.c **** *               Please help us continue to provide the Embedded community with the finest 
  16:uC-LIB/lib_str.c **** *               software available.  Your honesty is greatly appreciated.
  17:uC-LIB/lib_str.c **** *
  18:uC-LIB/lib_str.c **** *               You can contact us at www.micrium.com.
  19:uC-LIB/lib_str.c **** ***************************************************************************************************
  20:uC-LIB/lib_str.c **** */
  21:uC-LIB/lib_str.c **** 
  22:uC-LIB/lib_str.c **** /*
  23:uC-LIB/lib_str.c **** ***************************************************************************************************
  24:uC-LIB/lib_str.c **** *
  25:uC-LIB/lib_str.c **** *                                       ASCII STRING MANAGEMENT
  26:uC-LIB/lib_str.c **** *
  27:uC-LIB/lib_str.c **** * Filename      : lib_str.c
  28:uC-LIB/lib_str.c **** * Version       : V1.37.00
  29:uC-LIB/lib_str.c **** * Programmer(s) : ITJ
  30:uC-LIB/lib_str.c **** *                 BAN
  31:uC-LIB/lib_str.c **** *                 JDH
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 2


  32:uC-LIB/lib_str.c **** ***************************************************************************************************
  33:uC-LIB/lib_str.c **** * Note(s)       : (1) NO compiler-supplied standard library functions are used in library or produc
  34:uC-LIB/lib_str.c **** *
  35:uC-LIB/lib_str.c **** *                     (a) ALL standard library functions are implemented in the custom library modu
  36:uC-LIB/lib_str.c **** *
  37:uC-LIB/lib_str.c **** *                         (1) \<Custom Library Directory>\lib_*.*
  38:uC-LIB/lib_str.c **** *
  39:uC-LIB/lib_str.c **** *                         (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  40:uC-LIB/lib_str.c **** *
  41:uC-LIB/lib_str.c **** *                               where
  42:uC-LIB/lib_str.c **** *                                       <Custom Library Directory>      directory path for custom l
  43:uC-LIB/lib_str.c **** *                                       <cpu>                           directory name for specific
  44:uC-LIB/lib_str.c **** *                                       <compiler>                      directory name for specific
  45:uC-LIB/lib_str.c **** *
  46:uC-LIB/lib_str.c **** *                     (b) Product-specific library functions are implemented in individual products
  47:uC-LIB/lib_str.c **** *
  48:uC-LIB/lib_str.c **** ***************************************************************************************************
  49:uC-LIB/lib_str.c **** * Notice(s)     : (1) The Institute of Electrical and Electronics Engineers and The Open Group, hav
  50:uC-LIB/lib_str.c **** *                     us permission to reprint portions of their documentation.  Portions of this t
  51:uC-LIB/lib_str.c **** *                     reprinted and reproduced in electronic form from the IEEE Std 1003.1, 2004 Ed
  52:uC-LIB/lib_str.c **** *                     Standard for Information Technology -- Portable Operating System Interface (P
  53:uC-LIB/lib_str.c **** *                     The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the In
  54:uC-LIB/lib_str.c **** *                     of Electrical and Electronics Engineers, Inc and The Open Group.  In the even
  55:uC-LIB/lib_str.c **** *                     discrepancy between these versions and the original IEEE and The Open Group S
  56:uC-LIB/lib_str.c **** *                     the original IEEE and The Open Group Standard is the referee document.  The o
  57:uC-LIB/lib_str.c **** *                     Standard can be obtained online at http://www.opengroup.org/unix/online.html.
  58:uC-LIB/lib_str.c **** ***************************************************************************************************
  59:uC-LIB/lib_str.c **** */
  60:uC-LIB/lib_str.c **** 
  61:uC-LIB/lib_str.c **** 
  62:uC-LIB/lib_str.c **** /*
  63:uC-LIB/lib_str.c **** ***************************************************************************************************
  64:uC-LIB/lib_str.c **** *                                            INCLUDE FILES
  65:uC-LIB/lib_str.c **** ***************************************************************************************************
  66:uC-LIB/lib_str.c **** */
  67:uC-LIB/lib_str.c **** 
  68:uC-LIB/lib_str.c **** #define    MICRIUM_SOURCE
  69:uC-LIB/lib_str.c **** #define    LIB_STR_MODULE
  70:uC-LIB/lib_str.c **** #include  <lib_str.h>
  71:uC-LIB/lib_str.c **** 
  72:uC-LIB/lib_str.c **** 
  73:uC-LIB/lib_str.c **** /*$PAGE*/
  74:uC-LIB/lib_str.c **** /*
  75:uC-LIB/lib_str.c **** ***************************************************************************************************
  76:uC-LIB/lib_str.c **** *                                            LOCAL DEFINES
  77:uC-LIB/lib_str.c **** ***************************************************************************************************
  78:uC-LIB/lib_str.c **** */
  79:uC-LIB/lib_str.c **** 
  80:uC-LIB/lib_str.c **** 
  81:uC-LIB/lib_str.c **** /*
  82:uC-LIB/lib_str.c **** ***************************************************************************************************
  83:uC-LIB/lib_str.c **** *                                           LOCAL CONSTANTS
  84:uC-LIB/lib_str.c **** ***************************************************************************************************
  85:uC-LIB/lib_str.c **** */
  86:uC-LIB/lib_str.c **** 
  87:uC-LIB/lib_str.c **** 
  88:uC-LIB/lib_str.c **** /*
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 3


  89:uC-LIB/lib_str.c **** ***************************************************************************************************
  90:uC-LIB/lib_str.c **** *                                          LOCAL DATA TYPES
  91:uC-LIB/lib_str.c **** ***************************************************************************************************
  92:uC-LIB/lib_str.c **** */
  93:uC-LIB/lib_str.c **** 
  94:uC-LIB/lib_str.c **** 
  95:uC-LIB/lib_str.c **** /*
  96:uC-LIB/lib_str.c **** ***************************************************************************************************
  97:uC-LIB/lib_str.c **** *                                            LOCAL TABLES
  98:uC-LIB/lib_str.c **** ***************************************************************************************************
  99:uC-LIB/lib_str.c **** */
 100:uC-LIB/lib_str.c **** 
 101:uC-LIB/lib_str.c **** static  const  CPU_INT32U  Str_MultOvfThTbl_Int32U[] = {
 102:uC-LIB/lib_str.c ****    (CPU_INT32U) DEF_INT_32U_MAX_VAL,                /*                Invalid base  0.  */
 103:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  1u),         /*                Invalid base  1.  */
 104:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  2u),         /* 32-bit mult ovf th for base  2.  */
 105:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  3u),         /* 32-bit mult ovf th for base  3.  */
 106:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  4u),         /* 32-bit mult ovf th for base  4.  */
 107:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  5u),         /* 32-bit mult ovf th for base  5.  */
 108:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  6u),         /* 32-bit mult ovf th for base  6.  */
 109:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  7u),         /* 32-bit mult ovf th for base  7.  */
 110:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  8u),         /* 32-bit mult ovf th for base  8.  */
 111:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  9u),         /* 32-bit mult ovf th for base  9.  */
 112:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 10u),         /* 32-bit mult ovf th for base 10.  */
 113:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 11u),         /* 32-bit mult ovf th for base 11.  */
 114:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 12u),         /* 32-bit mult ovf th for base 12.  */
 115:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 13u),         /* 32-bit mult ovf th for base 13.  */
 116:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 14u),         /* 32-bit mult ovf th for base 14.  */
 117:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 15u),         /* 32-bit mult ovf th for base 15.  */
 118:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 16u),         /* 32-bit mult ovf th for base 16.  */
 119:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 17u),         /* 32-bit mult ovf th for base 17.  */
 120:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 18u),         /* 32-bit mult ovf th for base 18.  */
 121:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 19u),         /* 32-bit mult ovf th for base 19.  */
 122:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 20u),         /* 32-bit mult ovf th for base 20.  */
 123:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 21u),         /* 32-bit mult ovf th for base 21.  */
 124:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 22u),         /* 32-bit mult ovf th for base 22.  */
 125:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 23u),         /* 32-bit mult ovf th for base 23.  */
 126:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 24u),         /* 32-bit mult ovf th for base 24.  */
 127:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 25u),         /* 32-bit mult ovf th for base 25.  */
 128:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 26u),         /* 32-bit mult ovf th for base 26.  */
 129:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 27u),         /* 32-bit mult ovf th for base 27.  */
 130:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 28u),         /* 32-bit mult ovf th for base 28.  */
 131:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 29u),         /* 32-bit mult ovf th for base 29.  */
 132:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 30u),         /* 32-bit mult ovf th for base 30.  */
 133:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 31u),         /* 32-bit mult ovf th for base 31.  */
 134:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 32u),         /* 32-bit mult ovf th for base 32.  */
 135:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 33u),         /* 32-bit mult ovf th for base 33.  */
 136:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 34u),         /* 32-bit mult ovf th for base 34.  */
 137:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 35u),         /* 32-bit mult ovf th for base 35.  */
 138:uC-LIB/lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 36u)          /* 32-bit mult ovf th for base 36.  */
 139:uC-LIB/lib_str.c **** };
 140:uC-LIB/lib_str.c **** 
 141:uC-LIB/lib_str.c **** 
 142:uC-LIB/lib_str.c **** /*
 143:uC-LIB/lib_str.c **** ***************************************************************************************************
 144:uC-LIB/lib_str.c **** *                                       LOCAL GLOBAL VARIABLES
 145:uC-LIB/lib_str.c **** ***************************************************************************************************
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 4


 146:uC-LIB/lib_str.c **** */
 147:uC-LIB/lib_str.c **** 
 148:uC-LIB/lib_str.c **** 
 149:uC-LIB/lib_str.c **** /*$PAGE*/
 150:uC-LIB/lib_str.c **** /*
 151:uC-LIB/lib_str.c **** ***************************************************************************************************
 152:uC-LIB/lib_str.c **** *                                      LOCAL FUNCTION PROTOTYPES
 153:uC-LIB/lib_str.c **** ***************************************************************************************************
 154:uC-LIB/lib_str.c **** */
 155:uC-LIB/lib_str.c **** 
 156:uC-LIB/lib_str.c **** static  CPU_CHAR    *Str_FmtNbr_Int32  (       CPU_INT32U     nbr,
 157:uC-LIB/lib_str.c ****                                                CPU_INT08U     nbr_dig,
 158:uC-LIB/lib_str.c ****                                                CPU_INT08U     nbr_base,
 159:uC-LIB/lib_str.c ****                                                CPU_BOOLEAN    nbr_neg,
 160:uC-LIB/lib_str.c ****                                                CPU_CHAR       lead_char,
 161:uC-LIB/lib_str.c ****                                                CPU_BOOLEAN    lower_case,
 162:uC-LIB/lib_str.c ****                                                CPU_BOOLEAN    nul,
 163:uC-LIB/lib_str.c ****                                                CPU_CHAR      *pstr);
 164:uC-LIB/lib_str.c **** 
 165:uC-LIB/lib_str.c **** static  CPU_INT32U   Str_ParseNbr_Int32(const  CPU_CHAR      *pstr,
 166:uC-LIB/lib_str.c ****                                                CPU_CHAR     **pstr_next,
 167:uC-LIB/lib_str.c ****                                                CPU_INT08U     nbr_base,
 168:uC-LIB/lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
 169:uC-LIB/lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg);
 170:uC-LIB/lib_str.c **** 
 171:uC-LIB/lib_str.c **** 
 172:uC-LIB/lib_str.c **** /*
 173:uC-LIB/lib_str.c **** ***************************************************************************************************
 174:uC-LIB/lib_str.c **** *                                     LOCAL CONFIGURATION ERRORS
 175:uC-LIB/lib_str.c **** ***************************************************************************************************
 176:uC-LIB/lib_str.c **** */
 177:uC-LIB/lib_str.c **** 
 178:uC-LIB/lib_str.c **** 
 179:uC-LIB/lib_str.c **** /*$PAGE*/
 180:uC-LIB/lib_str.c **** /*
 181:uC-LIB/lib_str.c **** ***************************************************************************************************
 182:uC-LIB/lib_str.c **** *                                              Str_Len()
 183:uC-LIB/lib_str.c **** *
 184:uC-LIB/lib_str.c **** * Description : Calculate length of a string.
 185:uC-LIB/lib_str.c **** *
 186:uC-LIB/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 187:uC-LIB/lib_str.c **** *
 188:uC-LIB/lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character 
 189:uC-LIB/lib_str.c **** *                   (see Note #2b1).
 190:uC-LIB/lib_str.c **** *
 191:uC-LIB/lib_str.c **** * Caller(s)   : Application.
 192:uC-LIB/lib_str.c **** *
 193:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 194:uC-LIB/lib_str.c **** *
 195:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 196:uC-LIB/lib_str.c **** *
 197:uC-LIB/lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 198:uC-LIB/lib_str.c **** *                            which 's' ('pstr') points," ...
 199:uC-LIB/lib_str.c **** *                       (2) "not including the terminating null byte."
 200:uC-LIB/lib_str.c **** *
 201:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 202:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 5


 203:uC-LIB/lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 204:uC-LIB/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 205:uC-LIB/lib_str.c **** *
 206:uC-LIB/lib_str.c **** *               (3) String length calculation terminates when :
 207:uC-LIB/lib_str.c **** *
 208:uC-LIB/lib_str.c **** *                   (a) String pointer points to NULL.
 209:uC-LIB/lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 210:uC-LIB/lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 211:uC-LIB/lib_str.c **** *                           the NULL address.
 212:uC-LIB/lib_str.c **** *
 213:uC-LIB/lib_str.c **** *                   (b) Terminating NULL character found.
 214:uC-LIB/lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 215:uC-LIB/lib_str.c **** *                           the NULL character (see Note #2a2).
 216:uC-LIB/lib_str.c **** ***************************************************************************************************
 217:uC-LIB/lib_str.c **** */
 218:uC-LIB/lib_str.c **** 
 219:uC-LIB/lib_str.c **** CPU_SIZE_T  Str_Len (const  CPU_CHAR  *pstr)
 220:uC-LIB/lib_str.c **** {
 221:uC-LIB/lib_str.c ****     CPU_SIZE_T  len;
 222:uC-LIB/lib_str.c **** 
 223:uC-LIB/lib_str.c **** 
 224:uC-LIB/lib_str.c ****     len = Str_Len_N(pstr,
 225:uC-LIB/lib_str.c ****                     DEF_INT_CPU_U_MAX_VAL);
 226:uC-LIB/lib_str.c **** 
 227:uC-LIB/lib_str.c ****     return (len);
 228:uC-LIB/lib_str.c **** }
 229:uC-LIB/lib_str.c **** 
 230:uC-LIB/lib_str.c **** 
 231:uC-LIB/lib_str.c **** /*$PAGE*/
 232:uC-LIB/lib_str.c **** /*
 233:uC-LIB/lib_str.c **** ***************************************************************************************************
 234:uC-LIB/lib_str.c **** *                                             Str_Len_N()
 235:uC-LIB/lib_str.c **** *
 236:uC-LIB/lib_str.c **** * Description : Calculate length of a string, up to a maximum number of characters.
 237:uC-LIB/lib_str.c **** *
 238:uC-LIB/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 239:uC-LIB/lib_str.c **** *
 240:uC-LIB/lib_str.c **** *               len_max     Maximum number of characters to search (see Note #3c).
 241:uC-LIB/lib_str.c **** *
 242:uC-LIB/lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character,
 243:uC-LIB/lib_str.c **** *                   if terminating NULL character     found (see Note #2b1).
 244:uC-LIB/lib_str.c **** *
 245:uC-LIB/lib_str.c **** *               Requested maximum number of characters to search, 
 246:uC-LIB/lib_str.c **** *                   if terminating NULL character NOT found (see Note #3c).
 247:uC-LIB/lib_str.c **** *
 248:uC-LIB/lib_str.c **** * Caller(s)   : Application.
 249:uC-LIB/lib_str.c **** *
 250:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 251:uC-LIB/lib_str.c **** *
 252:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 253:uC-LIB/lib_str.c **** *
 254:uC-LIB/lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 255:uC-LIB/lib_str.c **** *                            which 's' ('pstr') points," ...
 256:uC-LIB/lib_str.c **** *                       (2) "not including the terminating null byte."
 257:uC-LIB/lib_str.c **** *
 258:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 259:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 6


 260:uC-LIB/lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 261:uC-LIB/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 262:uC-LIB/lib_str.c **** *
 263:uC-LIB/lib_str.c **** *               (3) String length calculation terminates when :
 264:uC-LIB/lib_str.c **** *
 265:uC-LIB/lib_str.c **** *                   (a) String pointer points to NULL.
 266:uC-LIB/lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 267:uC-LIB/lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 268:uC-LIB/lib_str.c **** *                           the NULL address.
 269:uC-LIB/lib_str.c **** *
 270:uC-LIB/lib_str.c **** *                   (b) Terminating NULL character found.
 271:uC-LIB/lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 272:uC-LIB/lib_str.c **** *                           the NULL character (see Note #2a2).
 273:uC-LIB/lib_str.c **** *
 274:uC-LIB/lib_str.c **** *                   (c) 'len_max' number of characters searched.
 275:uC-LIB/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 276:uC-LIB/lib_str.c **** ***************************************************************************************************
 277:uC-LIB/lib_str.c **** */
 278:uC-LIB/lib_str.c **** 
 279:uC-LIB/lib_str.c **** CPU_SIZE_T  Str_Len_N (const  CPU_CHAR    *pstr,
 280:uC-LIB/lib_str.c ****                               CPU_SIZE_T   len_max)
 281:uC-LIB/lib_str.c **** {
 282:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_len;
 283:uC-LIB/lib_str.c ****            CPU_SIZE_T   len;
 284:uC-LIB/lib_str.c **** 
 285:uC-LIB/lib_str.c **** 
 286:uC-LIB/lib_str.c ****     pstr_len = pstr;
 287:uC-LIB/lib_str.c ****     len      = 0u;
 288:uC-LIB/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 289:uC-LIB/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 290:uC-LIB/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 291:uC-LIB/lib_str.c ****         pstr_len++;
 292:uC-LIB/lib_str.c ****         len++;
 293:uC-LIB/lib_str.c ****     }
 294:uC-LIB/lib_str.c **** 
 295:uC-LIB/lib_str.c ****     return (len);                                               /* Rtn str len (see Note #3b1).    
 296:uC-LIB/lib_str.c **** }
 297:uC-LIB/lib_str.c **** 
 298:uC-LIB/lib_str.c **** 
 299:uC-LIB/lib_str.c **** /*$PAGE*/
 300:uC-LIB/lib_str.c **** /*
 301:uC-LIB/lib_str.c **** ***************************************************************************************************
 302:uC-LIB/lib_str.c **** *                                             Str_Copy()
 303:uC-LIB/lib_str.c **** *
 304:uC-LIB/lib_str.c **** * Description : Copy source string to destination string buffer.
 305:uC-LIB/lib_str.c **** *
 306:uC-LIB/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
 307:uC-LIB/lib_str.c **** *
 308:uC-LIB/lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 309:uC-LIB/lib_str.c **** *
 310:uC-LIB/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 311:uC-LIB/lib_str.c **** *
 312:uC-LIB/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 313:uC-LIB/lib_str.c **** *
 314:uC-LIB/lib_str.c **** * Caller(s)   : Application.
 315:uC-LIB/lib_str.c **** *
 316:uC-LIB/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 7


 317:uC-LIB/lib_str.c **** *
 318:uC-LIB/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 319:uC-LIB/lib_str.c **** *                           string size including the terminating NULL character.
 320:uC-LIB/lib_str.c **** *
 321:uC-LIB/lib_str.c **** *                   (b) Source buffer NOT modified.
 322:uC-LIB/lib_str.c **** *
 323:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 324:uC-LIB/lib_str.c **** *
 325:uC-LIB/lib_str.c **** *                       (1) "The strcpy() function shall copy the string pointed to by 's2' ('pstr_
 326:uC-LIB/lib_str.c **** *                            ... into the array pointed to by 's1' ('pstr_dest')" ...
 327:uC-LIB/lib_str.c **** *                       (2) "(including the terminating null byte)."
 328:uC-LIB/lib_str.c **** *
 329:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : RETURN VALUE' states tha
 330:uC-LIB/lib_str.c **** *
 331:uC-LIB/lib_str.c **** *                       (1) "The strcpy() function shall return 's1' ('pstr_dest');" ...
 332:uC-LIB/lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 333:uC-LIB/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 334:uC-LIB/lib_str.c **** *                               NULL for any error(s).
 335:uC-LIB/lib_str.c **** *
 336:uC-LIB/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 337:uC-LIB/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 338:uC-LIB/lib_str.c **** *
 339:uC-LIB/lib_str.c **** *               (3) String copy terminates when :
 340:uC-LIB/lib_str.c **** *
 341:uC-LIB/lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 342:uC-LIB/lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 343:uC-LIB/lib_str.c **** *
 344:uC-LIB/lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 345:uC-LIB/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 346:uC-LIB/lib_str.c **** *
 347:uC-LIB/lib_str.c **** *                   (c) Source string's terminating NULL character found.
 348:uC-LIB/lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 349:uC-LIB/lib_str.c **** ***************************************************************************************************
 350:uC-LIB/lib_str.c **** */
 351:uC-LIB/lib_str.c **** 
 352:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Copy (       CPU_CHAR  *pstr_dest,
 353:uC-LIB/lib_str.c ****                      const  CPU_CHAR  *pstr_src)
 354:uC-LIB/lib_str.c **** {
 355:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 356:uC-LIB/lib_str.c **** 
 357:uC-LIB/lib_str.c **** 
 358:uC-LIB/lib_str.c ****     pstr_rtn = Str_Copy_N(pstr_dest,
 359:uC-LIB/lib_str.c ****                           pstr_src,
 360:uC-LIB/lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL);
 361:uC-LIB/lib_str.c **** 
 362:uC-LIB/lib_str.c ****     return (pstr_rtn);
 363:uC-LIB/lib_str.c **** }
 364:uC-LIB/lib_str.c **** 
 365:uC-LIB/lib_str.c **** 
 366:uC-LIB/lib_str.c **** /*$PAGE*/
 367:uC-LIB/lib_str.c **** /*
 368:uC-LIB/lib_str.c **** ***************************************************************************************************
 369:uC-LIB/lib_str.c **** *                                            Str_Copy_N()
 370:uC-LIB/lib_str.c **** *
 371:uC-LIB/lib_str.c **** * Description : Copy source string to destination string buffer, up to a maximum number of characte
 372:uC-LIB/lib_str.c **** *
 373:uC-LIB/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 8


 374:uC-LIB/lib_str.c **** *
 375:uC-LIB/lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 376:uC-LIB/lib_str.c **** *
 377:uC-LIB/lib_str.c **** *               len_max     Maximum number of characters  to copy (see Notes #2a2 & #3d).
 378:uC-LIB/lib_str.c **** *
 379:uC-LIB/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 380:uC-LIB/lib_str.c **** *
 381:uC-LIB/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 382:uC-LIB/lib_str.c **** *
 383:uC-LIB/lib_str.c **** * Caller(s)   : Application.
 384:uC-LIB/lib_str.c **** *
 385:uC-LIB/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 386:uC-LIB/lib_str.c **** *
 387:uC-LIB/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 388:uC-LIB/lib_str.c **** *                           string size including the terminating NULL character.
 389:uC-LIB/lib_str.c **** *
 390:uC-LIB/lib_str.c **** *                   (b) Source string buffer NOT modified.
 391:uC-LIB/lib_str.c **** *
 392:uC-LIB/lib_str.c **** *               (2) (a) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states
 393:uC-LIB/lib_str.c **** *
 394:uC-LIB/lib_str.c **** *                           (A) "The strncpy() function shall copy ... the array pointed to by 's2'
 395:uC-LIB/lib_str.c **** *                               ('pstr_src') to the array pointed to by 's1' ('pstr_dest')"; ...
 396:uC-LIB/lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes"                   ...
 397:uC-LIB/lib_str.c **** *                           (C)  &   "(bytes that follow a null byte are not copied)".
 398:uC-LIB/lib_str.c **** *
 399:uC-LIB/lib_str.c **** *                       (2) (A) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' ad
 400:uC-LIB/lib_str.c **** *                              "if the array pointed to by 's2' ('pstr_src') is a string that is sh
 401:uC-LIB/lib_str.c **** *                               than 'n' ('len_max') bytes, null bytes shall be appended to the cop
 402:uC-LIB/lib_str.c **** *                               the array pointed to by 's1' ('pstr_dest'), until 'n' ('len_max') b
 403:uC-LIB/lib_str.c **** *                               in all are written."
 404:uC-LIB/lib_str.c **** *
 405:uC-LIB/lib_str.c **** *                               (1) #### Since Str_Copy() limits the maximum number of characters t
 406:uC-LIB/lib_str.c **** *                                   via Str_Copy_N() by the CPU's maximum number of addressable cha
 407:uC-LIB/lib_str.c **** *                                   this requirement is intentionally NOT implemented to avoid appe
 408:uC-LIB/lib_str.c **** *                                   a potentially large number of unnecessary terminating NULL char
 409:uC-LIB/lib_str.c **** *
 410:uC-LIB/lib_str.c **** *                           (B) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : APPLICATION USA
 411:uC-LIB/lib_str.c **** *                               states that "if there is no null byte in the first 'n' ('len_max') 
 412:uC-LIB/lib_str.c **** *                               the array pointed to by 's2' ('pstr_src'), the result is not null-t
 413:uC-LIB/lib_str.c **** *
 414:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : RETURN VALUE' states th
 415:uC-LIB/lib_str.c **** *
 416:uC-LIB/lib_str.c **** *                       (1) "The strncpy() function shall return 's1' ('pstr_dest');" ...
 417:uC-LIB/lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 418:uC-LIB/lib_str.c **** *                           (A) #### This requirement is intentionally ignored in order to return N
 419:uC-LIB/lib_str.c **** *                               for any error(s).
 420:uC-LIB/lib_str.c **** *
 421:uC-LIB/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states tha
 422:uC-LIB/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 423:uC-LIB/lib_str.c **** *
 424:uC-LIB/lib_str.c **** *               (3) String copy terminates when :
 425:uC-LIB/lib_str.c **** *
 426:uC-LIB/lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 427:uC-LIB/lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 428:uC-LIB/lib_str.c **** *
 429:uC-LIB/lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 430:uC-LIB/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 9


 431:uC-LIB/lib_str.c **** *
 432:uC-LIB/lib_str.c **** *                   (c) Source string's terminating NULL character found.
 433:uC-LIB/lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 434:uC-LIB/lib_str.c **** *
 435:uC-LIB/lib_str.c **** *                   (d) 'len_max' number of characters copied.
 436:uC-LIB/lib_str.c **** *                       (1) 'len_max' number of characters MAY include the terminating NULL charact
 437:uC-LIB/lib_str.c **** *                           (see Note #2a1C).
 438:uC-LIB/lib_str.c **** *                       (2) Null copies allowed (i.e. zero-length copies).
 439:uC-LIB/lib_str.c **** *                           (A) No string copy performed; destination string returned  (see Note #2
 440:uC-LIB/lib_str.c **** ***************************************************************************************************
 441:uC-LIB/lib_str.c **** */
 442:uC-LIB/lib_str.c **** /*$PAGE*/
 443:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Copy_N (       CPU_CHAR    *pstr_dest,
 444:uC-LIB/lib_str.c ****                        const  CPU_CHAR    *pstr_src,
 445:uC-LIB/lib_str.c ****                               CPU_SIZE_T   len_max)
 446:uC-LIB/lib_str.c **** {
 447:uC-LIB/lib_str.c ****            CPU_CHAR    *pstr_copy_dest;
 448:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_copy_src;
 449:uC-LIB/lib_str.c ****            CPU_SIZE_T   len_copy;
 450:uC-LIB/lib_str.c **** 
 451:uC-LIB/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 452:uC-LIB/lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 453:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 454:uC-LIB/lib_str.c ****     }
 455:uC-LIB/lib_str.c ****     if (pstr_src  == (const CPU_CHAR *)0) {
 456:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 457:uC-LIB/lib_str.c ****     }
 458:uC-LIB/lib_str.c **** 
 459:uC-LIB/lib_str.c **** 
 460:uC-LIB/lib_str.c ****     pstr_copy_dest = pstr_dest;
 461:uC-LIB/lib_str.c ****     pstr_copy_src  = pstr_src;
 462:uC-LIB/lib_str.c ****     len_copy       = 0u;
 463:uC-LIB/lib_str.c **** 
 464:uC-LIB/lib_str.c ****     while (( pstr_copy_dest != (      CPU_CHAR *)  0 ) &&       /* Copy str until NULL ptr(s)  [see
 465:uC-LIB/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 466:uC-LIB/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 467:uC-LIB/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 468:uC-LIB/lib_str.c ****        *pstr_copy_dest = *pstr_copy_src;
 469:uC-LIB/lib_str.c ****         pstr_copy_dest++;
 470:uC-LIB/lib_str.c ****         pstr_copy_src++;
 471:uC-LIB/lib_str.c ****         len_copy++;
 472:uC-LIB/lib_str.c ****     }
 473:uC-LIB/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found  (
 474:uC-LIB/lib_str.c ****     if ((pstr_copy_dest == (      CPU_CHAR *)0) ||
 475:uC-LIB/lib_str.c ****         (pstr_copy_src  == (const CPU_CHAR *)0)) {
 476:uC-LIB/lib_str.c ****          return ((CPU_CHAR *)0);
 477:uC-LIB/lib_str.c ****     }
 478:uC-LIB/lib_str.c **** 
 479:uC-LIB/lib_str.c ****     if (len_copy < len_max) {                                   /* If  copy str len < max buf len (
 480:uC-LIB/lib_str.c ****        *pstr_copy_dest = (CPU_CHAR)'\0';                        /* ... copy NULL char  (see Note #3
 481:uC-LIB/lib_str.c ****     }
 482:uC-LIB/lib_str.c **** 
 483:uC-LIB/lib_str.c **** 
 484:uC-LIB/lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 485:uC-LIB/lib_str.c **** }
 486:uC-LIB/lib_str.c **** 
 487:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 10


 488:uC-LIB/lib_str.c **** /*$PAGE*/
 489:uC-LIB/lib_str.c **** /*
 490:uC-LIB/lib_str.c **** ***************************************************************************************************
 491:uC-LIB/lib_str.c **** *                                              Str_Cat()
 492:uC-LIB/lib_str.c **** *
 493:uC-LIB/lib_str.c **** * Description : Append concatenation string to destination string.
 494:uC-LIB/lib_str.c **** *
 495:uC-LIB/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 496:uC-LIB/lib_str.c **** *
 497:uC-LIB/lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 498:uC-LIB/lib_str.c **** *
 499:uC-LIB/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 500:uC-LIB/lib_str.c **** *
 501:uC-LIB/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 502:uC-LIB/lib_str.c **** *
 503:uC-LIB/lib_str.c **** * Caller(s)   : Application.
 504:uC-LIB/lib_str.c **** *
 505:uC-LIB/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 506:uC-LIB/lib_str.c **** *
 507:uC-LIB/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 508:uC-LIB/lib_str.c **** *                           concatenated string size including the terminating NULL character.
 509:uC-LIB/lib_str.c **** *
 510:uC-LIB/lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 511:uC-LIB/lib_str.c **** *
 512:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 513:uC-LIB/lib_str.c **** *
 514:uC-LIB/lib_str.c **** *                       (1) "The strcat() function shall append a copy of the string pointed to by 
 515:uC-LIB/lib_str.c **** *                           ('pstr_cat') ... to the end of the string pointed to by 's1' ('pstr_des
 516:uC-LIB/lib_str.c **** *
 517:uC-LIB/lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 518:uC-LIB/lib_str.c **** *                                end of 's1' ('pstr_dest')."
 519:uC-LIB/lib_str.c **** *                           (B)  A "terminating null byte" is appended at the end of the concatenat
 520:uC-LIB/lib_str.c **** *                                destination strings.
 521:uC-LIB/lib_str.c **** *
 522:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : RETURN VALUE' states tha
 523:uC-LIB/lib_str.c **** *
 524:uC-LIB/lib_str.c **** *                       (1) "The strcat() function shall return 's1' ('pstr_dest');" ...
 525:uC-LIB/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 526:uC-LIB/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 527:uC-LIB/lib_str.c **** *                               NULL for any error(s).
 528:uC-LIB/lib_str.c **** *
 529:uC-LIB/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 530:uC-LIB/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 531:uC-LIB/lib_str.c **** *
 532:uC-LIB/lib_str.c **** *               (3) String concatenation terminates when :
 533:uC-LIB/lib_str.c **** *
 534:uC-LIB/lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 535:uC-LIB/lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 536:uC-LIB/lib_str.c **** *
 537:uC-LIB/lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 538:uC-LIB/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 539:uC-LIB/lib_str.c **** *
 540:uC-LIB/lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 541:uC-LIB/lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 542:uC-LIB/lib_str.c **** ***************************************************************************************************
 543:uC-LIB/lib_str.c **** */
 544:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 11


 545:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Cat (       CPU_CHAR  *pstr_dest,
 546:uC-LIB/lib_str.c ****                     const  CPU_CHAR  *pstr_cat)
 547:uC-LIB/lib_str.c **** {
 548:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 549:uC-LIB/lib_str.c **** 
 550:uC-LIB/lib_str.c **** 
 551:uC-LIB/lib_str.c ****     pstr_rtn = Str_Cat_N(pstr_dest,
 552:uC-LIB/lib_str.c ****                          pstr_cat,
 553:uC-LIB/lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
 554:uC-LIB/lib_str.c **** 
 555:uC-LIB/lib_str.c ****     return (pstr_rtn);
 556:uC-LIB/lib_str.c **** }
 557:uC-LIB/lib_str.c **** 
 558:uC-LIB/lib_str.c **** 
 559:uC-LIB/lib_str.c **** /*$PAGE*/
 560:uC-LIB/lib_str.c **** /*
 561:uC-LIB/lib_str.c **** ***************************************************************************************************
 562:uC-LIB/lib_str.c **** *                                             Str_Cat_N()
 563:uC-LIB/lib_str.c **** *
 564:uC-LIB/lib_str.c **** * Description : Append concatenation string to destination string, up to a maximum number of charac
 565:uC-LIB/lib_str.c **** *
 566:uC-LIB/lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 567:uC-LIB/lib_str.c **** *
 568:uC-LIB/lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 569:uC-LIB/lib_str.c **** *
 570:uC-LIB/lib_str.c **** *               len_max     Maximum number of characters to concatenate (see Notes #2a1B & #3d).
 571:uC-LIB/lib_str.c **** *
 572:uC-LIB/lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 573:uC-LIB/lib_str.c **** *
 574:uC-LIB/lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 575:uC-LIB/lib_str.c **** *
 576:uC-LIB/lib_str.c **** * Caller(s)   : Application.
 577:uC-LIB/lib_str.c **** *
 578:uC-LIB/lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 579:uC-LIB/lib_str.c **** *
 580:uC-LIB/lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 581:uC-LIB/lib_str.c **** *                           concatenated string size including the terminating NULL character.
 582:uC-LIB/lib_str.c **** *
 583:uC-LIB/lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 584:uC-LIB/lib_str.c **** *
 585:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 586:uC-LIB/lib_str.c **** *
 587:uC-LIB/lib_str.c **** *                       (1) (A) "The strncat() function shall append ... the array pointed to by 's
 588:uC-LIB/lib_str.c **** *                               ('pstr_cat') to the end of the string pointed to by 's1' ('pstr_des
 589:uC-LIB/lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes".
 590:uC-LIB/lib_str.c **** *
 591:uC-LIB/lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 592:uC-LIB/lib_str.c **** *                                end of 's1' ('pstr_dest')."
 593:uC-LIB/lib_str.c **** *                           (B) "(a null byte and bytes that follow it are not appended)."
 594:uC-LIB/lib_str.c **** *                           (C) "A terminating null byte is always appended to the result."
 595:uC-LIB/lib_str.c **** *
 596:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : RETURN VALUE' states th
 597:uC-LIB/lib_str.c **** *
 598:uC-LIB/lib_str.c **** *                       (1) "The strncat() function shall return 's1' ('pstr_dest');" ...
 599:uC-LIB/lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 600:uC-LIB/lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 601:uC-LIB/lib_str.c **** *                               NULL for any error(s).
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 12


 602:uC-LIB/lib_str.c **** *
 603:uC-LIB/lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 604:uC-LIB/lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 605:uC-LIB/lib_str.c **** *
 606:uC-LIB/lib_str.c **** *               (3) String concatenation terminates when :
 607:uC-LIB/lib_str.c **** *
 608:uC-LIB/lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 609:uC-LIB/lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 610:uC-LIB/lib_str.c **** *
 611:uC-LIB/lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 612:uC-LIB/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 613:uC-LIB/lib_str.c **** *
 614:uC-LIB/lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 615:uC-LIB/lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 616:uC-LIB/lib_str.c **** *
 617:uC-LIB/lib_str.c **** *                   (d) 'len_max' number of characters concatenated.
 618:uC-LIB/lib_str.c **** *
 619:uC-LIB/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 620:uC-LIB/lib_str.c **** *                           (see Note #2a2).
 621:uC-LIB/lib_str.c **** *
 622:uC-LIB/lib_str.c **** *                       (2) Null concatenations allowed (i.e. zero-length concatenations).
 623:uC-LIB/lib_str.c **** *                           (A) No string concatenation performed; destination string returned 
 624:uC-LIB/lib_str.c **** *                               (see Note #2b1).
 625:uC-LIB/lib_str.c **** ***************************************************************************************************
 626:uC-LIB/lib_str.c **** */
 627:uC-LIB/lib_str.c **** /*$PAGE*/
 628:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Cat_N (       CPU_CHAR    *pstr_dest,
 629:uC-LIB/lib_str.c ****                       const  CPU_CHAR    *pstr_cat,
 630:uC-LIB/lib_str.c ****                              CPU_SIZE_T   len_max)
 631:uC-LIB/lib_str.c **** {
 632:uC-LIB/lib_str.c ****            CPU_CHAR    *pstr_cat_dest;
 633:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_cat_src;
 634:uC-LIB/lib_str.c ****            CPU_SIZE_T   len_cat;
 635:uC-LIB/lib_str.c **** 
 636:uC-LIB/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 637:uC-LIB/lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 638:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 639:uC-LIB/lib_str.c ****     }
 640:uC-LIB/lib_str.c ****     if (pstr_cat  == (const CPU_CHAR *)0) {
 641:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 642:uC-LIB/lib_str.c ****     }
 643:uC-LIB/lib_str.c **** 
 644:uC-LIB/lib_str.c ****     if (len_max < 1) {                                          /* Rtn dest str if cat len = 0 (see
 645:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)pstr_dest);
 646:uC-LIB/lib_str.c ****     }
 647:uC-LIB/lib_str.c **** 
 648:uC-LIB/lib_str.c **** 
 649:uC-LIB/lib_str.c ****     pstr_cat_dest = pstr_dest;
 650:uC-LIB/lib_str.c ****     while (( pstr_cat_dest != (CPU_CHAR *)  0 ) &&              /* Adv to end of cur dest str until
 651:uC-LIB/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 652:uC-LIB/lib_str.c ****         pstr_cat_dest++;
 653:uC-LIB/lib_str.c ****     }
 654:uC-LIB/lib_str.c ****     if (pstr_cat_dest == (CPU_CHAR *)0) {                       /* Rtn NULL if NULL ptr found (see 
 655:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 656:uC-LIB/lib_str.c ****     }
 657:uC-LIB/lib_str.c **** 
 658:uC-LIB/lib_str.c ****     pstr_cat_src = pstr_cat;
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 13


 659:uC-LIB/lib_str.c ****     len_cat      = 0u;
 660:uC-LIB/lib_str.c **** 
 661:uC-LIB/lib_str.c ****     while (( pstr_cat_dest != (      CPU_CHAR *)  0 ) &&        /* Cat str until NULL ptr(s)  [see 
 662:uC-LIB/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 663:uC-LIB/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 664:uC-LIB/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 665:uC-LIB/lib_str.c ****        *pstr_cat_dest = *pstr_cat_src;
 666:uC-LIB/lib_str.c ****         pstr_cat_dest++;
 667:uC-LIB/lib_str.c ****         pstr_cat_src++;
 668:uC-LIB/lib_str.c ****         len_cat++;
 669:uC-LIB/lib_str.c ****     }
 670:uC-LIB/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found (s
 671:uC-LIB/lib_str.c ****     if ((pstr_cat_dest == (      CPU_CHAR *)0) ||
 672:uC-LIB/lib_str.c ****         (pstr_cat_src  == (const CPU_CHAR *)0)) {
 673:uC-LIB/lib_str.c ****          return ((CPU_CHAR *)0);
 674:uC-LIB/lib_str.c ****     }
 675:uC-LIB/lib_str.c **** 
 676:uC-LIB/lib_str.c ****    *pstr_cat_dest = (CPU_CHAR)'\0';                             /* Append NULL char    (see Note #2
 677:uC-LIB/lib_str.c **** 
 678:uC-LIB/lib_str.c **** 
 679:uC-LIB/lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 680:uC-LIB/lib_str.c **** }
 681:uC-LIB/lib_str.c **** 
 682:uC-LIB/lib_str.c **** 
 683:uC-LIB/lib_str.c **** /*$PAGE*/
 684:uC-LIB/lib_str.c **** /*
 685:uC-LIB/lib_str.c **** ***************************************************************************************************
 686:uC-LIB/lib_str.c **** *                                              Str_Cmp()
 687:uC-LIB/lib_str.c **** *
 688:uC-LIB/lib_str.c **** * Description : Determine if two strings are identical.
 689:uC-LIB/lib_str.c **** *
 690:uC-LIB/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 691:uC-LIB/lib_str.c **** *
 692:uC-LIB/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 693:uC-LIB/lib_str.c **** *
 694:uC-LIB/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 695:uC-LIB/lib_str.c **** *
 696:uC-LIB/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 697:uC-LIB/lib_str.c **** *
 698:uC-LIB/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 699:uC-LIB/lib_str.c **** *
 700:uC-LIB/lib_str.c **** *               See also Note #2b.
 701:uC-LIB/lib_str.c **** *
 702:uC-LIB/lib_str.c **** * Caller(s)   : Application.
 703:uC-LIB/lib_str.c **** *
 704:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 705:uC-LIB/lib_str.c **** *
 706:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' states that
 707:uC-LIB/lib_str.c **** *                       strcmp() function shall compare the string pointed to by 's1' ('p1_str') to
 708:uC-LIB/lib_str.c **** *                       string pointed to by 's2' ('p2_str)".
 709:uC-LIB/lib_str.c **** *
 710:uC-LIB/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : RETURN VALUE' states
 711:uC-LIB/lib_str.c **** *                          "upon successful completion, strcmp() shall return an integer greater th
 712:uC-LIB/lib_str.c **** *                           equal to, or less than 0".
 713:uC-LIB/lib_str.c **** *
 714:uC-LIB/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 715:uC-LIB/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 14


 716:uC-LIB/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 717:uC-LIB/lib_str.c **** *                           being compared".
 718:uC-LIB/lib_str.c **** *
 719:uC-LIB/lib_str.c **** *               (3) String comparison terminates when :
 720:uC-LIB/lib_str.c **** *
 721:uC-LIB/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 722:uC-LIB/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 723:uC-LIB/lib_str.c **** *
 724:uC-LIB/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 725:uC-LIB/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 726:uC-LIB/lib_str.c **** *
 727:uC-LIB/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 728:uC-LIB/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 729:uC-LIB/lib_str.c **** *
 730:uC-LIB/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 731:uC-LIB/lib_str.c **** *                               (1) Strings overlap with NULL address.
 732:uC-LIB/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 733:uC-LIB/lib_str.c **** *                                   0 returned.
 734:uC-LIB/lib_str.c **** *
 735:uC-LIB/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 736:uC-LIB/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 737:uC-LIB/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 738:uC-LIB/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 739:uC-LIB/lib_str.c **** *
 740:uC-LIB/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 741:uC-LIB/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 742:uC-LIB/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 743:uC-LIB/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 744:uC-LIB/lib_str.c **** *
 745:uC-LIB/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 746:uC-LIB/lib_str.c **** *                       (1) Strings identical; 0 returned.
 747:uC-LIB/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 748:uC-LIB/lib_str.c **** *                           tested character equality.
 749:uC-LIB/lib_str.c **** *
 750:uC-LIB/lib_str.c **** *                   (c) Non-matching characters found.
 751:uC-LIB/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 752:uC-LIB/lib_str.c **** *                           from the character pointed to by 'p1_str'.
 753:uC-LIB/lib_str.c **** *
 754:uC-LIB/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 755:uC-LIB/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 756:uC-LIB/lib_str.c **** ***************************************************************************************************
 757:uC-LIB/lib_str.c **** */
 758:uC-LIB/lib_str.c **** 
 759:uC-LIB/lib_str.c **** CPU_INT16S  Str_Cmp (const  CPU_CHAR  *p1_str,
 760:uC-LIB/lib_str.c ****                      const  CPU_CHAR  *p2_str)
 761:uC-LIB/lib_str.c **** {
 762:uC-LIB/lib_str.c ****     CPU_INT16S  cmp_val;
 763:uC-LIB/lib_str.c **** 
 764:uC-LIB/lib_str.c **** 
 765:uC-LIB/lib_str.c ****     cmp_val = Str_Cmp_N(p1_str,
 766:uC-LIB/lib_str.c ****                         p2_str,
 767:uC-LIB/lib_str.c ****                         DEF_INT_CPU_U_MAX_VAL);
 768:uC-LIB/lib_str.c **** 
 769:uC-LIB/lib_str.c ****     return (cmp_val);
 770:uC-LIB/lib_str.c **** }
 771:uC-LIB/lib_str.c **** 
 772:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 15


 773:uC-LIB/lib_str.c **** /*$PAGE*/
 774:uC-LIB/lib_str.c **** /*
 775:uC-LIB/lib_str.c **** ***************************************************************************************************
 776:uC-LIB/lib_str.c **** *                                             Str_Cmp_N()
 777:uC-LIB/lib_str.c **** *
 778:uC-LIB/lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters.
 779:uC-LIB/lib_str.c **** *
 780:uC-LIB/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 781:uC-LIB/lib_str.c **** *
 782:uC-LIB/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 783:uC-LIB/lib_str.c **** *
 784:uC-LIB/lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
 785:uC-LIB/lib_str.c **** *
 786:uC-LIB/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
 787:uC-LIB/lib_str.c **** *
 788:uC-LIB/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 789:uC-LIB/lib_str.c **** *
 790:uC-LIB/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 791:uC-LIB/lib_str.c **** *
 792:uC-LIB/lib_str.c **** *               See also Note #2b.
 793:uC-LIB/lib_str.c **** *
 794:uC-LIB/lib_str.c **** * Caller(s)   : Application.
 795:uC-LIB/lib_str.c **** *
 796:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 797:uC-LIB/lib_str.c **** *
 798:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' states tha
 799:uC-LIB/lib_str.c **** *
 800:uC-LIB/lib_str.c **** *                       (1) "The strncmp() function shall compare ... the array pointed to by 's1' 
 801:uC-LIB/lib_str.c **** *                            to the array pointed to by 's2' ('p2_str)" ...
 802:uC-LIB/lib_str.c **** *                       (2)  but "not more than 'n' ('len_max') bytes" of either array.
 803:uC-LIB/lib_str.c **** *
 804:uC-LIB/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : RETURN VALUE' state
 805:uC-LIB/lib_str.c **** *                          "upon successful completion, strncmp() shall return an integer greater t
 806:uC-LIB/lib_str.c **** *                           equal to, or less than 0".
 807:uC-LIB/lib_str.c **** *
 808:uC-LIB/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' adds t
 809:uC-LIB/lib_str.c **** *                          "the sign of a non-zero return value is determined by the sign of the di
 810:uC-LIB/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 811:uC-LIB/lib_str.c **** *                           being compared".
 812:uC-LIB/lib_str.c **** *
 813:uC-LIB/lib_str.c **** *               (3) String comparison terminates when :
 814:uC-LIB/lib_str.c **** *
 815:uC-LIB/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 816:uC-LIB/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 817:uC-LIB/lib_str.c **** *
 818:uC-LIB/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 819:uC-LIB/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 820:uC-LIB/lib_str.c **** *
 821:uC-LIB/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 822:uC-LIB/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 823:uC-LIB/lib_str.c **** *
 824:uC-LIB/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 825:uC-LIB/lib_str.c **** *                               (1) Strings overlap with NULL address.
 826:uC-LIB/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 827:uC-LIB/lib_str.c **** *                                   0 returned.
 828:uC-LIB/lib_str.c **** *
 829:uC-LIB/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 16


 830:uC-LIB/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 831:uC-LIB/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 832:uC-LIB/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 833:uC-LIB/lib_str.c **** *
 834:uC-LIB/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 835:uC-LIB/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 836:uC-LIB/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 837:uC-LIB/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 838:uC-LIB/lib_str.c **** *
 839:uC-LIB/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 840:uC-LIB/lib_str.c **** *                       (1) Strings identical; 0 returned.
 841:uC-LIB/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 842:uC-LIB/lib_str.c **** *                           tested character equality.
 843:uC-LIB/lib_str.c **** *
 844:uC-LIB/lib_str.c **** *                   (c) Non-matching characters found.
 845:uC-LIB/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 846:uC-LIB/lib_str.c **** *                           from the character pointed to by 'p1_str'.
 847:uC-LIB/lib_str.c **** *
 848:uC-LIB/lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
 849:uC-LIB/lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
 850:uC-LIB/lib_str.c **** *
 851:uC-LIB/lib_str.c **** *                       (2) First 'len_max' number of characters identical.
 852:uC-LIB/lib_str.c **** *                           (A) Strings identical; 0 returned.
 853:uC-LIB/lib_str.c **** *
 854:uC-LIB/lib_str.c **** *                       See also Note #2a2.
 855:uC-LIB/lib_str.c **** *
 856:uC-LIB/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 857:uC-LIB/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 858:uC-LIB/lib_str.c **** ***************************************************************************************************
 859:uC-LIB/lib_str.c **** */
 860:uC-LIB/lib_str.c **** /*$PAGE*/
 861:uC-LIB/lib_str.c **** CPU_INT16S  Str_Cmp_N (const  CPU_CHAR    *p1_str,
 862:uC-LIB/lib_str.c ****                        const  CPU_CHAR    *p2_str,
 863:uC-LIB/lib_str.c ****                               CPU_SIZE_T   len_max)
 864:uC-LIB/lib_str.c **** {
 865:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 866:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
 867:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
 868:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
 869:uC-LIB/lib_str.c ****            CPU_INT16S   cmp_val;
 870:uC-LIB/lib_str.c ****            CPU_SIZE_T   cmp_len;
 871:uC-LIB/lib_str.c **** 
 872:uC-LIB/lib_str.c **** 
 873:uC-LIB/lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
 874:uC-LIB/lib_str.c ****         return (0);
 875:uC-LIB/lib_str.c ****     }
 876:uC-LIB/lib_str.c **** 
 877:uC-LIB/lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
 878:uC-LIB/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 879:uC-LIB/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 880:uC-LIB/lib_str.c ****         }
 881:uC-LIB/lib_str.c ****         cmp_val = (CPU_INT16S)0 - (CPU_INT16S)(*p2_str);
 882:uC-LIB/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 883:uC-LIB/lib_str.c ****     }
 884:uC-LIB/lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
 885:uC-LIB/lib_str.c ****         cmp_val = (CPU_INT16S)(*p1_str);
 886:uC-LIB/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 17


 887:uC-LIB/lib_str.c ****     }
 888:uC-LIB/lib_str.c **** 
 889:uC-LIB/lib_str.c **** 
 890:uC-LIB/lib_str.c ****     p1_str_cmp      = p1_str;
 891:uC-LIB/lib_str.c ****     p2_str_cmp      = p2_str;
 892:uC-LIB/lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
 893:uC-LIB/lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
 894:uC-LIB/lib_str.c ****     p1_str_cmp_next++;
 895:uC-LIB/lib_str.c ****     p2_str_cmp_next++;
 896:uC-LIB/lib_str.c ****     cmp_len         = 0u;
 897:uC-LIB/lib_str.c **** 
 898:uC-LIB/lib_str.c ****     while ((*p1_str_cmp      == *p2_str_cmp)            &&      /* Cmp strs until non-matching char
 899:uC-LIB/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 900:uC-LIB/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 901:uC-LIB/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 902:uC-LIB/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 903:uC-LIB/lib_str.c ****         p1_str_cmp++;
 904:uC-LIB/lib_str.c ****         p2_str_cmp++;
 905:uC-LIB/lib_str.c ****         p1_str_cmp_next++;
 906:uC-LIB/lib_str.c ****         p2_str_cmp_next++;
 907:uC-LIB/lib_str.c ****         cmp_len++;
 908:uC-LIB/lib_str.c ****     }
 909:uC-LIB/lib_str.c **** 
 910:uC-LIB/lib_str.c **** 
 911:uC-LIB/lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
 912:uC-LIB/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 913:uC-LIB/lib_str.c ****     }
 914:uC-LIB/lib_str.c **** 
 915:uC-LIB/lib_str.c ****     if (*p1_str_cmp != *p2_str_cmp) {                           /* If strs NOT identical, ...      
 916:uC-LIB/lib_str.c ****                                                                 /* ... calc & rtn char diff  (see N
 917:uC-LIB/lib_str.c ****          cmp_val = (CPU_INT16S)(*p1_str_cmp) - (CPU_INT16S)(*p2_str_cmp);
 918:uC-LIB/lib_str.c **** 
 919:uC-LIB/lib_str.c ****     } else if (*p1_str_cmp  == (CPU_CHAR)'\0') {                /* If NULL char(s) found, ...      
 920:uC-LIB/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 921:uC-LIB/lib_str.c **** 
 922:uC-LIB/lib_str.c ****     } else {
 923:uC-LIB/lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
 924:uC-LIB/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 925:uC-LIB/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 926:uC-LIB/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
 927:uC-LIB/lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
 928:uC-LIB/lib_str.c ****                 cmp_val = (CPU_INT16S)0 - (CPU_INT16S)(*p2_str_cmp_next);
 929:uC-LIB/lib_str.c ****             }
 930:uC-LIB/lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
 931:uC-LIB/lib_str.c ****             cmp_val = (CPU_INT16S)(*p1_str_cmp_next);           /* ... rtn pos p1_str_cmp_next val 
 932:uC-LIB/lib_str.c ****         }
 933:uC-LIB/lib_str.c ****     }
 934:uC-LIB/lib_str.c **** 
 935:uC-LIB/lib_str.c **** 
 936:uC-LIB/lib_str.c ****     return (cmp_val);
 937:uC-LIB/lib_str.c **** }
 938:uC-LIB/lib_str.c **** 
 939:uC-LIB/lib_str.c **** 
 940:uC-LIB/lib_str.c **** /*$PAGE*/
 941:uC-LIB/lib_str.c **** /*
 942:uC-LIB/lib_str.c **** ***************************************************************************************************
 943:uC-LIB/lib_str.c **** *                                         Str_CmpIgnoreCase()
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 18


 944:uC-LIB/lib_str.c **** *
 945:uC-LIB/lib_str.c **** * Description : Determine if two strings are identical, ignoring case.
 946:uC-LIB/lib_str.c **** *
 947:uC-LIB/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 948:uC-LIB/lib_str.c **** *
 949:uC-LIB/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 950:uC-LIB/lib_str.c **** *
 951:uC-LIB/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 952:uC-LIB/lib_str.c **** *
 953:uC-LIB/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 954:uC-LIB/lib_str.c **** *
 955:uC-LIB/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 956:uC-LIB/lib_str.c **** *
 957:uC-LIB/lib_str.c **** *               See also Note #2b.
 958:uC-LIB/lib_str.c **** *
 959:uC-LIB/lib_str.c **** * Caller(s)   : Application.
 960:uC-LIB/lib_str.c **** *
 961:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 962:uC-LIB/lib_str.c **** *
 963:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : DESCRIPTION' states 
 964:uC-LIB/lib_str.c **** *
 965:uC-LIB/lib_str.c **** *                       (1) (A) "The strcasecmp() function shall compare ... the string pointed to 
 966:uC-LIB/lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
 967:uC-LIB/lib_str.c **** *                           (B) "ignoring differences in case".
 968:uC-LIB/lib_str.c **** *
 969:uC-LIB/lib_str.c **** *                       (2) "strcasecmp() ... shall behave as if the strings had been converted to 
 970:uC-LIB/lib_str.c **** *                            and then a byte comparison performed."
 971:uC-LIB/lib_str.c **** *
 972:uC-LIB/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : RETURN VALUE' st
 973:uC-LIB/lib_str.c **** *                          "upon successful completion, strcasecmp() shall return an integer greate
 974:uC-LIB/lib_str.c **** *                           equal to, or less than 0".
 975:uC-LIB/lib_str.c **** *
 976:uC-LIB/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 977:uC-LIB/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
 978:uC-LIB/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 979:uC-LIB/lib_str.c **** *                           being compared".
 980:uC-LIB/lib_str.c **** *
 981:uC-LIB/lib_str.c **** *               (3) String comparison terminates when :
 982:uC-LIB/lib_str.c **** *
 983:uC-LIB/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 984:uC-LIB/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 985:uC-LIB/lib_str.c **** *
 986:uC-LIB/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 987:uC-LIB/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
 988:uC-LIB/lib_str.c **** *                                       to lower case (see Note #2a2).
 989:uC-LIB/lib_str.c **** *
 990:uC-LIB/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 991:uC-LIB/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
 992:uC-LIB/lib_str.c **** *                                       to lower case (see Note #2a2).
 993:uC-LIB/lib_str.c **** *
 994:uC-LIB/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 995:uC-LIB/lib_str.c **** *                               (1) Strings overlap with NULL address.
 996:uC-LIB/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 997:uC-LIB/lib_str.c **** *                                   0 returned.
 998:uC-LIB/lib_str.c **** *
 999:uC-LIB/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
1000:uC-LIB/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 19


1001:uC-LIB/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1002:uC-LIB/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
1003:uC-LIB/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1004:uC-LIB/lib_str.c **** *
1005:uC-LIB/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
1006:uC-LIB/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
1007:uC-LIB/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1008:uC-LIB/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1009:uC-LIB/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1010:uC-LIB/lib_str.c **** *
1011:uC-LIB/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1012:uC-LIB/lib_str.c **** *                       (1) Strings identical; 0 returned.
1013:uC-LIB/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1014:uC-LIB/lib_str.c **** *                           tested character equality.
1015:uC-LIB/lib_str.c **** *
1016:uC-LIB/lib_str.c **** *                   (c) Non-matching characters found.
1017:uC-LIB/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1018:uC-LIB/lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1019:uC-LIB/lib_str.c **** *                           to lower case.
1020:uC-LIB/lib_str.c **** *
1021:uC-LIB/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1022:uC-LIB/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1023:uC-LIB/lib_str.c **** ***************************************************************************************************
1024:uC-LIB/lib_str.c **** */
1025:uC-LIB/lib_str.c **** /*$PAGE*/
1026:uC-LIB/lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase (const  CPU_CHAR  *p1_str,
1027:uC-LIB/lib_str.c ****                                const  CPU_CHAR  *p2_str)
1028:uC-LIB/lib_str.c **** {
1029:uC-LIB/lib_str.c ****     CPU_INT16S  cmp_val;
1030:uC-LIB/lib_str.c **** 
1031:uC-LIB/lib_str.c **** 
1032:uC-LIB/lib_str.c ****     cmp_val = Str_CmpIgnoreCase_N(p1_str,
1033:uC-LIB/lib_str.c ****                                   p2_str,
1034:uC-LIB/lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1035:uC-LIB/lib_str.c **** 
1036:uC-LIB/lib_str.c ****     return (cmp_val);
1037:uC-LIB/lib_str.c **** }
1038:uC-LIB/lib_str.c **** 
1039:uC-LIB/lib_str.c **** 
1040:uC-LIB/lib_str.c **** /*$PAGE*/
1041:uC-LIB/lib_str.c **** /*
1042:uC-LIB/lib_str.c **** ***************************************************************************************************
1043:uC-LIB/lib_str.c **** *                                        Str_CmpIgnoreCase_N()
1044:uC-LIB/lib_str.c **** *
1045:uC-LIB/lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters,
1046:uC-LIB/lib_str.c **** *                   ignoring case.
1047:uC-LIB/lib_str.c **** *
1048:uC-LIB/lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
1049:uC-LIB/lib_str.c **** *
1050:uC-LIB/lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
1051:uC-LIB/lib_str.c **** *
1052:uC-LIB/lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
1053:uC-LIB/lib_str.c **** *
1054:uC-LIB/lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
1055:uC-LIB/lib_str.c **** *
1056:uC-LIB/lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
1057:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 20


1058:uC-LIB/lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
1059:uC-LIB/lib_str.c **** *
1060:uC-LIB/lib_str.c **** *               See also Note #2b.
1061:uC-LIB/lib_str.c **** *
1062:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1063:uC-LIB/lib_str.c **** *
1064:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1065:uC-LIB/lib_str.c **** *
1066:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : DESCRIPTION' states
1067:uC-LIB/lib_str.c **** *
1068:uC-LIB/lib_str.c **** *                       (1) (A) "The strncasecmp() function shall compare ... the string pointed to
1069:uC-LIB/lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
1070:uC-LIB/lib_str.c **** *                           (B) "ignoring differences in case"                           ...
1071:uC-LIB/lib_str.c **** *                           (C)  but "not more than 'n' ('len_max') bytes" of either string.
1072:uC-LIB/lib_str.c **** *
1073:uC-LIB/lib_str.c **** *                       (2) "strncasecmp() shall behave as if the strings had been converted to low
1074:uC-LIB/lib_str.c **** *                            and then a byte comparison performed."
1075:uC-LIB/lib_str.c **** *
1076:uC-LIB/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : RETURN VALUE' s
1077:uC-LIB/lib_str.c **** *                          "upon successful completion, strncasecmp() shall return an integer great
1078:uC-LIB/lib_str.c **** *                           equal to, or less than 0".
1079:uC-LIB/lib_str.c **** *
1080:uC-LIB/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
1081:uC-LIB/lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
1082:uC-LIB/lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
1083:uC-LIB/lib_str.c **** *                           being compared".
1084:uC-LIB/lib_str.c **** *
1085:uC-LIB/lib_str.c **** *               (3) String comparison terminates when :
1086:uC-LIB/lib_str.c **** *
1087:uC-LIB/lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
1088:uC-LIB/lib_str.c **** *                               (1) NULL strings identical; 0 returned.
1089:uC-LIB/lib_str.c **** *
1090:uC-LIB/lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
1091:uC-LIB/lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
1092:uC-LIB/lib_str.c **** *                                       to lower case (see Note #2a2).
1093:uC-LIB/lib_str.c **** *
1094:uC-LIB/lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
1095:uC-LIB/lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
1096:uC-LIB/lib_str.c **** *                                       to lower case (see Note #2a2).
1097:uC-LIB/lib_str.c **** *
1098:uC-LIB/lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
1099:uC-LIB/lib_str.c **** *                               (1) Strings overlap with NULL address.
1100:uC-LIB/lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
1101:uC-LIB/lib_str.c **** *                                   0 returned.
1102:uC-LIB/lib_str.c **** *
1103:uC-LIB/lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
1104:uC-LIB/lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
1105:uC-LIB/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1106:uC-LIB/lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
1107:uC-LIB/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1108:uC-LIB/lib_str.c **** *
1109:uC-LIB/lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
1110:uC-LIB/lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
1111:uC-LIB/lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1112:uC-LIB/lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1113:uC-LIB/lib_str.c **** *                                       converted to lower case (see Note #2a2).
1114:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 21


1115:uC-LIB/lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1116:uC-LIB/lib_str.c **** *                       (1) Strings identical; 0 returned.
1117:uC-LIB/lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1118:uC-LIB/lib_str.c **** *                           tested character equality.
1119:uC-LIB/lib_str.c **** *
1120:uC-LIB/lib_str.c **** *                   (c) Non-matching characters found.
1121:uC-LIB/lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1122:uC-LIB/lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1123:uC-LIB/lib_str.c **** *                           to lower case.
1124:uC-LIB/lib_str.c **** *
1125:uC-LIB/lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
1126:uC-LIB/lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
1127:uC-LIB/lib_str.c **** *
1128:uC-LIB/lib_str.c **** *                       (2) First 'len_max' number of characters identical.
1129:uC-LIB/lib_str.c **** *                           (A) Strings identical; 0 returned.
1130:uC-LIB/lib_str.c **** *
1131:uC-LIB/lib_str.c **** *                       See also Note #2a1C.
1132:uC-LIB/lib_str.c **** *$PAGE*
1133:uC-LIB/lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1134:uC-LIB/lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1135:uC-LIB/lib_str.c **** ***************************************************************************************************
1136:uC-LIB/lib_str.c **** */
1137:uC-LIB/lib_str.c **** 
1138:uC-LIB/lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase_N (const  CPU_CHAR    *p1_str,
1139:uC-LIB/lib_str.c ****                                  const  CPU_CHAR    *p2_str,
1140:uC-LIB/lib_str.c ****                                         CPU_SIZE_T   len_max)
1141:uC-LIB/lib_str.c **** {
1142:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
1143:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
1144:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
1145:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
1146:uC-LIB/lib_str.c ****            CPU_CHAR     char_1;
1147:uC-LIB/lib_str.c ****            CPU_CHAR     char_2;
1148:uC-LIB/lib_str.c ****            CPU_INT16S   cmp_val;
1149:uC-LIB/lib_str.c ****            CPU_SIZE_T   cmp_len;
1150:uC-LIB/lib_str.c **** 
1151:uC-LIB/lib_str.c **** 
1152:uC-LIB/lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
1153:uC-LIB/lib_str.c ****         return (0);
1154:uC-LIB/lib_str.c ****     }
1155:uC-LIB/lib_str.c **** 
1156:uC-LIB/lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
1157:uC-LIB/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
1158:uC-LIB/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
1159:uC-LIB/lib_str.c ****         }
1160:uC-LIB/lib_str.c ****         char_2  =  ASCII_ToLower(*p2_str);
1161:uC-LIB/lib_str.c ****         cmp_val = (CPU_INT16S)0 - (CPU_INT16S)char_2;
1162:uC-LIB/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
1163:uC-LIB/lib_str.c ****     }
1164:uC-LIB/lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
1165:uC-LIB/lib_str.c ****         char_1  =  ASCII_ToLower(*p1_str);
1166:uC-LIB/lib_str.c ****         cmp_val = (CPU_INT16S)char_1;
1167:uC-LIB/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
1168:uC-LIB/lib_str.c ****     }
1169:uC-LIB/lib_str.c **** 
1170:uC-LIB/lib_str.c **** 
1171:uC-LIB/lib_str.c ****     p1_str_cmp      = p1_str;
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 22


1172:uC-LIB/lib_str.c ****     p2_str_cmp      = p2_str;
1173:uC-LIB/lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
1174:uC-LIB/lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
1175:uC-LIB/lib_str.c ****     p1_str_cmp_next++;
1176:uC-LIB/lib_str.c ****     p2_str_cmp_next++;
1177:uC-LIB/lib_str.c ****     char_1          = ASCII_ToLower(*p1_str_cmp);
1178:uC-LIB/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
1179:uC-LIB/lib_str.c ****     cmp_len         = 0u;
1180:uC-LIB/lib_str.c **** 
1181:uC-LIB/lib_str.c ****     while (( char_1          ==  char_2)                &&      /* Cmp strs until non-matching char
1182:uC-LIB/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
1183:uC-LIB/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
1184:uC-LIB/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
1185:uC-LIB/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
1186:uC-LIB/lib_str.c ****         p1_str_cmp++;
1187:uC-LIB/lib_str.c ****         p2_str_cmp++;
1188:uC-LIB/lib_str.c ****         p1_str_cmp_next++;
1189:uC-LIB/lib_str.c ****         p2_str_cmp_next++;
1190:uC-LIB/lib_str.c ****         cmp_len++;
1191:uC-LIB/lib_str.c ****         char_1 = ASCII_ToLower(*p1_str_cmp);
1192:uC-LIB/lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
1193:uC-LIB/lib_str.c ****     }
1194:uC-LIB/lib_str.c **** 
1195:uC-LIB/lib_str.c **** 
1196:uC-LIB/lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
1197:uC-LIB/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
1198:uC-LIB/lib_str.c ****     }
1199:uC-LIB/lib_str.c **** 
1200:uC-LIB/lib_str.c ****     if (char_1 != char_2) {                                     /* If strs NOT identical, ...      
1201:uC-LIB/lib_str.c ****          cmp_val = (CPU_INT16S)char_1 - (CPU_INT16S)char_2;     /* ... calc & rtn char diff  (see N
1202:uC-LIB/lib_str.c **** 
1203:uC-LIB/lib_str.c ****     } else if (char_1 == (CPU_CHAR)'\0') {                      /* If NULL char(s) found, ...      
1204:uC-LIB/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
1205:uC-LIB/lib_str.c **** 
1206:uC-LIB/lib_str.c ****     } else {
1207:uC-LIB/lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
1208:uC-LIB/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
1209:uC-LIB/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
1210:uC-LIB/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
1211:uC-LIB/lib_str.c ****                 char_2  =  ASCII_ToLower(*p2_str_cmp_next);
1212:uC-LIB/lib_str.c ****                 cmp_val = (CPU_INT16S)0 - (CPU_INT16S)char_2;   /* ... rtn neg p2_str_cmp_next val 
1213:uC-LIB/lib_str.c ****             }
1214:uC-LIB/lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
1215:uC-LIB/lib_str.c ****             char_1  =  ASCII_ToLower(*p1_str_cmp_next);
1216:uC-LIB/lib_str.c ****             cmp_val = (CPU_INT16S)char_1;                       /* ... rtn pos p1_str_cmp_next val 
1217:uC-LIB/lib_str.c ****         }
1218:uC-LIB/lib_str.c ****     }
1219:uC-LIB/lib_str.c **** 
1220:uC-LIB/lib_str.c **** 
1221:uC-LIB/lib_str.c ****     return (cmp_val);
1222:uC-LIB/lib_str.c **** }
1223:uC-LIB/lib_str.c **** 
1224:uC-LIB/lib_str.c **** 
1225:uC-LIB/lib_str.c **** /*$PAGE*/
1226:uC-LIB/lib_str.c **** /*
1227:uC-LIB/lib_str.c **** ***************************************************************************************************
1228:uC-LIB/lib_str.c **** *                                             Str_Char()
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 23


1229:uC-LIB/lib_str.c **** *
1230:uC-LIB/lib_str.c **** * Description : Search string for first occurrence of specific character.
1231:uC-LIB/lib_str.c **** *
1232:uC-LIB/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1233:uC-LIB/lib_str.c **** *
1234:uC-LIB/lib_str.c **** *               srch_char       Search character.
1235:uC-LIB/lib_str.c **** *
1236:uC-LIB/lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1237:uC-LIB/lib_str.c **** *
1238:uC-LIB/lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1239:uC-LIB/lib_str.c **** *
1240:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1241:uC-LIB/lib_str.c **** *
1242:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1243:uC-LIB/lib_str.c **** *
1244:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1245:uC-LIB/lib_str.c **** *
1246:uC-LIB/lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1247:uC-LIB/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1248:uC-LIB/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1249:uC-LIB/lib_str.c **** *
1250:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1251:uC-LIB/lib_str.c **** *                       "upon completion, strchr() shall return" :
1252:uC-LIB/lib_str.c **** *
1253:uC-LIB/lib_str.c **** *                       (1) "a pointer to the byte," ...
1254:uC-LIB/lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1255:uC-LIB/lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for 
1256:uC-LIB/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1257:uC-LIB/lib_str.c **** *
1258:uC-LIB/lib_str.c **** *               (3) String search terminates when :
1259:uC-LIB/lib_str.c **** *
1260:uC-LIB/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1261:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1262:uC-LIB/lib_str.c **** *
1263:uC-LIB/lib_str.c **** *                   (b) String pointer points to NULL.
1264:uC-LIB/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1265:uC-LIB/lib_str.c **** *
1266:uC-LIB/lib_str.c **** *                   (c) String's terminating NULL character found.
1267:uC-LIB/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned 
1268:uC-LIB/lib_str.c **** *                           (see Note #2b2).
1269:uC-LIB/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character 
1270:uC-LIB/lib_str.c **** *                           (see Note #2a2).
1271:uC-LIB/lib_str.c **** *
1272:uC-LIB/lib_str.c **** *                   (d) Search character found.
1273:uC-LIB/lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1274:uC-LIB/lib_str.c **** *                           (see Note #2a1).
1275:uC-LIB/lib_str.c **** ***************************************************************************************************
1276:uC-LIB/lib_str.c **** */
1277:uC-LIB/lib_str.c **** 
1278:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Char (const  CPU_CHAR  *pstr,
1279:uC-LIB/lib_str.c ****                             CPU_CHAR   srch_char)
1280:uC-LIB/lib_str.c **** {
1281:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1282:uC-LIB/lib_str.c **** 
1283:uC-LIB/lib_str.c **** 
1284:uC-LIB/lib_str.c ****     pstr_rtn = Str_Char_N(pstr,
1285:uC-LIB/lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL,
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 24


1286:uC-LIB/lib_str.c ****                           srch_char);
1287:uC-LIB/lib_str.c **** 
1288:uC-LIB/lib_str.c ****     return (pstr_rtn);
1289:uC-LIB/lib_str.c **** }
1290:uC-LIB/lib_str.c **** 
1291:uC-LIB/lib_str.c **** 
1292:uC-LIB/lib_str.c **** /*$PAGE*/
1293:uC-LIB/lib_str.c **** /*
1294:uC-LIB/lib_str.c **** ***************************************************************************************************
1295:uC-LIB/lib_str.c **** *                                            Str_Char_N()
1296:uC-LIB/lib_str.c **** *
1297:uC-LIB/lib_str.c **** * Description : Search string for first occurrence of specific character, up to a maximum number 
1298:uC-LIB/lib_str.c **** *                   of characters.
1299:uC-LIB/lib_str.c **** *
1300:uC-LIB/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1301:uC-LIB/lib_str.c **** *
1302:uC-LIB/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1303:uC-LIB/lib_str.c **** *
1304:uC-LIB/lib_str.c **** *               srch_char       Search character.
1305:uC-LIB/lib_str.c **** *
1306:uC-LIB/lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1307:uC-LIB/lib_str.c **** *
1308:uC-LIB/lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1309:uC-LIB/lib_str.c **** *
1310:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1311:uC-LIB/lib_str.c **** *
1312:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1313:uC-LIB/lib_str.c **** *
1314:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1315:uC-LIB/lib_str.c **** *
1316:uC-LIB/lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1317:uC-LIB/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1318:uC-LIB/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1319:uC-LIB/lib_str.c **** *
1320:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1321:uC-LIB/lib_str.c **** *                       "upon completion, strchr() shall return" :
1322:uC-LIB/lib_str.c **** *
1323:uC-LIB/lib_str.c **** *                       (1) "a pointer to the byte," ...
1324:uC-LIB/lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1325:uC-LIB/lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for 
1326:uC-LIB/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1327:uC-LIB/lib_str.c **** *
1328:uC-LIB/lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1329:uC-LIB/lib_str.c **** *                       argument list for consistency with all other custom string library function
1330:uC-LIB/lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1331:uC-LIB/lib_str.c **** *                       to comply with most standard library's strnchr() argument list.
1332:uC-LIB/lib_str.c **** *
1333:uC-LIB/lib_str.c **** *               (3) String search terminates when :
1334:uC-LIB/lib_str.c **** *
1335:uC-LIB/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1336:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1337:uC-LIB/lib_str.c **** *
1338:uC-LIB/lib_str.c **** *                   (b) String pointer points to NULL.
1339:uC-LIB/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1340:uC-LIB/lib_str.c **** *
1341:uC-LIB/lib_str.c **** *                   (c) String's terminating NULL character found.
1342:uC-LIB/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 25


1343:uC-LIB/lib_str.c **** *                           (see Note #2b2).
1344:uC-LIB/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character 
1345:uC-LIB/lib_str.c **** *                           (see Note #2a2).
1346:uC-LIB/lib_str.c **** *
1347:uC-LIB/lib_str.c **** *                   (d) Search character found.
1348:uC-LIB/lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1349:uC-LIB/lib_str.c **** *                           (see Note #2a1).
1350:uC-LIB/lib_str.c **** *
1351:uC-LIB/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1352:uC-LIB/lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1353:uC-LIB/lib_str.c **** *                           of characters; NULL pointer returned.
1354:uC-LIB/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character 
1355:uC-LIB/lib_str.c **** *                           (see Note #2a2).
1356:uC-LIB/lib_str.c **** ***************************************************************************************************
1357:uC-LIB/lib_str.c **** */
1358:uC-LIB/lib_str.c **** /*$PAGE*/
1359:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Char_N (const  CPU_CHAR    *pstr,
1360:uC-LIB/lib_str.c ****                               CPU_SIZE_T   len_max,
1361:uC-LIB/lib_str.c ****                               CPU_CHAR     srch_char)
1362:uC-LIB/lib_str.c **** {
1363:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_char;
1364:uC-LIB/lib_str.c ****            CPU_SIZE_T   len_srch;
1365:uC-LIB/lib_str.c **** 
1366:uC-LIB/lib_str.c **** 
1367:uC-LIB/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
1368:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1369:uC-LIB/lib_str.c ****     }
1370:uC-LIB/lib_str.c **** 
1371:uC-LIB/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
1372:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1373:uC-LIB/lib_str.c ****     }
1374:uC-LIB/lib_str.c **** 
1375:uC-LIB/lib_str.c **** 
1376:uC-LIB/lib_str.c ****     pstr_char = pstr;
1377:uC-LIB/lib_str.c ****     len_srch  = 0u;
1378:uC-LIB/lib_str.c **** 
1379:uC-LIB/lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)  0 )      &&       /* Srch str until NULL ptr     [see
1380:uC-LIB/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
1381:uC-LIB/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
1382:uC-LIB/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
1383:uC-LIB/lib_str.c ****         pstr_char++;
1384:uC-LIB/lib_str.c ****         len_srch++;
1385:uC-LIB/lib_str.c ****     }
1386:uC-LIB/lib_str.c **** 
1387:uC-LIB/lib_str.c **** 
1388:uC-LIB/lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
1389:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1390:uC-LIB/lib_str.c ****     }
1391:uC-LIB/lib_str.c **** 
1392:uC-LIB/lib_str.c ****     if (len_srch >= len_max) {                                  /* Rtn NULL if srch char NOT found 
1393:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
1394:uC-LIB/lib_str.c ****     }
1395:uC-LIB/lib_str.c **** 
1396:uC-LIB/lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
1397:uC-LIB/lib_str.c ****          return ((CPU_CHAR *)0);
1398:uC-LIB/lib_str.c ****     }
1399:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 26


1400:uC-LIB/lib_str.c **** 
1401:uC-LIB/lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
1402:uC-LIB/lib_str.c **** }
1403:uC-LIB/lib_str.c **** 
1404:uC-LIB/lib_str.c **** 
1405:uC-LIB/lib_str.c **** /*$PAGE*/
1406:uC-LIB/lib_str.c **** /*
1407:uC-LIB/lib_str.c **** ***************************************************************************************************
1408:uC-LIB/lib_str.c **** *                                           Str_Char_Last()
1409:uC-LIB/lib_str.c **** *
1410:uC-LIB/lib_str.c **** * Description : Search string for last occurrence of specific character.
1411:uC-LIB/lib_str.c **** *
1412:uC-LIB/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1413:uC-LIB/lib_str.c **** *
1414:uC-LIB/lib_str.c **** *               srch_char       Search character.
1415:uC-LIB/lib_str.c **** *
1416:uC-LIB/lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1417:uC-LIB/lib_str.c **** *
1418:uC-LIB/lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1419:uC-LIB/lib_str.c **** *
1420:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1421:uC-LIB/lib_str.c **** *
1422:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1423:uC-LIB/lib_str.c **** *
1424:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1425:uC-LIB/lib_str.c **** *
1426:uC-LIB/lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1427:uC-LIB/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1428:uC-LIB/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1429:uC-LIB/lib_str.c **** *
1430:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1431:uC-LIB/lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1432:uC-LIB/lib_str.c **** *
1433:uC-LIB/lib_str.c **** *                       (1) "a pointer to the byte" ...
1434:uC-LIB/lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1435:uC-LIB/lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for 
1436:uC-LIB/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1437:uC-LIB/lib_str.c **** *
1438:uC-LIB/lib_str.c **** *               (3) String search terminates when :
1439:uC-LIB/lib_str.c **** *
1440:uC-LIB/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1441:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1442:uC-LIB/lib_str.c **** *
1443:uC-LIB/lib_str.c **** *                   (b) String pointer points to NULL.
1444:uC-LIB/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1445:uC-LIB/lib_str.c **** *
1446:uC-LIB/lib_str.c **** *                   (c) String searched from end to beginning.
1447:uC-LIB/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned.
1448:uC-LIB/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character 
1449:uC-LIB/lib_str.c **** *                           (see Note #2a2).
1450:uC-LIB/lib_str.c **** *
1451:uC-LIB/lib_str.c **** *                   (d) Search character found.
1452:uC-LIB/lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string 
1453:uC-LIB/lib_str.c **** *                           (see Note #2a1).
1454:uC-LIB/lib_str.c **** ***************************************************************************************************
1455:uC-LIB/lib_str.c **** */
1456:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 27


1457:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Char_Last (const  CPU_CHAR  *pstr,
1458:uC-LIB/lib_str.c ****                                  CPU_CHAR   srch_char)
1459:uC-LIB/lib_str.c **** {
1460:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1461:uC-LIB/lib_str.c **** 
1462:uC-LIB/lib_str.c **** 
1463:uC-LIB/lib_str.c ****     pstr_rtn = Str_Char_Last_N(pstr,
1464:uC-LIB/lib_str.c ****                                DEF_INT_CPU_U_MAX_VAL,
1465:uC-LIB/lib_str.c ****                                srch_char);
1466:uC-LIB/lib_str.c **** 
1467:uC-LIB/lib_str.c ****     return (pstr_rtn);
1468:uC-LIB/lib_str.c **** }
1469:uC-LIB/lib_str.c **** 
1470:uC-LIB/lib_str.c **** 
1471:uC-LIB/lib_str.c **** /*$PAGE*/
1472:uC-LIB/lib_str.c **** /*
1473:uC-LIB/lib_str.c **** ***************************************************************************************************
1474:uC-LIB/lib_str.c **** *                                          Str_Char_Last_N()
1475:uC-LIB/lib_str.c **** *
1476:uC-LIB/lib_str.c **** * Description : Search string for last occurrence of specific character, up to a maximum number 
1477:uC-LIB/lib_str.c **** *                   of characters.
1478:uC-LIB/lib_str.c **** *
1479:uC-LIB/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1480:uC-LIB/lib_str.c **** *
1481:uC-LIB/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1482:uC-LIB/lib_str.c **** *
1483:uC-LIB/lib_str.c **** *               srch_char       Search character.
1484:uC-LIB/lib_str.c **** *
1485:uC-LIB/lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1486:uC-LIB/lib_str.c **** *
1487:uC-LIB/lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1488:uC-LIB/lib_str.c **** *
1489:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1490:uC-LIB/lib_str.c **** *
1491:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1492:uC-LIB/lib_str.c **** *
1493:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1494:uC-LIB/lib_str.c **** *
1495:uC-LIB/lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1496:uC-LIB/lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1497:uC-LIB/lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1498:uC-LIB/lib_str.c **** *
1499:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1500:uC-LIB/lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1501:uC-LIB/lib_str.c **** *
1502:uC-LIB/lib_str.c **** *                       (1) "a pointer to the byte" ...
1503:uC-LIB/lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1504:uC-LIB/lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for 
1505:uC-LIB/lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1506:uC-LIB/lib_str.c **** *
1507:uC-LIB/lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1508:uC-LIB/lib_str.c **** *                       argument list for consistency with all other custom string library function
1509:uC-LIB/lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1510:uC-LIB/lib_str.c **** *                       to comply with most standard library's strnrchr() argument list.
1511:uC-LIB/lib_str.c **** *
1512:uC-LIB/lib_str.c **** *                       See also 'Str_Char_N()  Note #2c'.
1513:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 28


1514:uC-LIB/lib_str.c **** *               (3) String search terminates when :
1515:uC-LIB/lib_str.c **** *
1516:uC-LIB/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1517:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1518:uC-LIB/lib_str.c **** *
1519:uC-LIB/lib_str.c **** *                   (b) String pointer points to NULL.
1520:uC-LIB/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1521:uC-LIB/lib_str.c **** *
1522:uC-LIB/lib_str.c **** *                   (c) String searched from end to beginning.
1523:uC-LIB/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned 
1524:uC-LIB/lib_str.c **** *                           (see Note #2b2).
1525:uC-LIB/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character 
1526:uC-LIB/lib_str.c **** *                           (see Note #2a2).
1527:uC-LIB/lib_str.c **** *
1528:uC-LIB/lib_str.c **** *                   (d) Search character found.
1529:uC-LIB/lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string 
1530:uC-LIB/lib_str.c **** *                           (see Note #2a1).
1531:uC-LIB/lib_str.c **** *
1532:uC-LIB/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1533:uC-LIB/lib_str.c **** *                       (1) Search character NOT found in search string within last 'len_max' numbe
1534:uC-LIB/lib_str.c **** *                           of characters; NULL pointer returned.
1535:uC-LIB/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character 
1536:uC-LIB/lib_str.c **** *                           (see Note #2a2).
1537:uC-LIB/lib_str.c **** ***************************************************************************************************
1538:uC-LIB/lib_str.c **** */
1539:uC-LIB/lib_str.c **** /*$PAGE*/
1540:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Char_Last_N (const  CPU_CHAR    *pstr,
1541:uC-LIB/lib_str.c ****                                    CPU_SIZE_T   len_max,
1542:uC-LIB/lib_str.c ****                                    CPU_CHAR     srch_char)
1543:uC-LIB/lib_str.c **** {
1544:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_char;
1545:uC-LIB/lib_str.c ****            CPU_SIZE_T   str_len_max;
1546:uC-LIB/lib_str.c ****            CPU_SIZE_T   str_len;
1547:uC-LIB/lib_str.c **** 
1548:uC-LIB/lib_str.c **** 
1549:uC-LIB/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
1550:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1551:uC-LIB/lib_str.c ****     }
1552:uC-LIB/lib_str.c **** 
1553:uC-LIB/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
1554:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1555:uC-LIB/lib_str.c ****     }
1556:uC-LIB/lib_str.c **** 
1557:uC-LIB/lib_str.c **** 
1558:uC-LIB/lib_str.c ****     pstr_char    = pstr;
1559:uC-LIB/lib_str.c ****      str_len_max = len_max - sizeof((CPU_CHAR)'\0');            /* Str len adj'd for NULL char len.
1560:uC-LIB/lib_str.c ****      str_len     = Str_Len_N(pstr_char, str_len_max);
1561:uC-LIB/lib_str.c ****     pstr_char   += str_len;
1562:uC-LIB/lib_str.c **** 
1563:uC-LIB/lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
1564:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1565:uC-LIB/lib_str.c ****     }
1566:uC-LIB/lib_str.c **** 
1567:uC-LIB/lib_str.c ****     while (( pstr_char != pstr) &&                              /* Srch str from end until beginnin
1568:uC-LIB/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
1569:uC-LIB/lib_str.c ****         pstr_char--;
1570:uC-LIB/lib_str.c ****     }
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 29


1571:uC-LIB/lib_str.c **** 
1572:uC-LIB/lib_str.c **** 
1573:uC-LIB/lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
1574:uC-LIB/lib_str.c ****          return ((CPU_CHAR *)0);
1575:uC-LIB/lib_str.c ****     }
1576:uC-LIB/lib_str.c **** 
1577:uC-LIB/lib_str.c **** 
1578:uC-LIB/lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
1579:uC-LIB/lib_str.c **** }
1580:uC-LIB/lib_str.c **** 
1581:uC-LIB/lib_str.c **** 
1582:uC-LIB/lib_str.c **** /*$PAGE*/
1583:uC-LIB/lib_str.c **** /*
1584:uC-LIB/lib_str.c **** ***************************************************************************************************
1585:uC-LIB/lib_str.c **** *                                         Str_Char_Replace()
1586:uC-LIB/lib_str.c **** *
1587:uC-LIB/lib_str.c **** * Description : Search string for specific character and replace it by another specific character.
1588:uC-LIB/lib_str.c **** *
1589:uC-LIB/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1590:uC-LIB/lib_str.c **** *
1591:uC-LIB/lib_str.c **** *               char_srch       Search character.
1592:uC-LIB/lib_str.c **** *
1593:uC-LIB/lib_str.c **** *               char_replace    Replace character.
1594:uC-LIB/lib_str.c **** *
1595:uC-LIB/lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1596:uC-LIB/lib_str.c **** *
1597:uC-LIB/lib_str.c **** *               Pointer to NULL,   otherwise.
1598:uC-LIB/lib_str.c **** *
1599:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1600:uC-LIB/lib_str.c **** *
1601:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer modified.
1602:uC-LIB/lib_str.c **** *
1603:uC-LIB/lib_str.c **** *               (2) String search terminates when :
1604:uC-LIB/lib_str.c **** *
1605:uC-LIB/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1606:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1607:uC-LIB/lib_str.c **** *
1608:uC-LIB/lib_str.c **** *                   (b) String pointer points to NULL.
1609:uC-LIB/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1610:uC-LIB/lib_str.c **** *
1611:uC-LIB/lib_str.c **** *                   (c) String's terminating NULL character found.
1612:uC-LIB/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1613:uC-LIB/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1614:uC-LIB/lib_str.c **** *
1615:uC-LIB/lib_str.c **** *                   (d) Search character found.
1616:uC-LIB/lib_str.c **** *                       (1) Replace character found by the specified character.
1617:uC-LIB/lib_str.c **** ***************************************************************************************************
1618:uC-LIB/lib_str.c **** */
1619:uC-LIB/lib_str.c **** 
1620:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Char_Replace (CPU_CHAR  *pstr,
1621:uC-LIB/lib_str.c ****                              CPU_CHAR   char_srch,
1622:uC-LIB/lib_str.c ****                              CPU_CHAR   char_replace)
1623:uC-LIB/lib_str.c **** {
1624:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1625:uC-LIB/lib_str.c **** 
1626:uC-LIB/lib_str.c **** 
1627:uC-LIB/lib_str.c ****     pstr_rtn = Str_Char_Replace_N(pstr,
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 30


1628:uC-LIB/lib_str.c ****                                   char_srch,
1629:uC-LIB/lib_str.c ****                                   char_replace,
1630:uC-LIB/lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1631:uC-LIB/lib_str.c **** 
1632:uC-LIB/lib_str.c ****     return (pstr_rtn);
1633:uC-LIB/lib_str.c **** }
1634:uC-LIB/lib_str.c **** 
1635:uC-LIB/lib_str.c **** 
1636:uC-LIB/lib_str.c **** /*$PAGE*/
1637:uC-LIB/lib_str.c **** /*
1638:uC-LIB/lib_str.c **** ***************************************************************************************************
1639:uC-LIB/lib_str.c **** *                                        Str_Char_Replace_N()
1640:uC-LIB/lib_str.c **** *
1641:uC-LIB/lib_str.c **** * Description : Search string for specific character and replace it by another specific character, 
1642:uC-LIB/lib_str.c **** *               a maximum number of characters.
1643:uC-LIB/lib_str.c **** *
1644:uC-LIB/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1645:uC-LIB/lib_str.c **** *
1646:uC-LIB/lib_str.c **** *               char_srch       Search character.
1647:uC-LIB/lib_str.c **** *
1648:uC-LIB/lib_str.c **** *               char_replace    Replace character.
1649:uC-LIB/lib_str.c **** *
1650:uC-LIB/lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1651:uC-LIB/lib_str.c **** *
1652:uC-LIB/lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1653:uC-LIB/lib_str.c **** *
1654:uC-LIB/lib_str.c **** *               Pointer to NULL,   otherwise.
1655:uC-LIB/lib_str.c **** *
1656:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1657:uC-LIB/lib_str.c **** *
1658:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer modified.
1659:uC-LIB/lib_str.c **** *
1660:uC-LIB/lib_str.c **** *               (2) String search terminates when :
1661:uC-LIB/lib_str.c **** *
1662:uC-LIB/lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1663:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1664:uC-LIB/lib_str.c **** *
1665:uC-LIB/lib_str.c **** *                   (b) String pointer points to NULL.
1666:uC-LIB/lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1667:uC-LIB/lib_str.c **** *
1668:uC-LIB/lib_str.c **** *                   (c) String's terminating NULL character found.
1669:uC-LIB/lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1670:uC-LIB/lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1671:uC-LIB/lib_str.c **** *
1672:uC-LIB/lib_str.c **** *                   (d) Search character found.
1673:uC-LIB/lib_str.c **** *                       (1) Replace character found by the specified character.
1674:uC-LIB/lib_str.c **** *
1675:uC-LIB/lib_str.c **** *                   (e) 'len_max' number of characters searched.
1676:uC-LIB/lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1677:uC-LIB/lib_str.c **** *                           of characters; NULL pointer returned.
1678:uC-LIB/lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1679:uC-LIB/lib_str.c **** *                           (see Note #2a2).
1680:uC-LIB/lib_str.c **** ***************************************************************************************************
1681:uC-LIB/lib_str.c **** */
1682:uC-LIB/lib_str.c **** 
1683:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Char_Replace_N (CPU_CHAR    *pstr,
1684:uC-LIB/lib_str.c ****                                CPU_CHAR     char_srch,
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 31


1685:uC-LIB/lib_str.c ****                                CPU_CHAR     char_replace,
1686:uC-LIB/lib_str.c ****                                CPU_SIZE_T   len_max)
1687:uC-LIB/lib_str.c **** {
1688:uC-LIB/lib_str.c ****     CPU_CHAR    *pstr_char;
1689:uC-LIB/lib_str.c ****     CPU_SIZE_T   len;
1690:uC-LIB/lib_str.c **** 
1691:uC-LIB/lib_str.c **** 
1692:uC-LIB/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
1693:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1694:uC-LIB/lib_str.c ****     }
1695:uC-LIB/lib_str.c **** 
1696:uC-LIB/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
1697:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1698:uC-LIB/lib_str.c ****     }
1699:uC-LIB/lib_str.c **** 
1700:uC-LIB/lib_str.c ****     pstr_char = pstr;
1701:uC-LIB/lib_str.c ****     len       = len_max;
1702:uC-LIB/lib_str.c **** 
1703:uC-LIB/lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)0) &&               /* Srch str until NULL ptr     [see
1704:uC-LIB/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
1705:uC-LIB/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
1706:uC-LIB/lib_str.c **** 
1707:uC-LIB/lib_str.c ****         if (*pstr_char == char_srch) {
1708:uC-LIB/lib_str.c ****             *pstr_char  = char_replace;                         /* Replace char if srch char is fou
1709:uC-LIB/lib_str.c ****         }
1710:uC-LIB/lib_str.c **** 
1711:uC-LIB/lib_str.c ****         pstr_char++;
1712:uC-LIB/lib_str.c ****         len--;
1713:uC-LIB/lib_str.c ****     }
1714:uC-LIB/lib_str.c **** 
1715:uC-LIB/lib_str.c ****     return (pstr);
1716:uC-LIB/lib_str.c **** }
1717:uC-LIB/lib_str.c **** 
1718:uC-LIB/lib_str.c **** 
1719:uC-LIB/lib_str.c **** /*$PAGE*/
1720:uC-LIB/lib_str.c **** /*
1721:uC-LIB/lib_str.c **** ***************************************************************************************************
1722:uC-LIB/lib_str.c **** *                                              Str_Str()
1723:uC-LIB/lib_str.c **** *
1724:uC-LIB/lib_str.c **** * Description : Search string for first occurence of a specific search string.
1725:uC-LIB/lib_str.c **** *
1726:uC-LIB/lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1727:uC-LIB/lib_str.c **** *
1728:uC-LIB/lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1729:uC-LIB/lib_str.c **** *
1730:uC-LIB/lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1731:uC-LIB/lib_str.c **** *
1732:uC-LIB/lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1733:uC-LIB/lib_str.c **** *
1734:uC-LIB/lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1735:uC-LIB/lib_str.c **** *
1736:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1737:uC-LIB/lib_str.c **** *
1738:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1739:uC-LIB/lib_str.c **** *
1740:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1741:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 32


1742:uC-LIB/lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1743:uC-LIB/lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1744:uC-LIB/lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1745:uC-LIB/lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1746:uC-LIB/lib_str.c **** *
1747:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1748:uC-LIB/lib_str.c **** *
1749:uC-LIB/lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1750:uC-LIB/lib_str.c **** *                           (A) "a pointer to the located string" ...
1751:uC-LIB/lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1752:uC-LIB/lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1753:uC-LIB/lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1754:uC-LIB/lib_str.c **** *
1755:uC-LIB/lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1756:uC-LIB/lib_str.c **** *                            shall return 's1' ('pstr')."
1757:uC-LIB/lib_str.c **** *
1758:uC-LIB/lib_str.c **** *               (3) String search terminates when :
1759:uC-LIB/lib_str.c **** *
1760:uC-LIB/lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1761:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1762:uC-LIB/lib_str.c **** *
1763:uC-LIB/lib_str.c **** *                   (b) String pointer(s) point to NULL.
1764:uC-LIB/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1765:uC-LIB/lib_str.c **** *
1766:uC-LIB/lib_str.c **** *                   (c) Search string length equal to zero.
1767:uC-LIB/lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1768:uC-LIB/lib_str.c **** *
1769:uC-LIB/lib_str.c **** *                   (d) Search string length greater than string length.
1770:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1771:uC-LIB/lib_str.c **** *
1772:uC-LIB/lib_str.c **** *                   (e) Entire string has been searched.
1773:uC-LIB/lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1774:uC-LIB/lib_str.c **** *
1775:uC-LIB/lib_str.c **** *                   (f) Search string found.
1776:uC-LIB/lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1777:uC-LIB/lib_str.c **** ***************************************************************************************************
1778:uC-LIB/lib_str.c **** */
1779:uC-LIB/lib_str.c **** 
1780:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Str (const  CPU_CHAR  *pstr,
1781:uC-LIB/lib_str.c ****                     const  CPU_CHAR  *pstr_srch)
1782:uC-LIB/lib_str.c **** {
1783:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
1784:uC-LIB/lib_str.c **** 
1785:uC-LIB/lib_str.c **** 
1786:uC-LIB/lib_str.c ****     pstr_rtn = Str_Str_N(pstr,
1787:uC-LIB/lib_str.c ****                          pstr_srch,
1788:uC-LIB/lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
1789:uC-LIB/lib_str.c **** 
1790:uC-LIB/lib_str.c ****     return (pstr_rtn);
1791:uC-LIB/lib_str.c **** }
1792:uC-LIB/lib_str.c **** 
1793:uC-LIB/lib_str.c **** 
1794:uC-LIB/lib_str.c **** /*$PAGE*/
1795:uC-LIB/lib_str.c **** /*
1796:uC-LIB/lib_str.c **** ***************************************************************************************************
1797:uC-LIB/lib_str.c **** *                                             Str_Str_N()
1798:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 33


1799:uC-LIB/lib_str.c **** * Description : Search string for first occurence of a specific search string, up to a maximum numb
1800:uC-LIB/lib_str.c **** *                   of characters.
1801:uC-LIB/lib_str.c **** *
1802:uC-LIB/lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1803:uC-LIB/lib_str.c **** *
1804:uC-LIB/lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1805:uC-LIB/lib_str.c **** *
1806:uC-LIB/lib_str.c **** *               len_max         Maximum number of characters to search (see Note #3g).
1807:uC-LIB/lib_str.c **** *
1808:uC-LIB/lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1809:uC-LIB/lib_str.c **** *
1810:uC-LIB/lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1811:uC-LIB/lib_str.c **** *
1812:uC-LIB/lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1813:uC-LIB/lib_str.c **** *
1814:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1815:uC-LIB/lib_str.c **** *
1816:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1817:uC-LIB/lib_str.c **** *
1818:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1819:uC-LIB/lib_str.c **** *
1820:uC-LIB/lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1821:uC-LIB/lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1822:uC-LIB/lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1823:uC-LIB/lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1824:uC-LIB/lib_str.c **** *
1825:uC-LIB/lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1826:uC-LIB/lib_str.c **** *
1827:uC-LIB/lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1828:uC-LIB/lib_str.c **** *                           (A) "a pointer to the located string" ...
1829:uC-LIB/lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1830:uC-LIB/lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1831:uC-LIB/lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1832:uC-LIB/lib_str.c **** *
1833:uC-LIB/lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1834:uC-LIB/lib_str.c **** *                            shall return 's1' ('pstr')."
1835:uC-LIB/lib_str.c **** *
1836:uC-LIB/lib_str.c **** *               (3) String search terminates when :
1837:uC-LIB/lib_str.c **** *
1838:uC-LIB/lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1839:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1840:uC-LIB/lib_str.c **** *
1841:uC-LIB/lib_str.c **** *                   (b) String pointer(s) point to NULL.
1842:uC-LIB/lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1843:uC-LIB/lib_str.c **** *
1844:uC-LIB/lib_str.c **** *                   (c) Search string length equal to zero.
1845:uC-LIB/lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1846:uC-LIB/lib_str.c **** *
1847:uC-LIB/lib_str.c **** *                   (d) Search string length greater than string length.
1848:uC-LIB/lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1849:uC-LIB/lib_str.c **** *
1850:uC-LIB/lib_str.c **** *                   (e) Entire string has been searched.
1851:uC-LIB/lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1852:uC-LIB/lib_str.c **** *                       (2) Maximum size of the search is defined as the subtraction of the
1853:uC-LIB/lib_str.c **** *                           search string length from the string length.
1854:uC-LIB/lib_str.c **** *
1855:uC-LIB/lib_str.c **** *                   (f) Search string found.
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 34


1856:uC-LIB/lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1857:uC-LIB/lib_str.c **** *                       (2) Search string found via Str_Cmp_N().
1858:uC-LIB/lib_str.c **** *
1859:uC-LIB/lib_str.c **** *                   (g) 'len_max' number of characters searched.
1860:uC-LIB/lib_str.c **** *                       (1) 'len_max' number of characters does NOT include terminating NULL charac
1861:uC-LIB/lib_str.c **** *                           (see Note #2a2).
1862:uC-LIB/lib_str.c **** ***************************************************************************************************
1863:uC-LIB/lib_str.c **** */
1864:uC-LIB/lib_str.c **** /*$PAGE*/
1865:uC-LIB/lib_str.c **** CPU_CHAR  *Str_Str_N (const  CPU_CHAR    *pstr,
1866:uC-LIB/lib_str.c ****                       const  CPU_CHAR    *pstr_srch,
1867:uC-LIB/lib_str.c ****                              CPU_SIZE_T   len_max)
1868:uC-LIB/lib_str.c **** {
1869:uC-LIB/lib_str.c ****            CPU_SIZE_T    str_len;
1870:uC-LIB/lib_str.c ****            CPU_SIZE_T    str_len_srch;
1871:uC-LIB/lib_str.c ****            CPU_SIZE_T    len_max_srch;
1872:uC-LIB/lib_str.c ****            CPU_SIZE_T    srch_len;
1873:uC-LIB/lib_str.c ****            CPU_SIZE_T    srch_ix;
1874:uC-LIB/lib_str.c ****            CPU_BOOLEAN   srch_done;
1875:uC-LIB/lib_str.c ****            CPU_INT16S    srch_cmp;
1876:uC-LIB/lib_str.c ****     const  CPU_CHAR     *pstr_str;
1877:uC-LIB/lib_str.c ****     const  CPU_CHAR     *pstr_srch_ix;
1878:uC-LIB/lib_str.c **** 
1879:uC-LIB/lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
1880:uC-LIB/lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {
1881:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1882:uC-LIB/lib_str.c ****     }
1883:uC-LIB/lib_str.c ****     if (pstr_srch == (const CPU_CHAR *)0) {
1884:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1885:uC-LIB/lib_str.c ****     }
1886:uC-LIB/lib_str.c **** 
1887:uC-LIB/lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0    (see
1888:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1889:uC-LIB/lib_str.c ****     }
1890:uC-LIB/lib_str.c **** 
1891:uC-LIB/lib_str.c ****                                                                 /* Lim max srch str len (to chk > s
1892:uC-LIB/lib_str.c ****     len_max_srch = (len_max <       DEF_INT_CPU_U_MAX_VAL)
1893:uC-LIB/lib_str.c ****                  ? (len_max + 1u) : DEF_INT_CPU_U_MAX_VAL;
1894:uC-LIB/lib_str.c **** 
1895:uC-LIB/lib_str.c ****     str_len      = Str_Len_N(pstr,      len_max);
1896:uC-LIB/lib_str.c ****     str_len_srch = Str_Len_N(pstr_srch, len_max_srch);
1897:uC-LIB/lib_str.c ****     if (str_len_srch < 1) {                                     /* Rtn ptr to str if srch str len =
1898:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)pstr);
1899:uC-LIB/lib_str.c ****     }
1900:uC-LIB/lib_str.c ****     if (str_len_srch > str_len) {                               /* Rtn NULL if srch str len > str l
1901:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1902:uC-LIB/lib_str.c ****     }
1903:uC-LIB/lib_str.c ****                                                                 /* Rtn NULL if NULL ptr found      
1904:uC-LIB/lib_str.c ****     pstr_str = pstr      + str_len;
1905:uC-LIB/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
1906:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1907:uC-LIB/lib_str.c ****     }
1908:uC-LIB/lib_str.c ****     pstr_str = pstr_srch + str_len_srch;
1909:uC-LIB/lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
1910:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1911:uC-LIB/lib_str.c ****     }
1912:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 35


1913:uC-LIB/lib_str.c **** 
1914:uC-LIB/lib_str.c ****     srch_len  = str_len - str_len_srch;                         /* Calc srch len (see Note #3e2).  
1915:uC-LIB/lib_str.c ****     srch_ix   = 0u;
1916:uC-LIB/lib_str.c ****     srch_done = DEF_NO;
1917:uC-LIB/lib_str.c **** 
1918:uC-LIB/lib_str.c ****     do {
1919:uC-LIB/lib_str.c ****         pstr_srch_ix = (const CPU_CHAR *)(pstr + srch_ix);
1920:uC-LIB/lib_str.c ****         srch_cmp     =  Str_Cmp_N(pstr_srch_ix, pstr_srch, str_len_srch);
1921:uC-LIB/lib_str.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
1922:uC-LIB/lib_str.c ****         srch_ix++;
1923:uC-LIB/lib_str.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
1924:uC-LIB/lib_str.c **** 
1925:uC-LIB/lib_str.c **** 
1926:uC-LIB/lib_str.c ****     if (srch_cmp != 0) {                                        /* Rtn NULL if srch str NOT found (
1927:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
1928:uC-LIB/lib_str.c ****     }
1929:uC-LIB/lib_str.c **** 
1930:uC-LIB/lib_str.c ****     return ((CPU_CHAR *)pstr_srch_ix);                          /* Else rtn ptr to found srch str (
1931:uC-LIB/lib_str.c **** }
1932:uC-LIB/lib_str.c **** 
1933:uC-LIB/lib_str.c **** 
1934:uC-LIB/lib_str.c **** /*$PAGE*/
1935:uC-LIB/lib_str.c **** /*
1936:uC-LIB/lib_str.c **** ***************************************************************************************************
1937:uC-LIB/lib_str.c **** *                                         Str_FmtNbr_Int32U()
1938:uC-LIB/lib_str.c **** *
1939:uC-LIB/lib_str.c **** * Description : Format 32-bit unsigned integer into a multi-digit character string.
1940:uC-LIB/lib_str.c **** *
1941:uC-LIB/lib_str.c **** * Argument(s) : nbr             Number           to format.
1942:uC-LIB/lib_str.c **** *
1943:uC-LIB/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
1944:uC-LIB/lib_str.c **** *
1945:uC-LIB/lib_str.c **** *                               The following may be used to specify the number of digits to format
1946:uC-LIB/lib_str.c **** *
1947:uC-LIB/lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MIN     Minimum number of 32-bit unsigned d
1948:uC-LIB/lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MAX     Maximum number of 32-bit unsigned d
1949:uC-LIB/lib_str.c **** *
1950:uC-LIB/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
1951:uC-LIB/lib_str.c **** *
1952:uC-LIB/lib_str.c **** *                               The following may be used to specify the number base :
1953:uC-LIB/lib_str.c **** *
1954:uC-LIB/lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
1955:uC-LIB/lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
1956:uC-LIB/lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
1957:uC-LIB/lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
1958:uC-LIB/lib_str.c **** *
1959:uC-LIB/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
1960:uC-LIB/lib_str.c **** *
1961:uC-LIB/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
1962:uC-LIB/lib_str.c **** *                                     Printable character          Prepend leading character to str
1963:uC-LIB/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
1964:uC-LIB/lib_str.c **** *
1965:uC-LIB/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
1966:uC-LIB/lib_str.c **** *
1967:uC-LIB/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
1968:uC-LIB/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
1969:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 36


1970:uC-LIB/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
1971:uC-LIB/lib_str.c **** *
1972:uC-LIB/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
1973:uC-LIB/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
1974:uC-LIB/lib_str.c **** *
1975:uC-LIB/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
1976:uC-LIB/lib_str.c **** *
1977:uC-LIB/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
1978:uC-LIB/lib_str.c **** *
1979:uC-LIB/lib_str.c **** *               Pointer to NULL,             otherwise.
1980:uC-LIB/lib_str.c **** *
1981:uC-LIB/lib_str.c **** * Caller(s)   : Application.
1982:uC-LIB/lib_str.c **** *
1983:uC-LIB/lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting 
1984:uC-LIB/lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
1985:uC-LIB/lib_str.c **** *
1986:uC-LIB/lib_str.c **** *                           Example :
1987:uC-LIB/lib_str.c **** *
1988:uC-LIB/lib_str.c **** *                               nbr      = 23456
1989:uC-LIB/lib_str.c **** *                               nbr_dig  = 0
1990:uC-LIB/lib_str.c **** *                               nbr_base = 10
1991:uC-LIB/lib_str.c **** *
1992:uC-LIB/lib_str.c **** *                               pstr     = ""                   See Note #6a
1993:uC-LIB/lib_str.c **** *
1994:uC-LIB/lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of 
1995:uC-LIB/lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
1996:uC-LIB/lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
1997:uC-LIB/lib_str.c **** *
1998:uC-LIB/lib_str.c **** *                           Example :
1999:uC-LIB/lib_str.c **** *
2000:uC-LIB/lib_str.c **** *                               nbr      = 23456
2001:uC-LIB/lib_str.c **** *                               nbr_dig  = 3
2002:uC-LIB/lib_str.c **** *                               nbr_base = 10
2003:uC-LIB/lib_str.c **** *
2004:uC-LIB/lib_str.c **** *                               pstr     = "???"                See Note #6b
2005:uC-LIB/lib_str.c **** *
2006:uC-LIB/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
2007:uC-LIB/lib_str.c **** *$PAGE*
2008:uC-LIB/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2009:uC-LIB/lib_str.c **** *
2010:uC-LIB/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2011:uC-LIB/lib_str.c **** *
2012:uC-LIB/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
2013:uC-LIB/lib_str.c **** *                           (B) with the exception of '0'.
2014:uC-LIB/lib_str.c **** *
2015:uC-LIB/lib_str.c **** *                   (b) The number of leading characters is such that the total number of significa
2016:uC-LIB/lib_str.c **** *                       integer digits plus the number of leading characters is equal to the reques
2017:uC-LIB/lib_str.c **** *                       number of integer digits to format ('nbr_dig').
2018:uC-LIB/lib_str.c **** *
2019:uC-LIB/lib_str.c **** *                           Example :
2020:uC-LIB/lib_str.c **** *
2021:uC-LIB/lib_str.c **** *                               nbr       = 23456
2022:uC-LIB/lib_str.c **** *                               nbr_dig   = 7
2023:uC-LIB/lib_str.c **** *                               nbr_base  = 10
2024:uC-LIB/lib_str.c **** *                               lead_char = ' '
2025:uC-LIB/lib_str.c **** *
2026:uC-LIB/lib_str.c **** *                               pstr      = "  23456"
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 37


2027:uC-LIB/lib_str.c **** *
2028:uC-LIB/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2029:uC-LIB/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2030:uC-LIB/lib_str.c **** *                       (3) ... but NO leading character available;           ...
2031:uC-LIB/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2032:uC-LIB/lib_str.c **** *
2033:uC-LIB/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2034:uC-LIB/lib_str.c **** *
2035:uC-LIB/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2036:uC-LIB/lib_str.c **** *                       array formatting.
2037:uC-LIB/lib_str.c **** *
2038:uC-LIB/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2039:uC-LIB/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2040:uC-LIB/lib_str.c **** *
2041:uC-LIB/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2042:uC-LIB/lib_str.c **** *
2043:uC-LIB/lib_str.c **** *                   (b) To prevent character buffer overrun :
2044:uC-LIB/lib_str.c **** *
2045:uC-LIB/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2046:uC-LIB/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2047:uC-LIB/lib_str.c **** *
2048:uC-LIB/lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2049:uC-LIB/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2050:uC-LIB/lib_str.c **** *                   number of digits to format ('nbr_dig') :
2051:uC-LIB/lib_str.c **** *
2052:uC-LIB/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2053:uC-LIB/lib_str.c **** *                          number of     =  {
2054:uC-LIB/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2055:uC-LIB/lib_str.c **** *
2056:uC-LIB/lib_str.c **** ***************************************************************************************************
2057:uC-LIB/lib_str.c **** */
2058:uC-LIB/lib_str.c **** 
2059:uC-LIB/lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32U (CPU_INT32U    nbr,
2060:uC-LIB/lib_str.c ****                               CPU_INT08U    nbr_dig,
2061:uC-LIB/lib_str.c ****                               CPU_INT08U    nbr_base,
2062:uC-LIB/lib_str.c ****                               CPU_CHAR      lead_char,
2063:uC-LIB/lib_str.c ****                               CPU_BOOLEAN   lower_case,
2064:uC-LIB/lib_str.c ****                               CPU_BOOLEAN   nul,
2065:uC-LIB/lib_str.c ****                               CPU_CHAR     *pstr)
2066:uC-LIB/lib_str.c **** {
2067:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_fmt;
2068:uC-LIB/lib_str.c **** 
2069:uC-LIB/lib_str.c **** 
2070:uC-LIB/lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32(nbr,                            /* Fmt unsigned int into str.      
2071:uC-LIB/lib_str.c ****                                 nbr_dig,
2072:uC-LIB/lib_str.c ****                                 nbr_base,
2073:uC-LIB/lib_str.c ****                                 DEF_NO,
2074:uC-LIB/lib_str.c ****                                 lead_char,
2075:uC-LIB/lib_str.c ****                                 lower_case,
2076:uC-LIB/lib_str.c ****                                 nul,
2077:uC-LIB/lib_str.c ****                                 pstr);
2078:uC-LIB/lib_str.c **** 
2079:uC-LIB/lib_str.c ****     return (pstr_fmt);
2080:uC-LIB/lib_str.c **** }
2081:uC-LIB/lib_str.c **** 
2082:uC-LIB/lib_str.c **** 
2083:uC-LIB/lib_str.c **** /*$PAGE*/
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 38


2084:uC-LIB/lib_str.c **** /*
2085:uC-LIB/lib_str.c **** ***************************************************************************************************
2086:uC-LIB/lib_str.c **** *                                         Str_FmtNbr_Int32S()
2087:uC-LIB/lib_str.c **** *
2088:uC-LIB/lib_str.c **** * Description : Format 32-bit signed integer into a multi-digit character string.
2089:uC-LIB/lib_str.c **** *
2090:uC-LIB/lib_str.c **** * Argument(s) : nbr             Number           to format.
2091:uC-LIB/lib_str.c **** *
2092:uC-LIB/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
2093:uC-LIB/lib_str.c **** *
2094:uC-LIB/lib_str.c **** *                               The following may be used to specify the number of digits to format
2095:uC-LIB/lib_str.c **** *
2096:uC-LIB/lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MIN + 1     Minimum number of 32-bit signed
2097:uC-LIB/lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MAX + 1     Maximum number of 32-bit signed
2098:uC-LIB/lib_str.c **** *                                                                   (plus 1 digit for possible nega
2099:uC-LIB/lib_str.c **** *
2100:uC-LIB/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
2101:uC-LIB/lib_str.c **** *
2102:uC-LIB/lib_str.c **** *                               The following may be used to specify the number base :
2103:uC-LIB/lib_str.c **** *
2104:uC-LIB/lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
2105:uC-LIB/lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
2106:uC-LIB/lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
2107:uC-LIB/lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
2108:uC-LIB/lib_str.c **** *
2109:uC-LIB/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
2110:uC-LIB/lib_str.c **** *
2111:uC-LIB/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2112:uC-LIB/lib_str.c **** *                                     Printable character          Prepend leading character to str
2113:uC-LIB/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
2114:uC-LIB/lib_str.c **** *
2115:uC-LIB/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
2116:uC-LIB/lib_str.c **** *
2117:uC-LIB/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
2118:uC-LIB/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
2119:uC-LIB/lib_str.c **** *
2120:uC-LIB/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2121:uC-LIB/lib_str.c **** *
2122:uC-LIB/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2123:uC-LIB/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2124:uC-LIB/lib_str.c **** *
2125:uC-LIB/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2126:uC-LIB/lib_str.c **** *
2127:uC-LIB/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
2128:uC-LIB/lib_str.c **** *
2129:uC-LIB/lib_str.c **** *               Pointer to NULL,             otherwise.
2130:uC-LIB/lib_str.c **** *
2131:uC-LIB/lib_str.c **** * Caller(s)   : Application.
2132:uC-LIB/lib_str.c **** *
2133:uC-LIB/lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting 
2134:uC-LIB/lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
2135:uC-LIB/lib_str.c **** *
2136:uC-LIB/lib_str.c **** *                           Example :
2137:uC-LIB/lib_str.c **** *
2138:uC-LIB/lib_str.c **** *                               nbr      = -23456
2139:uC-LIB/lib_str.c **** *                               nbr_dig  =  0
2140:uC-LIB/lib_str.c **** *                               nbr_base = 10
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 39


2141:uC-LIB/lib_str.c **** *
2142:uC-LIB/lib_str.c **** *                               pstr     = ""                   See Note #6a
2143:uC-LIB/lib_str.c **** *
2144:uC-LIB/lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of 
2145:uC-LIB/lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
2146:uC-LIB/lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
2147:uC-LIB/lib_str.c **** *
2148:uC-LIB/lib_str.c **** *                           Example :
2149:uC-LIB/lib_str.c **** *
2150:uC-LIB/lib_str.c **** *                               nbr      = 23456
2151:uC-LIB/lib_str.c **** *                               nbr_dig  = 3
2152:uC-LIB/lib_str.c **** *                               nbr_base = 10
2153:uC-LIB/lib_str.c **** *
2154:uC-LIB/lib_str.c **** *                               pstr     = "???"                See Note #6b
2155:uC-LIB/lib_str.c **** *
2156:uC-LIB/lib_str.c **** *                   (c) If the number to format ('nbr') is negative but the number of digits to for
2157:uC-LIB/lib_str.c **** *                       ('nbr_dig') is equal to the number of significant integer digits of the num
2158:uC-LIB/lib_str.c **** *                       to format ('nbr'); then an invalid string is formatted instead of truncatin
2159:uC-LIB/lib_str.c **** *                       the negative sign.
2160:uC-LIB/lib_str.c **** *
2161:uC-LIB/lib_str.c **** *                           Example :
2162:uC-LIB/lib_str.c **** *
2163:uC-LIB/lib_str.c **** *                               nbr      = -23456
2164:uC-LIB/lib_str.c **** *                               nbr_dig  =  5
2165:uC-LIB/lib_str.c **** *                               nbr_base = 10
2166:uC-LIB/lib_str.c **** *
2167:uC-LIB/lib_str.c **** *                               pstr     = "?????"              See Note #6b
2168:uC-LIB/lib_str.c **** *
2169:uC-LIB/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
2170:uC-LIB/lib_str.c **** *$PAGE*
2171:uC-LIB/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2172:uC-LIB/lib_str.c **** *
2173:uC-LIB/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2174:uC-LIB/lib_str.c **** *
2175:uC-LIB/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
2176:uC-LIB/lib_str.c **** *                           (B) with the exception of '0'.
2177:uC-LIB/lib_str.c **** *
2178:uC-LIB/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2179:uC-LIB/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2180:uC-LIB/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2181:uC-LIB/lib_str.c **** *                           ('nbr_dig').
2182:uC-LIB/lib_str.c **** *
2183:uC-LIB/lib_str.c **** *                               Examples :
2184:uC-LIB/lib_str.c **** *
2185:uC-LIB/lib_str.c **** *                                   nbr       = 23456
2186:uC-LIB/lib_str.c **** *                                   nbr_dig   = 7
2187:uC-LIB/lib_str.c **** *                                   nbr_base  = 10
2188:uC-LIB/lib_str.c **** *                                   lead_char = ' '
2189:uC-LIB/lib_str.c **** *
2190:uC-LIB/lib_str.c **** *                                   pstr      = "  23456"
2191:uC-LIB/lib_str.c **** *
2192:uC-LIB/lib_str.c **** *
2193:uC-LIB/lib_str.c **** *                                   nbr       = -23456
2194:uC-LIB/lib_str.c **** *                                   nbr_dig   =  7
2195:uC-LIB/lib_str.c **** *                                   nbr_base  = 10
2196:uC-LIB/lib_str.c **** *                                   lead_char = ' '
2197:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 40


2198:uC-LIB/lib_str.c **** *                                   pstr      = " -23456"
2199:uC-LIB/lib_str.c **** *
2200:uC-LIB/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2201:uC-LIB/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character 
2202:uC-LIB/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2203:uC-LIB/lib_str.c **** *
2204:uC-LIB/lib_str.c **** *                                   Examples :
2205:uC-LIB/lib_str.c **** *
2206:uC-LIB/lib_str.c **** *                                       nbr        = -23456
2207:uC-LIB/lib_str.c **** *                                       nbr_dig    =  8
2208:uC-LIB/lib_str.c **** *                                       nbr_base   = 10
2209:uC-LIB/lib_str.c **** *                                       lead_char  = '0'
2210:uC-LIB/lib_str.c **** *
2211:uC-LIB/lib_str.c **** *                                       pstr       = "-0023456"
2212:uC-LIB/lib_str.c **** *
2213:uC-LIB/lib_str.c **** *
2214:uC-LIB/lib_str.c **** *                                       nbr        = -43981
2215:uC-LIB/lib_str.c **** *                                       nbr_dig    =  8
2216:uC-LIB/lib_str.c **** *                                       nbr_base   = 16
2217:uC-LIB/lib_str.c **** *                                       lead_char  = '0'
2218:uC-LIB/lib_str.c **** *                                       lower_case = DEF_NO
2219:uC-LIB/lib_str.c **** *
2220:uC-LIB/lib_str.c **** *                                       pstr       = "-000ABCD"
2221:uC-LIB/lib_str.c **** *
2222:uC-LIB/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2223:uC-LIB/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character 
2224:uC-LIB/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2225:uC-LIB/lib_str.c **** *
2226:uC-LIB/lib_str.c **** *                                   Examples :
2227:uC-LIB/lib_str.c **** *
2228:uC-LIB/lib_str.c **** *                                       nbr        = -23456
2229:uC-LIB/lib_str.c **** *                                       nbr_dig    =  8
2230:uC-LIB/lib_str.c **** *                                       nbr_base   = 10
2231:uC-LIB/lib_str.c **** *                                       lead_char  = '#'
2232:uC-LIB/lib_str.c **** *
2233:uC-LIB/lib_str.c **** *                                       pstr       = "##-23456"
2234:uC-LIB/lib_str.c **** *
2235:uC-LIB/lib_str.c **** *
2236:uC-LIB/lib_str.c **** *                                       nbr        = -43981
2237:uC-LIB/lib_str.c **** *                                       nbr_dig    =  8
2238:uC-LIB/lib_str.c **** *                                       nbr_base   = 16
2239:uC-LIB/lib_str.c **** *                                       lead_char  = '#'
2240:uC-LIB/lib_str.c **** *                                       lower_case = DEF_YES
2241:uC-LIB/lib_str.c **** *
2242:uC-LIB/lib_str.c **** *                                       pstr       = "###-abcd"
2243:uC-LIB/lib_str.c **** *
2244:uC-LIB/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2245:uC-LIB/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2246:uC-LIB/lib_str.c **** *                       (3) ... but NO leading character available;           ...
2247:uC-LIB/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2248:uC-LIB/lib_str.c **** *
2249:uC-LIB/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2250:uC-LIB/lib_str.c **** *$PAGE*
2251:uC-LIB/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2252:uC-LIB/lib_str.c **** *                       array formatting.
2253:uC-LIB/lib_str.c **** *
2254:uC-LIB/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 41


2255:uC-LIB/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2256:uC-LIB/lib_str.c **** *
2257:uC-LIB/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2258:uC-LIB/lib_str.c **** *
2259:uC-LIB/lib_str.c **** *                   (b) To prevent character buffer overrun :
2260:uC-LIB/lib_str.c **** *
2261:uC-LIB/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2262:uC-LIB/lib_str.c **** *                                                               1 negative sign   +
2263:uC-LIB/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2264:uC-LIB/lib_str.c **** *
2265:uC-LIB/lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2266:uC-LIB/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2267:uC-LIB/lib_str.c **** *                   number of digits to format ('nbr_dig') :
2268:uC-LIB/lib_str.c **** *
2269:uC-LIB/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2270:uC-LIB/lib_str.c **** *                          number of     =  {
2271:uC-LIB/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2272:uC-LIB/lib_str.c **** *
2273:uC-LIB/lib_str.c **** ***************************************************************************************************
2274:uC-LIB/lib_str.c **** */
2275:uC-LIB/lib_str.c **** 
2276:uC-LIB/lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32S (CPU_INT32S    nbr,
2277:uC-LIB/lib_str.c ****                               CPU_INT08U    nbr_dig,
2278:uC-LIB/lib_str.c ****                               CPU_INT08U    nbr_base,
2279:uC-LIB/lib_str.c ****                               CPU_CHAR      lead_char,
2280:uC-LIB/lib_str.c ****                               CPU_BOOLEAN   lower_case,
2281:uC-LIB/lib_str.c ****                               CPU_BOOLEAN   nul,
2282:uC-LIB/lib_str.c ****                               CPU_CHAR     *pstr)
2283:uC-LIB/lib_str.c **** {
2284:uC-LIB/lib_str.c ****     CPU_CHAR     *pstr_fmt;
2285:uC-LIB/lib_str.c ****     CPU_INT32S    nbr_fmt;
2286:uC-LIB/lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2287:uC-LIB/lib_str.c **** 
2288:uC-LIB/lib_str.c **** 
2289:uC-LIB/lib_str.c ****     if (nbr < 0) {                                              /* If nbr neg, ...                 
2290:uC-LIB/lib_str.c ****         nbr_fmt = -nbr;                                         /* ... negate nbr.                 
2291:uC-LIB/lib_str.c ****         nbr_neg =  DEF_YES;
2292:uC-LIB/lib_str.c ****     } else {
2293:uC-LIB/lib_str.c ****         nbr_fmt =  nbr;
2294:uC-LIB/lib_str.c ****         nbr_neg =  DEF_NO;
2295:uC-LIB/lib_str.c ****     }
2296:uC-LIB/lib_str.c **** 
2297:uC-LIB/lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32((CPU_INT32U)nbr_fmt,            /* Fmt signed int into str.        
2298:uC-LIB/lib_str.c ****                                             nbr_dig,
2299:uC-LIB/lib_str.c ****                                             nbr_base,
2300:uC-LIB/lib_str.c ****                                             nbr_neg,
2301:uC-LIB/lib_str.c ****                                             lead_char,
2302:uC-LIB/lib_str.c ****                                             lower_case,
2303:uC-LIB/lib_str.c ****                                             nul,
2304:uC-LIB/lib_str.c ****                                             pstr);
2305:uC-LIB/lib_str.c **** 
2306:uC-LIB/lib_str.c ****     return (pstr_fmt);
2307:uC-LIB/lib_str.c **** }
2308:uC-LIB/lib_str.c **** 
2309:uC-LIB/lib_str.c **** 
2310:uC-LIB/lib_str.c **** /*$PAGE*/
2311:uC-LIB/lib_str.c **** /*
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 42


2312:uC-LIB/lib_str.c **** ***************************************************************************************************
2313:uC-LIB/lib_str.c **** *                                           Str_FmtNbr_32()
2314:uC-LIB/lib_str.c **** *
2315:uC-LIB/lib_str.c **** * Description : Format number into a multi-digit character string.
2316:uC-LIB/lib_str.c **** *
2317:uC-LIB/lib_str.c **** * Argument(s) : nbr             Number                         to format (see Note #1).
2318:uC-LIB/lib_str.c **** *
2319:uC-LIB/lib_str.c **** *               nbr_dig         Number of decimal       digits to format (see Note #2).
2320:uC-LIB/lib_str.c **** *
2321:uC-LIB/lib_str.c **** *               nbr_dp          Number of decimal point digits to format.
2322:uC-LIB/lib_str.c **** *
2323:uC-LIB/lib_str.c **** *               lead_char       Prepend leading character (see Note #3) :
2324:uC-LIB/lib_str.c **** *
2325:uC-LIB/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2326:uC-LIB/lib_str.c **** *                                     Printable character          Prepend leading character to str
2327:uC-LIB/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6d).
2328:uC-LIB/lib_str.c **** *
2329:uC-LIB/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2330:uC-LIB/lib_str.c **** *
2331:uC-LIB/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2332:uC-LIB/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2333:uC-LIB/lib_str.c **** *
2334:uC-LIB/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2335:uC-LIB/lib_str.c **** *
2336:uC-LIB/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6c].
2337:uC-LIB/lib_str.c **** *
2338:uC-LIB/lib_str.c **** *               Pointer to NULL,             otherwise.
2339:uC-LIB/lib_str.c **** *
2340:uC-LIB/lib_str.c **** * Caller(s)   : Application.
2341:uC-LIB/lib_str.c **** *
2342:uC-LIB/lib_str.c **** * Note(s)     : (1) (a) The maximum accuracy for 32-bit floating-point numbers :
2343:uC-LIB/lib_str.c **** *
2344:uC-LIB/lib_str.c **** *
2345:uC-LIB/lib_str.c **** *                                 Maximum Accuracy            log [Internal-Base ^ (Number-Internal
2346:uC-LIB/lib_str.c **** *                           32-bit Floating-point Number  =  --------------------------------------
2347:uC-LIB/lib_str.c **** *                                                                             log [External-Base]
2348:uC-LIB/lib_str.c **** *
2349:uC-LIB/lib_str.c **** *                                                             log [2 ^ 24]
2350:uC-LIB/lib_str.c **** *                                                         =  --------------
2351:uC-LIB/lib_str.c **** *                                                               log [10]
2352:uC-LIB/lib_str.c **** *
2353:uC-LIB/lib_str.c **** *                                                         <  7.225  Base-10 Digits
2354:uC-LIB/lib_str.c **** *
2355:uC-LIB/lib_str.c **** *                               where
2356:uC-LIB/lib_str.c **** *                                       Internal-Base                   Internal number base of flo
2357:uC-LIB/lib_str.c **** *                                                                           point numbers (i.e.  2)
2358:uC-LIB/lib_str.c **** *                                       External-Base                   External number base of flo
2359:uC-LIB/lib_str.c **** *                                                                           point numbers (i.e. 10)
2360:uC-LIB/lib_str.c **** *                                       Number-Internal-Base-Digits     Number of internal number b
2361:uC-LIB/lib_str.c **** *                                                                           significant digits (i.e
2362:uC-LIB/lib_str.c **** *
2363:uC-LIB/lib_str.c **** *                   (b) Some CPUs' &/or compilers' floating-point implementations MAY further reduc
2364:uC-LIB/lib_str.c **** *                       maximum accuracy.
2365:uC-LIB/lib_str.c **** *$PAGE*
2366:uC-LIB/lib_str.c **** *               (2) (a) If the total number of digits to format ('nbr_dig + nbr_dp') is zero; then 
2367:uC-LIB/lib_str.c **** *                       formatting is performed except possible NULL-termination of the string (see
2368:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 43


2369:uC-LIB/lib_str.c **** *                           Example :
2370:uC-LIB/lib_str.c **** *
2371:uC-LIB/lib_str.c **** *                               nbr     = -23456.789
2372:uC-LIB/lib_str.c **** *                               nbr_dig =  0
2373:uC-LIB/lib_str.c **** *                               nbr_dp  =  0
2374:uC-LIB/lib_str.c **** *
2375:uC-LIB/lib_str.c **** *                               pstr    = ""                        See Note #7a
2376:uC-LIB/lib_str.c **** *
2377:uC-LIB/lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is less than the number o
2378:uC-LIB/lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
2379:uC-LIB/lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
2380:uC-LIB/lib_str.c **** *
2381:uC-LIB/lib_str.c **** *                               Example :
2382:uC-LIB/lib_str.c **** *
2383:uC-LIB/lib_str.c **** *                                   nbr     = 23456.789
2384:uC-LIB/lib_str.c **** *                                   nbr_dig = 3
2385:uC-LIB/lib_str.c **** *                                   nbr_dp  = 2
2386:uC-LIB/lib_str.c **** *
2387:uC-LIB/lib_str.c **** *                                   pstr    = "??????"              See Note #7d
2388:uC-LIB/lib_str.c **** *
2389:uC-LIB/lib_str.c **** *                       (2) If the number to format ('nbr') is negative but the number of digits to
2390:uC-LIB/lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
2391:uC-LIB/lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
2392:uC-LIB/lib_str.c **** *                           the negative sign.
2393:uC-LIB/lib_str.c **** *
2394:uC-LIB/lib_str.c **** *                               Example :
2395:uC-LIB/lib_str.c **** *
2396:uC-LIB/lib_str.c **** *                                   nbr     = -23456.789
2397:uC-LIB/lib_str.c **** *                                   nbr_dig =  5
2398:uC-LIB/lib_str.c **** *                                   nbr_dp  =  2
2399:uC-LIB/lib_str.c **** *
2400:uC-LIB/lib_str.c **** *                                   pstr    = "????????"            See Note #7d
2401:uC-LIB/lib_str.c **** *
2402:uC-LIB/lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of significa
2403:uC-LIB/lib_str.c **** *                           integer digits is zero, & the number of digits to format ('nbr_dig') is
2404:uC-LIB/lib_str.c **** *                           but the number of decimal point digits to format ('nbr_dp') is zero; th
2405:uC-LIB/lib_str.c **** *                           an invalid string is formatted instead of truncating the negative sign.
2406:uC-LIB/lib_str.c **** *
2407:uC-LIB/lib_str.c **** *                               Example :
2408:uC-LIB/lib_str.c **** *
2409:uC-LIB/lib_str.c **** *                                   nbr     = -0.7895
2410:uC-LIB/lib_str.c **** *                                   nbr_dig =  1
2411:uC-LIB/lib_str.c **** *                                   nbr_dp  =  0
2412:uC-LIB/lib_str.c **** *
2413:uC-LIB/lib_str.c **** *                                   pstr    = "?"                   See Note #7d
2414:uC-LIB/lib_str.c **** *
2415:uC-LIB/lib_str.c **** *                       (4) (A) If the number to format ('nbr') is negative but the number of signi
2416:uC-LIB/lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2417:uC-LIB/lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2418:uC-LIB/lib_str.c **** *                               zero; then the negative sign immediately prefixes the decimal point
2419:uC-LIB/lib_str.c **** *                               with NO decimal digits formatted, NOT even a single decimal digit o
2420:uC-LIB/lib_str.c **** *
2421:uC-LIB/lib_str.c **** *                                   Example :
2422:uC-LIB/lib_str.c **** *
2423:uC-LIB/lib_str.c **** *                                       nbr     = -0.7895
2424:uC-LIB/lib_str.c **** *                                       nbr_dig =  0
2425:uC-LIB/lib_str.c **** *                                       nbr_dp  =  2
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 44


2426:uC-LIB/lib_str.c **** *
2427:uC-LIB/lib_str.c **** *                                       pstr    = "-.78"
2428:uC-LIB/lib_str.c **** *
2429:uC-LIB/lib_str.c **** *                           (B) If the number to format ('nbr') is positive but the number of signi
2430:uC-LIB/lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2431:uC-LIB/lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2432:uC-LIB/lib_str.c **** *                               zero; then a single decimal digit of '0' prefixes the decimal point
2433:uC-LIB/lib_str.c **** *
2434:uC-LIB/lib_str.c **** *                               This '0' digit is used whenever a negative sign is not formatted (s
2435:uC-LIB/lib_str.c **** *                               Note #2b4A) so that the formatted string's decimal point is not flo
2436:uC-LIB/lib_str.c **** *                               but fixed in the string as the 2nd character.
2437:uC-LIB/lib_str.c **** *
2438:uC-LIB/lib_str.c **** *                                   Example :
2439:uC-LIB/lib_str.c **** *
2440:uC-LIB/lib_str.c **** *                                       nbr     =  0.7895
2441:uC-LIB/lib_str.c **** *                                       nbr_dig =  0
2442:uC-LIB/lib_str.c **** *                                       nbr_dp  =  2
2443:uC-LIB/lib_str.c **** *
2444:uC-LIB/lib_str.c **** *                                       pstr    = "0.78"
2445:uC-LIB/lib_str.c **** *$PAGE*
2446:uC-LIB/lib_str.c **** *                   (c) (1) If the total number of digits to format ('nbr_dig + nbr_dp') is greater
2447:uC-LIB/lib_str.c **** *
2448:uC-LIB/lib_str.c **** *                           (A) ... the maximum accuracy of the CPU's &/or compiler's 32-bit floati
2449:uC-LIB/lib_str.c **** *                               numbers, digits following all significantly-accurate digits of the 
2450:uC-LIB/lib_str.c **** *                               format ('nbr') will be inaccurate; ...
2451:uC-LIB/lib_str.c **** *                           (B) ... the configured maximum accuracy ('LIB_STR_CFG_FP_MAX_NBR_DIG_SI
2452:uC-LIB/lib_str.c **** *                               digits or decimal places following all significantly-accurate digit
2453:uC-LIB/lib_str.c **** *                               number to format ('nbr') will be replaced & formatted with zeros ('
2454:uC-LIB/lib_str.c **** *
2455:uC-LIB/lib_str.c **** *                                   Example :
2456:uC-LIB/lib_str.c **** *
2457:uC-LIB/lib_str.c **** *                                       nbr                            = 123456789.012345
2458:uC-LIB/lib_str.c **** *                                       nbr_dig                        = 9
2459:uC-LIB/lib_str.c **** *                                       nbr_dp                         = 6
2460:uC-LIB/lib_str.c **** *                                       LIB_STR_CFG_FP_MAX_NBR_DIG_SIG = 7
2461:uC-LIB/lib_str.c **** *
2462:uC-LIB/lib_str.c **** *                                       pstr                           = "123456700.000000"
2463:uC-LIB/lib_str.c **** *
2464:uC-LIB/lib_str.c **** *                       (2) Therefore, one or more least-significant digit(s) of the number to form
2465:uC-LIB/lib_str.c **** *                           MAY be rounded & not necessarily truncated due to the inaccuracy of the
2466:uC-LIB/lib_str.c **** *                           &/or compiler's floating-point implementation.
2467:uC-LIB/lib_str.c **** *
2468:uC-LIB/lib_str.c **** *                       See also Note #1.
2469:uC-LIB/lib_str.c **** *
2470:uC-LIB/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2471:uC-LIB/lib_str.c **** *
2472:uC-LIB/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2473:uC-LIB/lib_str.c **** *
2474:uC-LIB/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a base-10 digit, ...
2475:uC-LIB/lib_str.c **** *                           (B) with the exception of '0'.
2476:uC-LIB/lib_str.c **** *
2477:uC-LIB/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2478:uC-LIB/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2479:uC-LIB/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2480:uC-LIB/lib_str.c **** *                           ('nbr_dig').
2481:uC-LIB/lib_str.c **** *
2482:uC-LIB/lib_str.c **** *                               Examples :
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 45


2483:uC-LIB/lib_str.c **** *
2484:uC-LIB/lib_str.c **** *                                   nbr       = 23456.789
2485:uC-LIB/lib_str.c **** *                                   nbr_dig   = 7
2486:uC-LIB/lib_str.c **** *                                   nbr_dp    = 2
2487:uC-LIB/lib_str.c **** *                                   lead_char = ' '
2488:uC-LIB/lib_str.c **** *
2489:uC-LIB/lib_str.c **** *                                   pstr      = "  23456.78"
2490:uC-LIB/lib_str.c **** *
2491:uC-LIB/lib_str.c **** *
2492:uC-LIB/lib_str.c **** *                                   nbr       = -23456.789
2493:uC-LIB/lib_str.c **** *                                   nbr_dig   =  7
2494:uC-LIB/lib_str.c **** *                                   nbr_dp    =  2
2495:uC-LIB/lib_str.c **** *                                   lead_char = ' '
2496:uC-LIB/lib_str.c **** *
2497:uC-LIB/lib_str.c **** *                                   pstr      = " -23456.78"
2498:uC-LIB/lib_str.c **** *
2499:uC-LIB/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2500:uC-LIB/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character 
2501:uC-LIB/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2502:uC-LIB/lib_str.c **** *
2503:uC-LIB/lib_str.c **** *                                   Example :
2504:uC-LIB/lib_str.c **** *
2505:uC-LIB/lib_str.c **** *                                       nbr       = -23456.789
2506:uC-LIB/lib_str.c **** *                                       nbr_dig   =  8
2507:uC-LIB/lib_str.c **** *                                       nbr_dp    =  2
2508:uC-LIB/lib_str.c **** *                                       lead_char = '0'
2509:uC-LIB/lib_str.c **** *
2510:uC-LIB/lib_str.c **** *                                       pstr      = "-0023456.78"
2511:uC-LIB/lib_str.c **** *
2512:uC-LIB/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2513:uC-LIB/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character 
2514:uC-LIB/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2515:uC-LIB/lib_str.c **** *
2516:uC-LIB/lib_str.c **** *                                   Examples :
2517:uC-LIB/lib_str.c **** *
2518:uC-LIB/lib_str.c **** *                                       nbr       = -23456.789
2519:uC-LIB/lib_str.c **** *                                       nbr_dig   =  8
2520:uC-LIB/lib_str.c **** *                                       nbr_dp    =  2
2521:uC-LIB/lib_str.c **** *                                       lead_char = '#'
2522:uC-LIB/lib_str.c **** *
2523:uC-LIB/lib_str.c **** *                                       pstr      = "##-23456.78"
2524:uC-LIB/lib_str.c **** *
2525:uC-LIB/lib_str.c **** *                   (c) (1) If the integer value of the number to format is zero & ...
2526:uC-LIB/lib_str.c **** *                       (2) ... the number of digits to format is greater than one ...
2527:uC-LIB/lib_str.c **** *                       (3) ... OR  the number is NOT negative,                    ...
2528:uC-LIB/lib_str.c **** *                       (4) ... but NO leading character available;                ...
2529:uC-LIB/lib_str.c **** *                       (5) ... then one digit of '0' value is formatted.
2530:uC-LIB/lib_str.c **** *
2531:uC-LIB/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2532:uC-LIB/lib_str.c **** *
2533:uC-LIB/lib_str.c **** *                       See also Note #2b4B.
2534:uC-LIB/lib_str.c **** *$PAGE*
2535:uC-LIB/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2536:uC-LIB/lib_str.c **** *                       array formatting.
2537:uC-LIB/lib_str.c **** *
2538:uC-LIB/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2539:uC-LIB/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 46


2540:uC-LIB/lib_str.c **** *
2541:uC-LIB/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2542:uC-LIB/lib_str.c **** *
2543:uC-LIB/lib_str.c **** *                   (b) To prevent character buffer overrun :
2544:uC-LIB/lib_str.c **** *
2545:uC-LIB/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2546:uC-LIB/lib_str.c **** *                                                              'nbr_dp'           +
2547:uC-LIB/lib_str.c **** *                                                               1 negative sign   +
2548:uC-LIB/lib_str.c **** *                                                               1 decimal point   +
2549:uC-LIB/lib_str.c **** *                                                               1 'NUL' terminator)  characters
2550:uC-LIB/lib_str.c **** *
2551:uC-LIB/lib_str.c **** *               (6) String format terminates when :
2552:uC-LIB/lib_str.c **** *
2553:uC-LIB/lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
2554:uC-LIB/lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
2555:uC-LIB/lib_str.c **** *
2556:uC-LIB/lib_str.c **** *                   (b) Total number of digits to format ('nbr_dig + nbr_dp') is zero.
2557:uC-LIB/lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
2558:uC-LIB/lib_str.c **** *
2559:uC-LIB/lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant 
2560:uC-LIB/lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible 
2561:uC-LIB/lib_str.c **** *                           negative sign.
2562:uC-LIB/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2563:uC-LIB/lib_str.c **** *
2564:uC-LIB/lib_str.c **** *                   (d) Lead character is NOT a valid, printable character (see Note #3a).
2565:uC-LIB/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2566:uC-LIB/lib_str.c **** *
2567:uC-LIB/lib_str.c **** *                   (e) Number successfully formatted into character string array.
2568:uC-LIB/lib_str.c **** *
2569:uC-LIB/lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
2570:uC-LIB/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2571:uC-LIB/lib_str.c **** *                   number of digits ('nbr_dig') & number of decimal point digits ('nbr_dp') to for
2572:uC-LIB/lib_str.c **** *
2573:uC-LIB/lib_str.c **** *                                           {  (a)    0 (NULL string)          ,  if 'nbr_dig' = 0 
2574:uC-LIB/lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2575:uC-LIB/lib_str.c **** *                                           {
2576:uC-LIB/lib_str.c **** *                                           {  (b)   'nbr_dig'                 ,  if 'nbr_dig' > 0 
2577:uC-LIB/lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2578:uC-LIB/lib_str.c **** *                      Invalid string's     {
2579:uC-LIB/lib_str.c **** *                          number of     =  {  (c)  ['nbr_dp'               +  ,  if 'nbr_dig' = 0 
2580:uC-LIB/lib_str.c **** *                       question marks      {         1 (for decimal point) +        'nbr_dp'  > 0
2581:uC-LIB/lib_str.c **** *                                           {         1 (for negative sign) ]
2582:uC-LIB/lib_str.c **** *                                           {
2583:uC-LIB/lib_str.c **** *                                           {  (d)  ['nbr_dig'              +  ,  if 'nbr_dig' > 0 
2584:uC-LIB/lib_str.c **** *                                           {        'nbr_dp'               +        'nbr_dp'  > 0
2585:uC-LIB/lib_str.c **** *                                           {         1 (for decimal point) ]
2586:uC-LIB/lib_str.c **** *
2587:uC-LIB/lib_str.c **** ***************************************************************************************************
2588:uC-LIB/lib_str.c **** */
2589:uC-LIB/lib_str.c **** 
2590:uC-LIB/lib_str.c **** #if (LIB_STR_CFG_FP_EN == DEF_ENABLED)
2591:uC-LIB/lib_str.c **** CPU_CHAR  *Str_FmtNbr_32 (CPU_FP32      nbr,
2592:uC-LIB/lib_str.c ****                           CPU_INT08U    nbr_dig,
2593:uC-LIB/lib_str.c ****                           CPU_INT08U    nbr_dp,
2594:uC-LIB/lib_str.c ****                           CPU_CHAR      lead_char,
2595:uC-LIB/lib_str.c ****                           CPU_BOOLEAN   nul,
2596:uC-LIB/lib_str.c ****                           CPU_CHAR     *pstr)
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 47


2597:uC-LIB/lib_str.c **** {
2598:uC-LIB/lib_str.c ****     CPU_CHAR     *pstr_fmt;
2599:uC-LIB/lib_str.c ****     CPU_DATA      i;
2600:uC-LIB/lib_str.c ****     CPU_FP32      nbr_fmt;
2601:uC-LIB/lib_str.c ****     CPU_FP32      nbr_log;
2602:uC-LIB/lib_str.c ****     CPU_INT32U    nbr_shiftd;
2603:uC-LIB/lib_str.c ****     CPU_INT16U    nbr_dig_max;
2604:uC-LIB/lib_str.c ****     CPU_INT16U    nbr_dig_sig;
2605:uC-LIB/lib_str.c ****     CPU_INT08U    nbr_neg_sign;
2606:uC-LIB/lib_str.c ****     CPU_INT08U    dig_val;
2607:uC-LIB/lib_str.c ****     CPU_FP32      dig_exp;
2608:uC-LIB/lib_str.c ****     CPU_FP32      dp_exp;
2609:uC-LIB/lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
2610:uC-LIB/lib_str.c ****     CPU_BOOLEAN   lead_char_fmtd;
2611:uC-LIB/lib_str.c ****     CPU_BOOLEAN   lead_char_0;
2612:uC-LIB/lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
2613:uC-LIB/lib_str.c ****     CPU_BOOLEAN   print_char;
2614:uC-LIB/lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2615:uC-LIB/lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
2616:uC-LIB/lib_str.c **** 
2617:uC-LIB/lib_str.c **** 
2618:uC-LIB/lib_str.c **** /*$PAGE*/
2619:uC-LIB/lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
2620:uC-LIB/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
2621:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
2622:uC-LIB/lib_str.c ****     }
2623:uC-LIB/lib_str.c **** 
2624:uC-LIB/lib_str.c ****     fmt_invalid = DEF_NO;
2625:uC-LIB/lib_str.c **** 
2626:uC-LIB/lib_str.c ****     if ((nbr_dig < 1) && (nbr_dp < 1)) {                        /* If nbr digs/dps = 0, ...        
2627:uC-LIB/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
2628:uC-LIB/lib_str.c ****     }
2629:uC-LIB/lib_str.c **** 
2630:uC-LIB/lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
2631:uC-LIB/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
2632:uC-LIB/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable  (see
2633:uC-LIB/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str         (see
2634:uC-LIB/lib_str.c **** 
2635:uC-LIB/lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 dig.    
2636:uC-LIB/lib_str.c ****             lead_char_dig = ASCII_IsDig(lead_char);
2637:uC-LIB/lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If  lead char     non-0 dig (see
2638:uC-LIB/lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str         (see
2639:uC-LIB/lib_str.c ****             }
2640:uC-LIB/lib_str.c ****         }
2641:uC-LIB/lib_str.c ****     }
2642:uC-LIB/lib_str.c **** 
2643:uC-LIB/lib_str.c **** 
2644:uC-LIB/lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
2645:uC-LIB/lib_str.c ****     pstr_fmt = pstr;
2646:uC-LIB/lib_str.c **** 
2647:uC-LIB/lib_str.c ****     if (fmt_invalid == DEF_NO) {
2648:uC-LIB/lib_str.c ****         if (nbr < 0.0f) {                                       /* If nbr neg, ...                 
2649:uC-LIB/lib_str.c ****             nbr_fmt      = -nbr;                                /* ... negate nbr.                 
2650:uC-LIB/lib_str.c ****             nbr_neg_sign =  1u;
2651:uC-LIB/lib_str.c ****             nbr_neg      =  DEF_YES;
2652:uC-LIB/lib_str.c ****         } else {
2653:uC-LIB/lib_str.c ****             nbr_fmt      =  nbr;
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 48


2654:uC-LIB/lib_str.c ****             nbr_neg_sign =  0u;
2655:uC-LIB/lib_str.c ****             nbr_neg      =  DEF_NO;
2656:uC-LIB/lib_str.c ****         }
2657:uC-LIB/lib_str.c **** 
2658:uC-LIB/lib_str.c ****         nbr_log     = nbr_fmt;
2659:uC-LIB/lib_str.c ****         nbr_dig_max = 0u;
2660:uC-LIB/lib_str.c ****         while (nbr_log >= 1.0f) {                               /* While base-10 digs avail, ...   
2661:uC-LIB/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
2662:uC-LIB/lib_str.c ****             nbr_log /= 10.0f;
2663:uC-LIB/lib_str.c ****         }
2664:uC-LIB/lib_str.c **** 
2665:uC-LIB/lib_str.c ****         if (((nbr_dig >= (nbr_dig_max + nbr_neg_sign)) ||       /* If req'd nbr digs >= (max nbr di
2666:uC-LIB/lib_str.c ****              (nbr_dig_max < 1))                        &&       /* .. or NO nbr digs,              
2667:uC-LIB/lib_str.c ****             ((nbr_dig     > 1) ||                               /* .. but NOT [(req'd nbr dig = 1) 
2668:uC-LIB/lib_str.c ****              (nbr_dp      > 0) ||                               /* ..          (req'd nbr dp  = 0) 
2669:uC-LIB/lib_str.c ****              (nbr_neg == DEF_NO))) {                            /* ..          (      nbr neg    )]
2670:uC-LIB/lib_str.c ****                                                                 /* .. prepare nbr digs to fmt.     
2671:uC-LIB/lib_str.c ****             dig_exp = 1.0f;
2672:uC-LIB/lib_str.c ****             for (i = 1u; i < nbr_dig; i++) {
2673:uC-LIB/lib_str.c ****                 dig_exp *= 10.0f;
2674:uC-LIB/lib_str.c ****             }
2675:uC-LIB/lib_str.c **** 
2676:uC-LIB/lib_str.c ****             nbr_neg_fmtd   =  DEF_NO;
2677:uC-LIB/lib_str.c ****             nbr_dig_sig    =  0u;
2678:uC-LIB/lib_str.c ****             lead_char_fmtd =  DEF_NO;
2679:uC-LIB/lib_str.c ****             lead_char_0    = (lead_char == '0')                 /* Chk if lead char a '0' dig (see 
2680:uC-LIB/lib_str.c ****                            ?  DEF_YES : DEF_NO;
2681:uC-LIB/lib_str.c **** 
2682:uC-LIB/lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
2683:uC-LIB/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
2684:uC-LIB/lib_str.c ****         }
2685:uC-LIB/lib_str.c ****     }
2686:uC-LIB/lib_str.c **** 
2687:uC-LIB/lib_str.c **** 
2688:uC-LIB/lib_str.c **** /*$PAGE*/
2689:uC-LIB/lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
2690:uC-LIB/lib_str.c ****     for (i = nbr_dig; i > 0; i--) {                             /* Fmt str for desired nbr digs :  
2691:uC-LIB/lib_str.c ****         if (fmt_invalid == DEF_NO) {
2692:uC-LIB/lib_str.c ****             if (nbr_dig_sig < LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) { /* If nbr sig digs < max, fmt str d
2693:uC-LIB/lib_str.c ****                 nbr_shiftd = (CPU_INT32U)(nbr_fmt / dig_exp);
2694:uC-LIB/lib_str.c ****                 if ((nbr_shiftd > 0) ||                         /* If shifted nbr > 0              
2695:uC-LIB/lib_str.c ****                     (i == 1u)) {                                /* ... OR on one's dig to fmt (see 
2696:uC-LIB/lib_str.c ****                                                                 /* ... calc & fmt dig val;         
2697:uC-LIB/lib_str.c ****                     if ((nbr_neg      == DEF_YES) &&            /* If  nbr neg                     
2698:uC-LIB/lib_str.c ****                         (nbr_neg_fmtd == DEF_NO )) {            /* ... but neg sign NOT yet fmt'd; 
2699:uC-LIB/lib_str.c **** 
2700:uC-LIB/lib_str.c ****                         if (lead_char_fmtd == DEF_YES) {        /* ... & if lead char(s) fmt'd,    
2701:uC-LIB/lib_str.c ****                             pstr_fmt--;                         /* ... replace last lead char w/   
2702:uC-LIB/lib_str.c ****                         }
2703:uC-LIB/lib_str.c ****                        *pstr_fmt++   = '-';                     /* ... prepend neg sign (see Notes 
2704:uC-LIB/lib_str.c ****                         nbr_neg_fmtd = DEF_YES;
2705:uC-LIB/lib_str.c ****                     }
2706:uC-LIB/lib_str.c **** 
2707:uC-LIB/lib_str.c ****                     if (nbr_shiftd > 0) {                       /* If shifted nbr > 0,        ...  
2708:uC-LIB/lib_str.c ****                         dig_val    = (CPU_INT08U)(nbr_shiftd % 10u);
2709:uC-LIB/lib_str.c ****                        *pstr_fmt++ = (CPU_CHAR  )(dig_val    + '0');
2710:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 49


2711:uC-LIB/lib_str.c ****                         nbr_dig_sig++;                          /* ... inc nbr sig digs;      ...  
2712:uC-LIB/lib_str.c **** 
2713:uC-LIB/lib_str.c ****                     } else if ((nbr_dig > 1) ||                 /* ... else if req'd digs > 1 ...  
2714:uC-LIB/lib_str.c ****                                (nbr_neg == DEF_NO)) {           /* ... or non-neg nbr,        ...  
2715:uC-LIB/lib_str.c ****                        *pstr_fmt++ = '0';                       /* ... fmt one '0' char (see Note #
2716:uC-LIB/lib_str.c ****                     }
2717:uC-LIB/lib_str.c **** 
2718:uC-LIB/lib_str.c ****                 } else if ((nbr_neg      == DEF_YES) &&         /* ... else if nbr neg             
2719:uC-LIB/lib_str.c ****                            (lead_char_0  == DEF_YES) &&         /* ... & lead char a '0' dig       
2720:uC-LIB/lib_str.c ****                            (nbr_neg_fmtd == DEF_NO )) {         /* ... but neg sign NOT yet fmt'd, 
2721:uC-LIB/lib_str.c **** 
2722:uC-LIB/lib_str.c ****                    *pstr_fmt++   = '-';                         /* ... prepend neg sign (see Note #
2723:uC-LIB/lib_str.c ****                     nbr_neg_fmtd = DEF_YES;
2724:uC-LIB/lib_str.c **** 
2725:uC-LIB/lib_str.c ****                 } else if (lead_char != (CPU_CHAR)'\0') {       /* ... else if avail,              
2726:uC-LIB/lib_str.c ****                    *pstr_fmt++     = lead_char;                 /* ... fmt lead char.              
2727:uC-LIB/lib_str.c ****                     lead_char_fmtd = DEF_YES;
2728:uC-LIB/lib_str.c ****                 }
2729:uC-LIB/lib_str.c **** 
2730:uC-LIB/lib_str.c ****                 dig_exp /= 10.0f;                               /* Shift to next least-sig dig.    
2731:uC-LIB/lib_str.c **** 
2732:uC-LIB/lib_str.c ****             } else {                                            /* ... else append non-sig 0's (see
2733:uC-LIB/lib_str.c ****                *pstr_fmt++ = '0';
2734:uC-LIB/lib_str.c ****             }
2735:uC-LIB/lib_str.c **** 
2736:uC-LIB/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2737:uC-LIB/lib_str.c ****            *pstr_fmt++ = '?';
2738:uC-LIB/lib_str.c ****         }
2739:uC-LIB/lib_str.c ****     }
2740:uC-LIB/lib_str.c **** 
2741:uC-LIB/lib_str.c **** 
2742:uC-LIB/lib_str.c **** /*$PAGE*/
2743:uC-LIB/lib_str.c ****     if (nbr_dp > 0) {                                           /* Fmt str for desired nbr dp :    
2744:uC-LIB/lib_str.c ****         if (nbr_dig < 1) {                                      /* If NO digs fmt'd;               
2745:uC-LIB/lib_str.c ****             if (fmt_invalid == DEF_NO) {                        /* ... nbr fmt valid,              
2746:uC-LIB/lib_str.c ****                 if ((nbr_neg      == DEF_YES) &&                /* ... nbr neg                     
2747:uC-LIB/lib_str.c ****                     (nbr_neg_fmtd == DEF_NO )) {                /* ... but neg sign NOT yet fmt'd, 
2748:uC-LIB/lib_str.c ****                     *pstr_fmt++ = '-';                          /* ... prepend neg sign (see Notes 
2749:uC-LIB/lib_str.c ****                 } else {                                        /* ... else prepend 1 dig of '0' (s
2750:uC-LIB/lib_str.c ****                     *pstr_fmt++ = '0';
2751:uC-LIB/lib_str.c ****                 }
2752:uC-LIB/lib_str.c ****             } else {                                            /* ... else fmt '?' for invalid str
2753:uC-LIB/lib_str.c ****                 *pstr_fmt++ = '?';
2754:uC-LIB/lib_str.c ****             }
2755:uC-LIB/lib_str.c ****         }
2756:uC-LIB/lib_str.c **** 
2757:uC-LIB/lib_str.c ****         if (fmt_invalid == DEF_NO) {                            /* If nbr fmt valid, ...           
2758:uC-LIB/lib_str.c ****            *pstr_fmt++ = '.';                                   /* ... append dp prior to dp conver
2759:uC-LIB/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2760:uC-LIB/lib_str.c ****            *pstr_fmt++ = '?';
2761:uC-LIB/lib_str.c ****         }
2762:uC-LIB/lib_str.c **** 
2763:uC-LIB/lib_str.c ****         dp_exp = 10.0f;
2764:uC-LIB/lib_str.c ****         for (i = 0u; i < nbr_dp; i++) {
2765:uC-LIB/lib_str.c ****             if (fmt_invalid == DEF_NO) {
2766:uC-LIB/lib_str.c ****                                                                 /* If nbr sig digs < max, fmt str d
2767:uC-LIB/lib_str.c ****                 if (nbr_dig_sig <  LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) {
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 50


2768:uC-LIB/lib_str.c ****                     nbr_shiftd  = (CPU_INT32U)(nbr_fmt * dp_exp);
2769:uC-LIB/lib_str.c ****                     dig_val     = (CPU_INT32U)(nbr_shiftd % 10u);
2770:uC-LIB/lib_str.c ****                    *pstr_fmt++  = (CPU_CHAR  )(dig_val    + '0');
2771:uC-LIB/lib_str.c ****                     dp_exp     *=  10.0f;                       /* Shift to next least-sig dp.     
2772:uC-LIB/lib_str.c **** 
2773:uC-LIB/lib_str.c ****                     if ((nbr_shiftd  > 0) ||                    /* If shifted nbr > 0              
2774:uC-LIB/lib_str.c ****                         (nbr_dig_sig > 0)) {                    /* ... OR  > 0 sig digs already fmt
2775:uC-LIB/lib_str.c ****                          nbr_dig_sig++;                         /* ... inc nbr sig digs.           
2776:uC-LIB/lib_str.c ****                     }
2777:uC-LIB/lib_str.c **** 
2778:uC-LIB/lib_str.c ****                 } else {                                        /* ... else append non-sig 0's (see
2779:uC-LIB/lib_str.c ****                    *pstr_fmt++ = '0';
2780:uC-LIB/lib_str.c ****                 }
2781:uC-LIB/lib_str.c **** 
2782:uC-LIB/lib_str.c ****             } else {                                            /* Else fmt '?' for invalid str (se
2783:uC-LIB/lib_str.c ****                *pstr_fmt++ = '?';
2784:uC-LIB/lib_str.c ****             }
2785:uC-LIB/lib_str.c ****         }
2786:uC-LIB/lib_str.c ****     }
2787:uC-LIB/lib_str.c **** 
2788:uC-LIB/lib_str.c **** 
2789:uC-LIB/lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
2790:uC-LIB/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
2791:uC-LIB/lib_str.c ****     }
2792:uC-LIB/lib_str.c **** 
2793:uC-LIB/lib_str.c **** 
2794:uC-LIB/lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
2795:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
2796:uC-LIB/lib_str.c ****     }
2797:uC-LIB/lib_str.c **** 
2798:uC-LIB/lib_str.c **** 
2799:uC-LIB/lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
2800:uC-LIB/lib_str.c **** }
2801:uC-LIB/lib_str.c **** #endif
2802:uC-LIB/lib_str.c **** 
2803:uC-LIB/lib_str.c **** 
2804:uC-LIB/lib_str.c **** /*$PAGE*/
2805:uC-LIB/lib_str.c **** /*
2806:uC-LIB/lib_str.c **** ***************************************************************************************************
2807:uC-LIB/lib_str.c **** *                                        Str_ParseNbr_Int32U()
2808:uC-LIB/lib_str.c **** *
2809:uC-LIB/lib_str.c **** * Description : Parse 32-bit unsigned integer from string.
2810:uC-LIB/lib_str.c **** *
2811:uC-LIB/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
2812:uC-LIB/lib_str.c **** *
2813:uC-LIB/lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
2814:uC-LIB/lib_str.c **** *
2815:uC-LIB/lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
2816:uC-LIB/lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
2817:uC-LIB/lib_str.c **** *                               (b) Return a pointer to 'pstr',
2818:uC-LIB/lib_str.c **** *                                       otherwise      (see Note #2a2A2).
2819:uC-LIB/lib_str.c **** *
2820:uC-LIB/lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
2821:uC-LIB/lib_str.c **** *
2822:uC-LIB/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
2823:uC-LIB/lib_str.c **** *
2824:uC-LIB/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 51


2825:uC-LIB/lib_str.c **** *
2826:uC-LIB/lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
2827:uC-LIB/lib_str.c **** *
2828:uC-LIB/lib_str.c **** * Caller(s)   : Application.
2829:uC-LIB/lib_str.c **** *
2830:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
2831:uC-LIB/lib_str.c **** *
2832:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : DESCRIPTION' states tha
2833:uC-LIB/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
2834:uC-LIB/lib_str.c **** *                       to a type unsigned long ... representation" :
2835:uC-LIB/lib_str.c **** *
2836:uC-LIB/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
2837:uC-LIB/lib_str.c **** *
2838:uC-LIB/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
2839:uC-LIB/lib_str.c **** *                                by isspace()]."
2840:uC-LIB/lib_str.c **** *
2841:uC-LIB/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
2842:uC-LIB/lib_str.c **** *                                    input string, starting with the first non-white-space characte
2843:uC-LIB/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
2844:uC-LIB/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
2845:uC-LIB/lib_str.c **** *
2846:uC-LIB/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
2847:uC-LIB/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
2848:uC-LIB/lib_str.c **** *
2849:uC-LIB/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
2850:uC-LIB/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
2851:uC-LIB/lib_str.c **** *                                        hexadecimal constant" :
2852:uC-LIB/lib_str.c **** *
2853:uC-LIB/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
2854:uC-LIB/lib_str.c **** *                                            sequence of decimal digits."
2855:uC-LIB/lib_str.c **** *
2856:uC-LIB/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
2857:uC-LIB/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
2858:uC-LIB/lib_str.c **** *
2859:uC-LIB/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
2860:uC-LIB/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
2861:uC-LIB/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
2862:uC-LIB/lib_str.c **** *
2863:uC-LIB/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
2864:uC-LIB/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
2865:uC-LIB/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
2866:uC-LIB/lib_str.c **** *
2867:uC-LIB/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
2868:uC-LIB/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
2869:uC-LIB/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
2870:uC-LIB/lib_str.c **** *                                                are permitted."
2871:uC-LIB/lib_str.c **** *
2872:uC-LIB/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
2873:uC-LIB/lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
2874:uC-LIB/lib_str.c **** *
2875:uC-LIB/lib_str.c **** *                                           (B) Although NO specification states that "if the value
2876:uC-LIB/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
2877:uC-LIB/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
2878:uC-LIB/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
2879:uC-LIB/lib_str.c **** *
2880:uC-LIB/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
2881:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 52


2882:uC-LIB/lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
2883:uC-LIB/lib_str.c **** *                                       integer string into an unsigned integer.
2884:uC-LIB/lib_str.c **** *
2885:uC-LIB/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
2886:uC-LIB/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
2887:uC-LIB/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
2888:uC-LIB/lib_str.c **** *$PAGE*
2889:uC-LIB/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an unsig
2890:uC-LIB/lib_str.c **** *
2891:uC-LIB/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
2892:uC-LIB/lib_str.c **** *
2893:uC-LIB/lib_str.c **** *                               (1) "no conversion [is] performed"; ...
2894:uC-LIB/lib_str.c **** *                               (2) "the value of 'str' ('pstr') [is] stored in the object pointed 
2895:uC-LIB/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
2896:uC-LIB/lib_str.c **** *
2897:uC-LIB/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
2898:uC-LIB/lib_str.c **** *
2899:uC-LIB/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
2900:uC-LIB/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
2901:uC-LIB/lib_str.c **** *
2902:uC-LIB/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
2903:uC-LIB/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
2904:uC-LIB/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
2905:uC-LIB/lib_str.c **** *
2906:uC-LIB/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
2907:uC-LIB/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
2908:uC-LIB/lib_str.c **** *                                   pointer."
2909:uC-LIB/lib_str.c **** *
2910:uC-LIB/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : RETURN VALU
2911:uC-LIB/lib_str.c **** *
2912:uC-LIB/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
2913:uC-LIB/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
2914:uC-LIB/lib_str.c **** *                                    ... shall be returned."
2915:uC-LIB/lib_str.c **** *
2916:uC-LIB/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
2917:uC-LIB/lib_str.c **** *
2918:uC-LIB/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2919:uC-LIB/lib_str.c **** *                           shall fail if" :
2920:uC-LIB/lib_str.c **** *
2921:uC-LIB/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
2922:uC-LIB/lib_str.c **** *
2923:uC-LIB/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
2924:uC-LIB/lib_str.c **** *
2925:uC-LIB/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2926:uC-LIB/lib_str.c **** *                           may fail if" :
2927:uC-LIB/lib_str.c **** *
2928:uC-LIB/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
2929:uC-LIB/lib_str.c **** *
2930:uC-LIB/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
2931:uC-LIB/lib_str.c **** *
2932:uC-LIB/lib_str.c **** *                   (a) Valid parse string integer :
2933:uC-LIB/lib_str.c **** *
2934:uC-LIB/lib_str.c **** *                           pstr      = "     ABCDE xyz"
2935:uC-LIB/lib_str.c **** *                           nbr_base  = 16
2936:uC-LIB/lib_str.c **** *
2937:uC-LIB/lib_str.c **** *                           nbr       = 703710
2938:uC-LIB/lib_str.c **** *                           pstr_next = " xyz"
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 53


2939:uC-LIB/lib_str.c **** *
2940:uC-LIB/lib_str.c **** *
2941:uC-LIB/lib_str.c **** *                   (b) Invalid parse string integer :
2942:uC-LIB/lib_str.c **** *
2943:uC-LIB/lib_str.c **** *                           pstr      = "     ABCDE"
2944:uC-LIB/lib_str.c **** *                           nbr_base  = 10
2945:uC-LIB/lib_str.c **** *
2946:uC-LIB/lib_str.c **** *                           nbr       =  0
2947:uC-LIB/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
2948:uC-LIB/lib_str.c **** *
2949:uC-LIB/lib_str.c **** *
2950:uC-LIB/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
2951:uC-LIB/lib_str.c **** *
2952:uC-LIB/lib_str.c **** *                           pstr      = "     0xGABCDE"
2953:uC-LIB/lib_str.c **** *                           nbr_base  = 16
2954:uC-LIB/lib_str.c **** *
2955:uC-LIB/lib_str.c **** *                           nbr       =  0
2956:uC-LIB/lib_str.c **** *                           pstr_next = "xGABCDE"
2957:uC-LIB/lib_str.c **** *
2958:uC-LIB/lib_str.c **** *
2959:uC-LIB/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
2960:uC-LIB/lib_str.c **** *                               following invalid hexadecimal characters) :
2961:uC-LIB/lib_str.c **** *
2962:uC-LIB/lib_str.c **** *                           pstr      = "     0xGABCDE"
2963:uC-LIB/lib_str.c **** *                           nbr_base  =  0
2964:uC-LIB/lib_str.c **** *
2965:uC-LIB/lib_str.c **** *                           nbr       =  0
2966:uC-LIB/lib_str.c **** *                           pstr_next = "xGABCDE"
2967:uC-LIB/lib_str.c **** *
2968:uC-LIB/lib_str.c **** *
2969:uC-LIB/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
2970:uC-LIB/lib_str.c **** *                               following invalid octal       characters) :
2971:uC-LIB/lib_str.c **** *
2972:uC-LIB/lib_str.c **** *                           pstr      = "     0GABCDE"
2973:uC-LIB/lib_str.c **** *                           nbr_base  =  0
2974:uC-LIB/lib_str.c **** *
2975:uC-LIB/lib_str.c **** *                           nbr       =  0
2976:uC-LIB/lib_str.c **** *                           pstr_next = "GABCDE"
2977:uC-LIB/lib_str.c **** *
2978:uC-LIB/lib_str.c **** *$PAGE*
2979:uC-LIB/lib_str.c **** *                   (f) Parse string integer overflow :
2980:uC-LIB/lib_str.c **** *
2981:uC-LIB/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
2982:uC-LIB/lib_str.c **** *                           nbr_base  = 10
2983:uC-LIB/lib_str.c **** *
2984:uC-LIB/lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
2985:uC-LIB/lib_str.c **** *                           pstr_next = "*123456"
2986:uC-LIB/lib_str.c **** *
2987:uC-LIB/lib_str.c **** *
2988:uC-LIB/lib_str.c **** *                   (g) Invalid negative unsigned parse string :
2989:uC-LIB/lib_str.c **** *
2990:uC-LIB/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
2991:uC-LIB/lib_str.c **** *                           nbr_base  = 10
2992:uC-LIB/lib_str.c **** *
2993:uC-LIB/lib_str.c **** *                           nbr       = 0
2994:uC-LIB/lib_str.c **** *                           pstr_next = pstr = "  -12345678901234567890*123456"
2995:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 54


2996:uC-LIB/lib_str.c **** ***************************************************************************************************
2997:uC-LIB/lib_str.c **** */
2998:uC-LIB/lib_str.c **** 
2999:uC-LIB/lib_str.c **** CPU_INT32U  Str_ParseNbr_Int32U (const  CPU_CHAR     *pstr,
3000:uC-LIB/lib_str.c ****                                         CPU_CHAR    **pstr_next,
3001:uC-LIB/lib_str.c ****                                         CPU_INT08U    nbr_base)
3002:uC-LIB/lib_str.c **** {
3003:uC-LIB/lib_str.c ****     CPU_INT32U  nbr;
3004:uC-LIB/lib_str.c **** 
3005:uC-LIB/lib_str.c **** 
3006:uC-LIB/lib_str.c ****     nbr = Str_ParseNbr_Int32(               pstr,               /* Parse/convert str ...           
3007:uC-LIB/lib_str.c ****                                             pstr_next,
3008:uC-LIB/lib_str.c ****                                             nbr_base,
3009:uC-LIB/lib_str.c ****                                             DEF_NO,             /* ... as unsigned int (see Note #2
3010:uC-LIB/lib_str.c ****                              (CPU_BOOLEAN *)0);
3011:uC-LIB/lib_str.c **** 
3012:uC-LIB/lib_str.c ****     return (nbr);
3013:uC-LIB/lib_str.c **** }
3014:uC-LIB/lib_str.c **** 
3015:uC-LIB/lib_str.c **** 
3016:uC-LIB/lib_str.c **** /*$PAGE*/
3017:uC-LIB/lib_str.c **** /*
3018:uC-LIB/lib_str.c **** ***************************************************************************************************
3019:uC-LIB/lib_str.c **** *                                        Str_ParseNbr_Int32S()
3020:uC-LIB/lib_str.c **** *
3021:uC-LIB/lib_str.c **** * Description : Parse 32-bit signed integer from string.
3022:uC-LIB/lib_str.c **** *
3023:uC-LIB/lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
3024:uC-LIB/lib_str.c **** *
3025:uC-LIB/lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
3026:uC-LIB/lib_str.c **** *
3027:uC-LIB/lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
3028:uC-LIB/lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
3029:uC-LIB/lib_str.c **** *                               (b) Return a pointer to 'pstr',
3030:uC-LIB/lib_str.c **** *                                       otherwise      (see Note #2a2A2).
3031:uC-LIB/lib_str.c **** *
3032:uC-LIB/lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
3033:uC-LIB/lib_str.c **** *
3034:uC-LIB/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO over- or underflow (see Note #2a3A).
3035:uC-LIB/lib_str.c **** *
3036:uC-LIB/lib_str.c **** *               DEF_INT_32S_MIN_VAL, if integer parsed but negatively underflowed (see Note #2a3A1a
3037:uC-LIB/lib_str.c **** *
3038:uC-LIB/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but positively overflowed  (see Note #2a3A1b
3039:uC-LIB/lib_str.c **** *
3040:uC-LIB/lib_str.c **** *               0,                   otherwise                                    (see Note #2a3B).
3041:uC-LIB/lib_str.c **** *
3042:uC-LIB/lib_str.c **** * Caller(s)   : Application.
3043:uC-LIB/lib_str.c **** *
3044:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
3045:uC-LIB/lib_str.c **** *
3046:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3047:uC-LIB/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3048:uC-LIB/lib_str.c **** *                       to a type long ... representation" :
3049:uC-LIB/lib_str.c **** *
3050:uC-LIB/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3051:uC-LIB/lib_str.c **** *
3052:uC-LIB/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 55


3053:uC-LIB/lib_str.c **** *                                by isspace()]."
3054:uC-LIB/lib_str.c **** *
3055:uC-LIB/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3056:uC-LIB/lib_str.c **** *                                    input string, starting with the first non-white-space characte
3057:uC-LIB/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3058:uC-LIB/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3059:uC-LIB/lib_str.c **** *
3060:uC-LIB/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3061:uC-LIB/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3062:uC-LIB/lib_str.c **** *
3063:uC-LIB/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3064:uC-LIB/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3065:uC-LIB/lib_str.c **** *                                        hexadecimal constant" :
3066:uC-LIB/lib_str.c **** *
3067:uC-LIB/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3068:uC-LIB/lib_str.c **** *                                            sequence of decimal digits."
3069:uC-LIB/lib_str.c **** *
3070:uC-LIB/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3071:uC-LIB/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3072:uC-LIB/lib_str.c **** *
3073:uC-LIB/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3074:uC-LIB/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3075:uC-LIB/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3076:uC-LIB/lib_str.c **** *
3077:uC-LIB/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
3078:uC-LIB/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3079:uC-LIB/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3080:uC-LIB/lib_str.c **** *
3081:uC-LIB/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3082:uC-LIB/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3083:uC-LIB/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3084:uC-LIB/lib_str.c **** *                                                are permitted."
3085:uC-LIB/lib_str.c **** *
3086:uC-LIB/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3087:uC-LIB/lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
3088:uC-LIB/lib_str.c **** *
3089:uC-LIB/lib_str.c **** *                                           (B) Although NO specification states that "if the value
3090:uC-LIB/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3091:uC-LIB/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3092:uC-LIB/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3093:uC-LIB/lib_str.c **** *
3094:uC-LIB/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3095:uC-LIB/lib_str.c **** *
3096:uC-LIB/lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
3097:uC-LIB/lib_str.c **** *                                       integer string into an unsigned integer.
3098:uC-LIB/lib_str.c **** *
3099:uC-LIB/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3100:uC-LIB/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3101:uC-LIB/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
3102:uC-LIB/lib_str.c **** *$PAGE*
3103:uC-LIB/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3104:uC-LIB/lib_str.c **** *
3105:uC-LIB/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3106:uC-LIB/lib_str.c **** *
3107:uC-LIB/lib_str.c **** *                               (1) "no conversion is performed"; ...
3108:uC-LIB/lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3109:uC-LIB/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 56


3110:uC-LIB/lib_str.c **** *
3111:uC-LIB/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3112:uC-LIB/lib_str.c **** *
3113:uC-LIB/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3114:uC-LIB/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3115:uC-LIB/lib_str.c **** *
3116:uC-LIB/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3117:uC-LIB/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3118:uC-LIB/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3119:uC-LIB/lib_str.c **** *
3120:uC-LIB/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3121:uC-LIB/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3122:uC-LIB/lib_str.c **** *                                   pointer."
3123:uC-LIB/lib_str.c **** *
3124:uC-LIB/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3125:uC-LIB/lib_str.c **** *
3126:uC-LIB/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3127:uC-LIB/lib_str.c **** *
3128:uC-LIB/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3129:uC-LIB/lib_str.c **** *                                    of the following "shall be returned" :
3130:uC-LIB/lib_str.c **** *                                   (a) "{LONG_MIN}" or ...
3131:uC-LIB/lib_str.c **** *                                   (b) "{LONG_MAX}"
3132:uC-LIB/lib_str.c **** *
3133:uC-LIB/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3134:uC-LIB/lib_str.c **** *
3135:uC-LIB/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3136:uC-LIB/lib_str.c **** *                           shall fail if" :
3137:uC-LIB/lib_str.c **** *
3138:uC-LIB/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3139:uC-LIB/lib_str.c **** *
3140:uC-LIB/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3141:uC-LIB/lib_str.c **** *
3142:uC-LIB/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3143:uC-LIB/lib_str.c **** *                           may fail if" :
3144:uC-LIB/lib_str.c **** *
3145:uC-LIB/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3146:uC-LIB/lib_str.c **** *
3147:uC-LIB/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3148:uC-LIB/lib_str.c **** *
3149:uC-LIB/lib_str.c **** *                   (a) Valid parse string integer :
3150:uC-LIB/lib_str.c **** *
3151:uC-LIB/lib_str.c **** *                           pstr      = "     ABCDE xyz"
3152:uC-LIB/lib_str.c **** *                           nbr_base  = 16
3153:uC-LIB/lib_str.c **** *
3154:uC-LIB/lib_str.c **** *                           nbr       = 703710
3155:uC-LIB/lib_str.c **** *                           pstr_next = " xyz"
3156:uC-LIB/lib_str.c **** *
3157:uC-LIB/lib_str.c **** *
3158:uC-LIB/lib_str.c **** *                   (b) Invalid parse string integer :
3159:uC-LIB/lib_str.c **** *
3160:uC-LIB/lib_str.c **** *                           pstr      = "     ABCDE"
3161:uC-LIB/lib_str.c **** *                           nbr_base  = 10
3162:uC-LIB/lib_str.c **** *
3163:uC-LIB/lib_str.c **** *                           nbr       =  0
3164:uC-LIB/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3165:uC-LIB/lib_str.c **** *
3166:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 57


3167:uC-LIB/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3168:uC-LIB/lib_str.c **** *
3169:uC-LIB/lib_str.c **** *                           pstr      = "     0xGABCDE"
3170:uC-LIB/lib_str.c **** *                           nbr_base  = 16
3171:uC-LIB/lib_str.c **** *
3172:uC-LIB/lib_str.c **** *                           nbr       =  0
3173:uC-LIB/lib_str.c **** *                           pstr_next = "xGABCDE"
3174:uC-LIB/lib_str.c **** *
3175:uC-LIB/lib_str.c **** *
3176:uC-LIB/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3177:uC-LIB/lib_str.c **** *                               following invalid hexadecimal characters) :
3178:uC-LIB/lib_str.c **** *
3179:uC-LIB/lib_str.c **** *                           pstr      = "     0xGABCDE"
3180:uC-LIB/lib_str.c **** *                           nbr_base  =  0
3181:uC-LIB/lib_str.c **** *
3182:uC-LIB/lib_str.c **** *                           nbr       =  0
3183:uC-LIB/lib_str.c **** *                           pstr_next = "xGABCDE"
3184:uC-LIB/lib_str.c **** *
3185:uC-LIB/lib_str.c **** *
3186:uC-LIB/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3187:uC-LIB/lib_str.c **** *                               following invalid octal       characters) :
3188:uC-LIB/lib_str.c **** *
3189:uC-LIB/lib_str.c **** *                           pstr      = "     0GABCDE"
3190:uC-LIB/lib_str.c **** *                           nbr_base  =  0
3191:uC-LIB/lib_str.c **** *
3192:uC-LIB/lib_str.c **** *                           nbr       =  0
3193:uC-LIB/lib_str.c **** *                           pstr_next = "GABCDE"
3194:uC-LIB/lib_str.c **** *
3195:uC-LIB/lib_str.c **** *$PAGE*
3196:uC-LIB/lib_str.c **** *                   (f) Parse string integer overflow :
3197:uC-LIB/lib_str.c **** *
3198:uC-LIB/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3199:uC-LIB/lib_str.c **** *                           nbr_base  = 10
3200:uC-LIB/lib_str.c **** *
3201:uC-LIB/lib_str.c **** *                           nbr       = DEF_INT_32S_MAX_VAL
3202:uC-LIB/lib_str.c **** *                           pstr_next = "*123456"
3203:uC-LIB/lib_str.c **** *
3204:uC-LIB/lib_str.c **** *
3205:uC-LIB/lib_str.c **** *                   (g) Parse string integer underflow :
3206:uC-LIB/lib_str.c **** *
3207:uC-LIB/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3208:uC-LIB/lib_str.c **** *                           nbr_base  = 10
3209:uC-LIB/lib_str.c **** *
3210:uC-LIB/lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3211:uC-LIB/lib_str.c **** *                           pstr_next = "*123456"
3212:uC-LIB/lib_str.c **** *
3213:uC-LIB/lib_str.c **** ***************************************************************************************************
3214:uC-LIB/lib_str.c **** */
3215:uC-LIB/lib_str.c **** 
3216:uC-LIB/lib_str.c **** CPU_INT32S  Str_ParseNbr_Int32S (const  CPU_CHAR     *pstr,
3217:uC-LIB/lib_str.c ****                                         CPU_CHAR    **pstr_next,
3218:uC-LIB/lib_str.c ****                                         CPU_INT08U    nbr_base)
3219:uC-LIB/lib_str.c **** {
3220:uC-LIB/lib_str.c ****     CPU_INT32S   nbr;
3221:uC-LIB/lib_str.c ****     CPU_INT32U   nbr_abs;
3222:uC-LIB/lib_str.c ****     CPU_BOOLEAN  nbr_neg;
3223:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 58


3224:uC-LIB/lib_str.c **** 
3225:uC-LIB/lib_str.c ****     nbr_abs = Str_ParseNbr_Int32(pstr,                          /* Parse/convert str ...           
3226:uC-LIB/lib_str.c ****                                  pstr_next,
3227:uC-LIB/lib_str.c ****                                  nbr_base,
3228:uC-LIB/lib_str.c ****                                  DEF_YES,                       /* ... as signed int (see Note #2a2
3229:uC-LIB/lib_str.c ****                                 &nbr_neg);
3230:uC-LIB/lib_str.c **** 
3231:uC-LIB/lib_str.c ****     if (nbr_neg == DEF_NO) {                                    /* Chk for neg nbr & ovf/undf (see 
3232:uC-LIB/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U) DEF_INT_32S_MAX_VAL)          ?  (CPU_INT32S)DEF_INT_32S_MAX_
3233:uC-LIB/lib_str.c ****                                                                     :  (CPU_INT32S)nbr_abs;
3234:uC-LIB/lib_str.c ****     } else {
3235:uC-LIB/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U)-DEF_INT_32S_MIN_VAL_ONES_CPL) ?  (CPU_INT32S)DEF_INT_32S_MIN_
3236:uC-LIB/lib_str.c ****                                                                     : -(CPU_INT32S)nbr_abs;
3237:uC-LIB/lib_str.c ****     }
3238:uC-LIB/lib_str.c **** 
3239:uC-LIB/lib_str.c ****     return (nbr);
3240:uC-LIB/lib_str.c **** }
3241:uC-LIB/lib_str.c **** 
3242:uC-LIB/lib_str.c **** 
3243:uC-LIB/lib_str.c **** /*$PAGE*/
3244:uC-LIB/lib_str.c **** /*
3245:uC-LIB/lib_str.c **** ***************************************************************************************************
3246:uC-LIB/lib_str.c **** ***************************************************************************************************
3247:uC-LIB/lib_str.c **** *                                           LOCAL FUNCTIONS
3248:uC-LIB/lib_str.c **** ***************************************************************************************************
3249:uC-LIB/lib_str.c **** ***************************************************************************************************
3250:uC-LIB/lib_str.c **** */
3251:uC-LIB/lib_str.c **** 
3252:uC-LIB/lib_str.c **** /*
3253:uC-LIB/lib_str.c **** ***************************************************************************************************
3254:uC-LIB/lib_str.c **** *                                         Str_FmtNbr_Int32()
3255:uC-LIB/lib_str.c **** *
3256:uC-LIB/lib_str.c **** * Description : Format 32-bit integer into a multi-digit character string.
3257:uC-LIB/lib_str.c **** *
3258:uC-LIB/lib_str.c **** * Argument(s) : nbr             Number           to format.
3259:uC-LIB/lib_str.c **** *
3260:uC-LIB/lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
3261:uC-LIB/lib_str.c **** *
3262:uC-LIB/lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
3263:uC-LIB/lib_str.c **** *
3264:uC-LIB/lib_str.c **** *               nbr_neg         Indicates whether number to format is negative :
3265:uC-LIB/lib_str.c **** *               -------
3266:uC-LIB/lib_str.c **** *                                   DEF_NO          Number is non-negative.
3267:uC-LIB/lib_str.c **** *                                   DEF_YES         Number is     negative.
3268:uC-LIB/lib_str.c **** *
3269:uC-LIB/lib_str.c **** *                               Argument validated in Str_FmtNbr_Int32U(),
3270:uC-LIB/lib_str.c **** *                                                     Str_FmtNbr_Int32S().
3271:uC-LIB/lib_str.c **** *
3272:uC-LIB/lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
3273:uC-LIB/lib_str.c **** *
3274:uC-LIB/lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
3275:uC-LIB/lib_str.c **** *                                     Printable character          Prepend leading character to str
3276:uC-LIB/lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6e).
3277:uC-LIB/lib_str.c **** *
3278:uC-LIB/lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
3279:uC-LIB/lib_str.c **** *
3280:uC-LIB/lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 59


3281:uC-LIB/lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
3282:uC-LIB/lib_str.c **** *
3283:uC-LIB/lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
3284:uC-LIB/lib_str.c **** *
3285:uC-LIB/lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
3286:uC-LIB/lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
3287:uC-LIB/lib_str.c **** *
3288:uC-LIB/lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
3289:uC-LIB/lib_str.c **** *
3290:uC-LIB/lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6f].
3291:uC-LIB/lib_str.c **** *
3292:uC-LIB/lib_str.c **** *               Pointer to NULL,             otherwise.
3293:uC-LIB/lib_str.c **** *
3294:uC-LIB/lib_str.c **** * Caller(s)   : Str_FmtNbr_Int32U(),
3295:uC-LIB/lib_str.c **** *               Str_FmtNbr_Int32S().
3296:uC-LIB/lib_str.c **** *$PAGE*
3297:uC-LIB/lib_str.c **** * Note(s)     : (1) (a) The maximum number of digits to format for 32-bit integer numbers :
3298:uC-LIB/lib_str.c **** *
3299:uC-LIB/lib_str.c **** *
3300:uC-LIB/lib_str.c **** *                               Maximum Number of             [  log (Number)      ]
3301:uC-LIB/lib_str.c **** *                             32-bit Integer Digits  =  floor [ -------------- + 1 ]
3302:uC-LIB/lib_str.c **** *                                   to Format                 [   log (Base)       ]
3303:uC-LIB/lib_str.c **** *
3304:uC-LIB/lib_str.c **** *                               where
3305:uC-LIB/lib_str.c **** *                                       Number                  Number to format
3306:uC-LIB/lib_str.c **** *                                       Base            Base of number to format
3307:uC-LIB/lib_str.c **** *
3308:uC-LIB/lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is zero; then NO formatti
3309:uC-LIB/lib_str.c **** *                           is performed except possible NULL-termination of the string (see Note #
3310:uC-LIB/lib_str.c **** *
3311:uC-LIB/lib_str.c **** *                               Example :
3312:uC-LIB/lib_str.c **** *
3313:uC-LIB/lib_str.c **** *                                   nbr      = -23456
3314:uC-LIB/lib_str.c **** *                                   nbr_dig  =  0
3315:uC-LIB/lib_str.c **** *                                   nbr_base = 10
3316:uC-LIB/lib_str.c **** *
3317:uC-LIB/lib_str.c **** *                                   pstr     = ""                   See Note #7a
3318:uC-LIB/lib_str.c **** *
3319:uC-LIB/lib_str.c **** *                       (2) If the number of digits to format ('nbr_dig') is less than the number o
3320:uC-LIB/lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
3321:uC-LIB/lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
3322:uC-LIB/lib_str.c **** *
3323:uC-LIB/lib_str.c **** *                               Example :
3324:uC-LIB/lib_str.c **** *
3325:uC-LIB/lib_str.c **** *                                   nbr      = 23456
3326:uC-LIB/lib_str.c **** *                                   nbr_dig  = 3
3327:uC-LIB/lib_str.c **** *                                   nbr_base = 10
3328:uC-LIB/lib_str.c **** *
3329:uC-LIB/lib_str.c **** *                                   pstr     = "???"                See Note #7b
3330:uC-LIB/lib_str.c **** *
3331:uC-LIB/lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of digits to
3332:uC-LIB/lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
3333:uC-LIB/lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
3334:uC-LIB/lib_str.c **** *                           the negative sign.
3335:uC-LIB/lib_str.c **** *
3336:uC-LIB/lib_str.c **** *                               Example :
3337:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 60


3338:uC-LIB/lib_str.c **** *                                   nbr      = -23456
3339:uC-LIB/lib_str.c **** *                                   nbr_dig  =  5
3340:uC-LIB/lib_str.c **** *                                   nbr_base = 10
3341:uC-LIB/lib_str.c **** *
3342:uC-LIB/lib_str.c **** *                                   pstr     = "?????"              See Note #7b
3343:uC-LIB/lib_str.c **** *
3344:uC-LIB/lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
3345:uC-LIB/lib_str.c **** *$PAGE*
3346:uC-LIB/lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
3347:uC-LIB/lib_str.c **** *
3348:uC-LIB/lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
3349:uC-LIB/lib_str.c **** *
3350:uC-LIB/lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
3351:uC-LIB/lib_str.c **** *                           (B) with the exception of '0'.
3352:uC-LIB/lib_str.c **** *
3353:uC-LIB/lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
3354:uC-LIB/lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
3355:uC-LIB/lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
3356:uC-LIB/lib_str.c **** *                           ('nbr_dig').
3357:uC-LIB/lib_str.c **** *
3358:uC-LIB/lib_str.c **** *                               Examples :
3359:uC-LIB/lib_str.c **** *
3360:uC-LIB/lib_str.c **** *                                   nbr       = 23456
3361:uC-LIB/lib_str.c **** *                                   nbr_dig   = 7
3362:uC-LIB/lib_str.c **** *                                   nbr_base  = 10
3363:uC-LIB/lib_str.c **** *                                   lead_char = ' '
3364:uC-LIB/lib_str.c **** *
3365:uC-LIB/lib_str.c **** *                                   pstr      = "  23456"
3366:uC-LIB/lib_str.c **** *
3367:uC-LIB/lib_str.c **** *
3368:uC-LIB/lib_str.c **** *                                   nbr       = -23456
3369:uC-LIB/lib_str.c **** *                                   nbr_dig   = 7
3370:uC-LIB/lib_str.c **** *                                   nbr_base  = 10
3371:uC-LIB/lib_str.c **** *                                   lead_char = ' '
3372:uC-LIB/lib_str.c **** *
3373:uC-LIB/lib_str.c **** *                                   pstr      = " -23456"
3374:uC-LIB/lib_str.c **** *
3375:uC-LIB/lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
3376:uC-LIB/lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character 
3377:uC-LIB/lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
3378:uC-LIB/lib_str.c **** *
3379:uC-LIB/lib_str.c **** *                                   Examples :
3380:uC-LIB/lib_str.c **** *
3381:uC-LIB/lib_str.c **** *                                       nbr        = -23456
3382:uC-LIB/lib_str.c **** *                                       nbr_dig    =  8
3383:uC-LIB/lib_str.c **** *                                       nbr_base   = 10
3384:uC-LIB/lib_str.c **** *                                       lead_char  = '0'
3385:uC-LIB/lib_str.c **** *
3386:uC-LIB/lib_str.c **** *                                       pstr       = "-0023456"
3387:uC-LIB/lib_str.c **** *
3388:uC-LIB/lib_str.c **** *
3389:uC-LIB/lib_str.c **** *                                       nbr        = -43981
3390:uC-LIB/lib_str.c **** *                                       nbr_dig    =  8
3391:uC-LIB/lib_str.c **** *                                       nbr_base   = 16
3392:uC-LIB/lib_str.c **** *                                       lead_char  = '0'
3393:uC-LIB/lib_str.c **** *                                       lower_case = DEF_NO
3394:uC-LIB/lib_str.c **** *
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 61


3395:uC-LIB/lib_str.c **** *                                       pstr       = "-000ABCD"
3396:uC-LIB/lib_str.c **** *
3397:uC-LIB/lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
3398:uC-LIB/lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character 
3399:uC-LIB/lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
3400:uC-LIB/lib_str.c **** *
3401:uC-LIB/lib_str.c **** *                                   Examples :
3402:uC-LIB/lib_str.c **** *
3403:uC-LIB/lib_str.c **** *                                       nbr        = -23456
3404:uC-LIB/lib_str.c **** *                                       nbr_dig    =  8
3405:uC-LIB/lib_str.c **** *                                       nbr_base   = 10
3406:uC-LIB/lib_str.c **** *                                       lead_char  = '#'
3407:uC-LIB/lib_str.c **** *
3408:uC-LIB/lib_str.c **** *                                       pstr       = "##-23456"
3409:uC-LIB/lib_str.c **** *
3410:uC-LIB/lib_str.c **** *
3411:uC-LIB/lib_str.c **** *                                       nbr        = -43981
3412:uC-LIB/lib_str.c **** *                                       nbr_dig    =  8
3413:uC-LIB/lib_str.c **** *                                       nbr_base   = 16
3414:uC-LIB/lib_str.c **** *                                       lead_char  = '#'
3415:uC-LIB/lib_str.c **** *                                       lower_case = DEF_YES
3416:uC-LIB/lib_str.c **** *
3417:uC-LIB/lib_str.c **** *                                       pstr       = "###-abcd"
3418:uC-LIB/lib_str.c **** *
3419:uC-LIB/lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
3420:uC-LIB/lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
3421:uC-LIB/lib_str.c **** *                       (3) ... but NO leading character available;           ...
3422:uC-LIB/lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
3423:uC-LIB/lib_str.c **** *
3424:uC-LIB/lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
3425:uC-LIB/lib_str.c **** *$PAGE*
3426:uC-LIB/lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
3427:uC-LIB/lib_str.c **** *                       array formatting.
3428:uC-LIB/lib_str.c **** *
3429:uC-LIB/lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
3430:uC-LIB/lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
3431:uC-LIB/lib_str.c **** *
3432:uC-LIB/lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
3433:uC-LIB/lib_str.c **** *
3434:uC-LIB/lib_str.c **** *                   (b) To prevent character buffer overrun :
3435:uC-LIB/lib_str.c **** *
3436:uC-LIB/lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
3437:uC-LIB/lib_str.c **** *                                                               1 negative sign   +
3438:uC-LIB/lib_str.c **** *                                                               1 'NUL' terminator)  characters
3439:uC-LIB/lib_str.c **** *
3440:uC-LIB/lib_str.c **** *               (6) String format terminates when :
3441:uC-LIB/lib_str.c **** *
3442:uC-LIB/lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
3443:uC-LIB/lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
3444:uC-LIB/lib_str.c **** *
3445:uC-LIB/lib_str.c **** *                   (b) Number of digits to format ('nbr_dig') is zero.
3446:uC-LIB/lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
3447:uC-LIB/lib_str.c **** *
3448:uC-LIB/lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant 
3449:uC-LIB/lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible 
3450:uC-LIB/lib_str.c **** *                           negative sign.
3451:uC-LIB/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 62


3452:uC-LIB/lib_str.c **** *
3453:uC-LIB/lib_str.c **** *                   (d) Base is passed an invalid base (see Note #2).
3454:uC-LIB/lib_str.c **** *                       (1) Invalid string format performed; NULL pointer returned.
3455:uC-LIB/lib_str.c **** *
3456:uC-LIB/lib_str.c **** *                   (e) Lead character is NOT a valid, printable character (see Note #3a).
3457:uC-LIB/lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
3458:uC-LIB/lib_str.c **** *
3459:uC-LIB/lib_str.c **** *                   (f) Number successfully formatted into character string array.
3460:uC-LIB/lib_str.c **** *
3461:uC-LIB/lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
3462:uC-LIB/lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
3463:uC-LIB/lib_str.c **** *                   number of digits to format ('nbr_dig') :
3464:uC-LIB/lib_str.c **** *
3465:uC-LIB/lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
3466:uC-LIB/lib_str.c **** *                          number of     =  {
3467:uC-LIB/lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
3468:uC-LIB/lib_str.c **** *
3469:uC-LIB/lib_str.c **** ***************************************************************************************************
3470:uC-LIB/lib_str.c **** */
3471:uC-LIB/lib_str.c **** 
3472:uC-LIB/lib_str.c **** static  CPU_CHAR  *Str_FmtNbr_Int32 (CPU_INT32U    nbr,
3473:uC-LIB/lib_str.c ****                                      CPU_INT08U    nbr_dig,
3474:uC-LIB/lib_str.c ****                                      CPU_INT08U    nbr_base,
3475:uC-LIB/lib_str.c ****                                      CPU_BOOLEAN   nbr_neg,
3476:uC-LIB/lib_str.c ****                                      CPU_CHAR      lead_char,
3477:uC-LIB/lib_str.c ****                                      CPU_BOOLEAN   lower_case,
3478:uC-LIB/lib_str.c ****                                      CPU_BOOLEAN   nul,
3479:uC-LIB/lib_str.c ****                                      CPU_CHAR     *pstr)
3480:uC-LIB/lib_str.c **** {
  27              		.loc 1 3480 0
  28              		.cfi_startproc
  29              		@ args = 16, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              		.cfi_def_cfa_offset 36
  34              		.cfi_offset 4, -36
  35              		.cfi_offset 5, -32
  36              		.cfi_offset 6, -28
  37              		.cfi_offset 7, -24
  38              		.cfi_offset 8, -20
  39              		.cfi_offset 9, -16
  40              		.cfi_offset 10, -12
  41              		.cfi_offset 11, -8
  42              		.cfi_offset 14, -4
  43 0004 85B0     		sub	sp, sp, #20
  44              		.cfi_def_cfa_offset 56
  45 0006 9DF83870 		ldrb	r7, [sp, #56]	@ zero_extendqisi2
  46 000a 9DF83CA0 		ldrb	r10, [sp, #60]	@ zero_extendqisi2
  47 000e 9DF840B0 		ldrb	fp, [sp, #64]	@ zero_extendqisi2
3481:uC-LIB/lib_str.c ****     CPU_CHAR     *pstr_fmt;
3482:uC-LIB/lib_str.c ****     CPU_DATA      i;
3483:uC-LIB/lib_str.c ****     CPU_INT32U    nbr_fmt;
3484:uC-LIB/lib_str.c ****     CPU_INT32U    nbr_log;
3485:uC-LIB/lib_str.c ****     CPU_INT08U    nbr_dig_max;
3486:uC-LIB/lib_str.c ****     CPU_INT08U    nbr_dig_min;
3487:uC-LIB/lib_str.c ****     CPU_INT08U    nbr_dig_fmtd;
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 63


3488:uC-LIB/lib_str.c ****     CPU_INT08U    nbr_neg_sign;
3489:uC-LIB/lib_str.c ****     CPU_INT08U    nbr_lead_char;
3490:uC-LIB/lib_str.c ****     CPU_INT08U    dig_val;
3491:uC-LIB/lib_str.c ****     CPU_INT08U    lead_char_delta_0;
3492:uC-LIB/lib_str.c ****     CPU_INT08U    lead_char_delta_a;
3493:uC-LIB/lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
3494:uC-LIB/lib_str.c ****     CPU_BOOLEAN   lead_char_0;
3495:uC-LIB/lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
3496:uC-LIB/lib_str.c ****     CPU_BOOLEAN   print_char;
3497:uC-LIB/lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
3498:uC-LIB/lib_str.c **** 
3499:uC-LIB/lib_str.c **** 
3500:uC-LIB/lib_str.c **** /*$PAGE*/
3501:uC-LIB/lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
3502:uC-LIB/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
  48              		.loc 1 3502 0
  49 0012 119C     		ldr	r4, [sp, #68]
  50 0014 002C     		cmp	r4, #0
  51 0016 00F0C080 		beq	.L30
  52              	.LVL1:
3503:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
3504:uC-LIB/lib_str.c ****     }
3505:uC-LIB/lib_str.c **** 
3506:uC-LIB/lib_str.c ****     fmt_invalid = DEF_NO;
3507:uC-LIB/lib_str.c **** 
3508:uC-LIB/lib_str.c ****     if (nbr_dig < 1) {                                          /* If nbr digs = 0, ...            
  53              		.loc 1 3508 0
  54 001a 09B1     		cbz	r1, .L31
3506:uC-LIB/lib_str.c **** 
  55              		.loc 1 3506 0
  56 001c 0026     		movs	r6, #0
  57 001e 00E0     		b	.L3
  58              	.L31:
3509:uC-LIB/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
  59              		.loc 1 3509 0
  60 0020 0126     		movs	r6, #1
  61              	.L3:
  62              	.LVL2:
3510:uC-LIB/lib_str.c ****     }
3511:uC-LIB/lib_str.c ****                                                                 /* If invalid base, ...            
3512:uC-LIB/lib_str.c ****     if ((nbr_base <  2u) ||
  63              		.loc 1 3512 0
  64 0022 A2F1020E 		sub	lr, r2, #2
  65 0026 5FFA8EFE 		uxtb	lr, lr
  66 002a BEF1220F 		cmp	lr, #34
  67 002e 00D9     		bls	.L4
3513:uC-LIB/lib_str.c ****         (nbr_base > 36u)) {
3514:uC-LIB/lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
  68              		.loc 1 3514 0
  69 0030 0126     		movs	r6, #1
  70              	.LVL3:
  71              	.L4:
  72 0032 9846     		mov	r8, r3
  73 0034 1446     		mov	r4, r2
  74 0036 0191     		str	r1, [sp, #4]
  75 0038 0290     		str	r0, [sp, #8]
  76              	.LVL4:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 64


3515:uC-LIB/lib_str.c ****     }
3516:uC-LIB/lib_str.c **** 
3517:uC-LIB/lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
  77              		.loc 1 3517 0
  78 003a 6FB3     		cbz	r7, .L5
3518:uC-LIB/lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
  79              		.loc 1 3518 0
  80 003c 3846     		mov	r0, r7
  81              	.LVL5:
  82 003e FFF7FEFF 		bl	ASCII_IsPrint
  83              	.LVL6:
3519:uC-LIB/lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable (see 
  84              		.loc 1 3519 0
  85 0042 0128     		cmp	r0, #1
  86 0044 25D1     		bne	.L33
3520:uC-LIB/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str        (see 
3521:uC-LIB/lib_str.c **** 
3522:uC-LIB/lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 nbr base
  87              		.loc 1 3522 0
  88 0046 302F     		cmp	r7, #48
  89 0048 26D0     		beq	.L5
3523:uC-LIB/lib_str.c ****             lead_char_delta_0 = (CPU_INT08U)(lead_char - '0');
  90              		.loc 1 3523 0
  91 004a A7F13003 		sub	r3, r7, #48
  92 004e DBB2     		uxtb	r3, r3
  93              	.LVL7:
3524:uC-LIB/lib_str.c ****             if (lower_case != DEF_YES) {
  94              		.loc 1 3524 0
  95 0050 BAF1010F 		cmp	r10, #1
  96 0054 03D0     		beq	.L6
3525:uC-LIB/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'A');
  97              		.loc 1 3525 0
  98 0056 A7F14102 		sub	r2, r7, #65
  99 005a D2B2     		uxtb	r2, r2
 100              	.LVL8:
 101 005c 02E0     		b	.L7
 102              	.LVL9:
 103              	.L6:
3526:uC-LIB/lib_str.c ****             } else {
3527:uC-LIB/lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'a');
 104              		.loc 1 3527 0
 105 005e A7F16102 		sub	r2, r7, #97
 106 0062 D2B2     		uxtb	r2, r2
 107              	.LVL10:
 108              	.L7:
3528:uC-LIB/lib_str.c ****             }
3529:uC-LIB/lib_str.c **** 
3530:uC-LIB/lib_str.c ****             lead_char_dig = (((nbr_base <= 10u) &&  (lead_char_delta_0 <  nbr_base))      ||
 109              		.loc 1 3530 0
 110 0064 0A2C     		cmp	r4, #10
 111 0066 01D8     		bhi	.L8
 112              		.loc 1 3530 0 is_stmt 0 discriminator 1
 113 0068 9C42     		cmp	r4, r3
 114 006a 09D8     		bhi	.L34
 115              	.L8:
 116              		.loc 1 3530 0 discriminator 4
 117 006c 0A2C     		cmp	r4, #10
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 65


 118 006e 09D9     		bls	.L35
3531:uC-LIB/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 119              		.loc 1 3531 0 is_stmt 1
 120 0070 092B     		cmp	r3, #9
 121 0072 09D9     		bls	.L36
3532:uC-LIB/lib_str.c ****                                                     (lead_char_delta_a < (nbr_base - 10u))))) ? DEF
 122              		.loc 1 3532 0 discriminator 1
 123 0074 A4F10A03 		sub	r3, r4, #10
 124              	.LVL11:
3531:uC-LIB/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 125              		.loc 1 3531 0 discriminator 1
 126 0078 9A42     		cmp	r2, r3
 127 007a 07D3     		bcc	.L37
3530:uC-LIB/lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
 128              		.loc 1 3530 0
 129 007c 0023     		movs	r3, #0
 130 007e 06E0     		b	.L9
 131              	.LVL12:
 132              	.L34:
 133 0080 0123     		movs	r3, #1
 134              	.LVL13:
 135 0082 04E0     		b	.L9
 136              	.LVL14:
 137              	.L35:
 138 0084 0023     		movs	r3, #0
 139              	.LVL15:
 140 0086 02E0     		b	.L9
 141              	.LVL16:
 142              	.L36:
 143 0088 0123     		movs	r3, #1
 144              	.LVL17:
 145 008a 00E0     		b	.L9
 146              	.L37:
 147 008c 0123     		movs	r3, #1
 148              	.L9:
 149              	.LVL18:
3533:uC-LIB/lib_str.c **** 
3534:uC-LIB/lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If lead char non-0 nbr base dig 
 150              		.loc 1 3534 0 discriminator 7
 151 008e 1BB1     		cbz	r3, .L5
 152 0090 01E0     		b	.L38
 153              	.LVL19:
 154              	.L33:
3520:uC-LIB/lib_str.c **** 
 155              		.loc 1 3520 0
 156 0092 0126     		movs	r6, #1
 157              	.LVL20:
 158 0094 00E0     		b	.L5
 159              	.LVL21:
 160              	.L38:
3535:uC-LIB/lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str             
 161              		.loc 1 3535 0
 162 0096 0126     		movs	r6, #1
 163              	.LVL22:
 164              	.L5:
3536:uC-LIB/lib_str.c ****             }
3537:uC-LIB/lib_str.c ****         }
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 66


3538:uC-LIB/lib_str.c ****     }
3539:uC-LIB/lib_str.c **** 
3540:uC-LIB/lib_str.c **** 
3541:uC-LIB/lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
3542:uC-LIB/lib_str.c ****     pstr_fmt = pstr;
3543:uC-LIB/lib_str.c **** 
3544:uC-LIB/lib_str.c ****     if (fmt_invalid == DEF_NO) {
 165              		.loc 1 3544 0
 166 0098 2EB1     		cbz	r6, .L39
 167 009a 30E0     		b	.L11
 168              	.LVL23:
 169              	.L12:
3545:uC-LIB/lib_str.c ****         nbr_fmt     = nbr;
3546:uC-LIB/lib_str.c ****         nbr_log     = nbr;
3547:uC-LIB/lib_str.c ****         nbr_dig_max = 1u;
3548:uC-LIB/lib_str.c ****         while (nbr_log >= nbr_base) {                           /* While nbr base digs avail, ...  
3549:uC-LIB/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 170              		.loc 1 3549 0
 171 009c 0133     		adds	r3, r3, #1
 172              	.LVL24:
 173 009e DBB2     		uxtb	r3, r3
 174              	.LVL25:
3550:uC-LIB/lib_str.c ****             nbr_log /= nbr_base;
 175              		.loc 1 3550 0
 176 00a0 B2FBF4F2 		udiv	r2, r2, r4
 177              	.LVL26:
 178 00a4 01E0     		b	.L10
 179              	.LVL27:
 180              	.L39:
 181 00a6 029A     		ldr	r2, [sp, #8]
 182 00a8 0123     		movs	r3, #1
 183              	.L10:
 184              	.LVL28:
3548:uC-LIB/lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 185              		.loc 1 3548 0
 186 00aa A242     		cmp	r2, r4
 187 00ac F6D2     		bcs	.L12
3551:uC-LIB/lib_str.c ****         }
3552:uC-LIB/lib_str.c **** 
3553:uC-LIB/lib_str.c ****         nbr_neg_sign = (nbr_neg == DEF_YES) ? 1u : 0u;
 188              		.loc 1 3553 0
 189 00ae B8F1010F 		cmp	r8, #1
 190 00b2 01D1     		bne	.L40
 191 00b4 0122     		movs	r2, #1
 192              	.LVL29:
 193 00b6 00E0     		b	.L13
 194              	.LVL30:
 195              	.L40:
 196 00b8 0022     		movs	r2, #0
 197              	.LVL31:
 198              	.L13:
3554:uC-LIB/lib_str.c ****         if (nbr_dig >= (nbr_dig_max + nbr_neg_sign)) {          /* If req'd nbr digs >= (max nbr di
 199              		.loc 1 3554 0 discriminator 4
 200 00ba 9918     		adds	r1, r3, r2
 201 00bc 019D     		ldr	r5, [sp, #4]
 202 00be 8D42     		cmp	r5, r1
 203 00c0 13DB     		blt	.L41
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 67


 204              	.LVL32:
3555:uC-LIB/lib_str.c ****             nbr_neg_fmtd = DEF_NO;
3556:uC-LIB/lib_str.c ****             nbr_dig_min  = DEF_MIN(nbr_dig_max, nbr_dig);
 205              		.loc 1 3556 0
 206 00c2 AB42     		cmp	r3, r5
 207 00c4 28BF     		it	cs
 208 00c6 2B46     		movcs	r3, r5
 209              	.LVL33:
3557:uC-LIB/lib_str.c ****                                                                 /* ... calc nbr digs to fmt & nbr l
3558:uC-LIB/lib_str.c ****             if (lead_char != (CPU_CHAR)'\0') {
 210              		.loc 1 3558 0
 211 00c8 27B1     		cbz	r7, .L14
 212              	.LVL34:
3559:uC-LIB/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
3560:uC-LIB/lib_str.c ****                 nbr_lead_char = nbr_dig     -
 213              		.loc 1 3560 0
 214 00ca EB1A     		subs	r3, r5, r3
 215              	.LVL35:
 216 00cc 9B1A     		subs	r3, r3, r2
 217 00ce DBB2     		uxtb	r3, r3
 218              	.LVL36:
3559:uC-LIB/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 219              		.loc 1 3559 0
 220 00d0 A946     		mov	r9, r5
 221 00d2 03E0     		b	.L15
 222              	.LVL37:
 223              	.L14:
3561:uC-LIB/lib_str.c ****                                 nbr_dig_min - nbr_neg_sign;
3562:uC-LIB/lib_str.c ****             } else {
3563:uC-LIB/lib_str.c ****                 nbr_dig_fmtd  = nbr_dig_min + nbr_neg_sign;
 224              		.loc 1 3563 0
 225 00d4 1344     		add	r3, r3, r2
 226              	.LVL38:
 227 00d6 5FFA83F9 		uxtb	r9, r3
 228              	.LVL39:
3564:uC-LIB/lib_str.c ****                 nbr_lead_char = 0u;
 229              		.loc 1 3564 0
 230 00da 0023     		movs	r3, #0
 231              	.LVL40:
 232              	.L15:
3565:uC-LIB/lib_str.c ****             }
3566:uC-LIB/lib_str.c **** 
3567:uC-LIB/lib_str.c ****             if (nbr_lead_char > 0) {                            /* If lead chars to fmt, ...       
 233              		.loc 1 3567 0
 234 00dc 43B1     		cbz	r3, .L42
3568:uC-LIB/lib_str.c ****                 lead_char_0 = (lead_char == '0')                /* ... chk if lead char a '0' dig (
 235              		.loc 1 3568 0
 236 00de 302F     		cmp	r7, #48
 237 00e0 0AD1     		bne	.L43
3545:uC-LIB/lib_str.c ****         nbr_log     = nbr;
 238              		.loc 1 3545 0
 239 00e2 029D     		ldr	r5, [sp, #8]
 240              		.loc 1 3568 0
 241 00e4 0123     		movs	r3, #1
 242              	.LVL41:
 243 00e6 0393     		str	r3, [sp, #12]
 244 00e8 09E0     		b	.L11
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 68


 245              	.LVL42:
 246              	.L41:
3545:uC-LIB/lib_str.c ****         nbr_log     = nbr;
 247              		.loc 1 3545 0
 248 00ea 029D     		ldr	r5, [sp, #8]
3569:uC-LIB/lib_str.c ****                             ?  DEF_YES : DEF_NO;
3570:uC-LIB/lib_str.c ****             } else {
3571:uC-LIB/lib_str.c ****                 lead_char_0 =  DEF_NO;
3572:uC-LIB/lib_str.c ****             }
3573:uC-LIB/lib_str.c **** 
3574:uC-LIB/lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
3575:uC-LIB/lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
 249              		.loc 1 3575 0
 250 00ec 0126     		movs	r6, #1
 251              	.LVL43:
 252 00ee 06E0     		b	.L11
 253              	.LVL44:
 254              	.L42:
3545:uC-LIB/lib_str.c ****         nbr_log     = nbr;
 255              		.loc 1 3545 0
 256 00f0 029D     		ldr	r5, [sp, #8]
3571:uC-LIB/lib_str.c ****             }
 257              		.loc 1 3571 0
 258 00f2 0023     		movs	r3, #0
 259              	.LVL45:
 260 00f4 0393     		str	r3, [sp, #12]
 261 00f6 02E0     		b	.L11
 262              	.LVL46:
 263              	.L43:
3545:uC-LIB/lib_str.c ****         nbr_log     = nbr;
 264              		.loc 1 3545 0
 265 00f8 029D     		ldr	r5, [sp, #8]
3568:uC-LIB/lib_str.c ****                             ?  DEF_YES : DEF_NO;
 266              		.loc 1 3568 0
 267 00fa 0023     		movs	r3, #0
 268              	.LVL47:
 269 00fc 0393     		str	r3, [sp, #12]
 270              	.LVL48:
 271              	.L11:
3576:uC-LIB/lib_str.c ****         }
3577:uC-LIB/lib_str.c ****     }
3578:uC-LIB/lib_str.c **** 
3579:uC-LIB/lib_str.c ****     if (fmt_invalid != DEF_NO) {
 272              		.loc 1 3579 0
 273 00fe 0EB1     		cbz	r6, .L16
3580:uC-LIB/lib_str.c ****         nbr_dig_fmtd = nbr_dig;
 274              		.loc 1 3580 0
 275 0100 DDF80490 		ldr	r9, [sp, #4]
 276              	.LVL49:
 277              	.L16:
3581:uC-LIB/lib_str.c ****     }
3582:uC-LIB/lib_str.c **** 
3583:uC-LIB/lib_str.c **** 
3584:uC-LIB/lib_str.c **** /*$PAGE*/
3585:uC-LIB/lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
3586:uC-LIB/lib_str.c ****     pstr_fmt += nbr_dig_fmtd;                                   /* Start fmt @ least-sig dig.      
 278              		.loc 1 3586 0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 69


 279 0104 4846     		mov	r0, r9
 280 0106 119B     		ldr	r3, [sp, #68]
 281 0108 03EB0902 		add	r2, r3, r9
 282              	.LVL50:
3587:uC-LIB/lib_str.c **** 
3588:uC-LIB/lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
 283              		.loc 1 3588 0
 284 010c BBF1000F 		cmp	fp, #0
 285 0110 03D0     		beq	.L17
3589:uC-LIB/lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 286              		.loc 1 3589 0
 287 0112 0023     		movs	r3, #0
 288 0114 1199     		ldr	r1, [sp, #68]
 289 0116 01F80930 		strb	r3, [r1, r9]
 290              	.L17:
3590:uC-LIB/lib_str.c ****     }
3591:uC-LIB/lib_str.c ****     pstr_fmt--;
 291              		.loc 1 3591 0
 292 011a 013A     		subs	r2, r2, #1
 293              	.LVL51:
3592:uC-LIB/lib_str.c **** 
3593:uC-LIB/lib_str.c **** 
3594:uC-LIB/lib_str.c ****     for (i = 0u; i < nbr_dig_fmtd; i++) {                       /* Fmt str for desired nbr digs :  
 294              		.loc 1 3594 0
 295 011c 4FF0000E 		mov	lr, #0
 296 0120 7346     		mov	r3, lr
 297 0122 A446     		mov	ip, r4
 298 0124 039C     		ldr	r4, [sp, #12]
 299 0126 33E0     		b	.L18
 300              	.LVL52:
 301              	.L29:
3595:uC-LIB/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 302              		.loc 1 3595 0
 303 0128 76BB     		cbnz	r6, .L19
3596:uC-LIB/lib_str.c ****             if ((nbr_fmt > 0) ||                                /* If fmt nbr > 0                  
 304              		.loc 1 3596 0
 305 012a 05B9     		cbnz	r5, .L20
 306              		.loc 1 3596 0 is_stmt 0 discriminator 1
 307 012c BBB9     		cbnz	r3, .L21
 308              	.L20:
3597:uC-LIB/lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
3598:uC-LIB/lib_str.c ****                                                                 /* ... calc & fmt dig val;         
3599:uC-LIB/lib_str.c ****                 dig_val = (CPU_INT08U)(nbr_fmt % nbr_base);
 309              		.loc 1 3599 0 is_stmt 1
 310 012e B5FBFCF1 		udiv	r1, r5, ip
 311 0132 0CFB1151 		mls	r1, ip, r1, r5
 312 0136 C9B2     		uxtb	r1, r1
 313              	.LVL53:
3600:uC-LIB/lib_str.c ****                 if (dig_val < 10u) {
 314              		.loc 1 3600 0
 315 0138 0929     		cmp	r1, #9
 316 013a 03D8     		bhi	.L22
 317              	.LVL54:
3601:uC-LIB/lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 318              		.loc 1 3601 0
 319 013c 3031     		adds	r1, r1, #48
 320              	.LVL55:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 70


 321 013e 1170     		strb	r1, [r2]
 322 0140 013A     		subs	r2, r2, #1
 323              	.LVL56:
 324 0142 09E0     		b	.L23
 325              	.LVL57:
 326              	.L22:
3602:uC-LIB/lib_str.c ****                 } else {
3603:uC-LIB/lib_str.c ****                     if (lower_case !=  DEF_YES) {
 327              		.loc 1 3603 0
 328 0144 BAF1010F 		cmp	r10, #1
 329 0148 03D0     		beq	.L24
 330              	.LVL58:
3604:uC-LIB/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 331              		.loc 1 3604 0
 332 014a 3731     		adds	r1, r1, #55
 333              	.LVL59:
 334 014c 1170     		strb	r1, [r2]
 335 014e 013A     		subs	r2, r2, #1
 336              	.LVL60:
 337 0150 02E0     		b	.L23
 338              	.LVL61:
 339              	.L24:
3605:uC-LIB/lib_str.c ****                     } else {
3606:uC-LIB/lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'a');
 340              		.loc 1 3606 0
 341 0152 5731     		adds	r1, r1, #87
 342              	.LVL62:
 343 0154 1170     		strb	r1, [r2]
 344 0156 013A     		subs	r2, r2, #1
 345              	.LVL63:
 346              	.L23:
3607:uC-LIB/lib_str.c ****                     }
3608:uC-LIB/lib_str.c ****                 }
3609:uC-LIB/lib_str.c **** 
3610:uC-LIB/lib_str.c ****                 nbr_fmt /= nbr_base;                            /* Shift to next more-sig dig.     
 347              		.loc 1 3610 0
 348 0158 B5FBFCF5 		udiv	r5, r5, ip
 349              	.LVL64:
 350 015c 17E0     		b	.L25
 351              	.L21:
3611:uC-LIB/lib_str.c **** 
3612:uC-LIB/lib_str.c ****             } else if ((nbr_neg      == DEF_YES)  &&            /* ... else if nbr neg             
 352              		.loc 1 3612 0
 353 015e B8F1010F 		cmp	r8, #1
 354 0162 0DD1     		bne	.L26
 355              		.loc 1 3612 0 is_stmt 0 discriminator 1
 356 0164 14B9     		cbnz	r4, .L27
3613:uC-LIB/lib_str.c ****                      (((lead_char_0  == DEF_NO )  &&            /* ... lead char NOT a '0' dig     
 357              		.loc 1 3613 0 is_stmt 1
 358 0166 BEF1000F 		cmp	lr, #0
 359 016a 03D0     		beq	.L28
 360              	.L27:
3614:uC-LIB/lib_str.c ****                        (nbr_neg_fmtd == DEF_NO )) ||            /* ... but neg sign NOT yet fmt'd  
 361              		.loc 1 3614 0
 362 016c 44B1     		cbz	r4, .L26
3615:uC-LIB/lib_str.c ****                       ((lead_char_0  != DEF_NO )  &&            /* ... lead char is  a '0' dig     
3616:uC-LIB/lib_str.c ****                        (i == (nbr_dig_fmtd - 1u))))) {          /* ... & on most-sig dig to fmt,   
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 71


 363              		.loc 1 3616 0
 364 016e 411E     		subs	r1, r0, #1
3615:uC-LIB/lib_str.c ****                       ((lead_char_0  != DEF_NO )  &&            /* ... lead char is  a '0' dig     
 365              		.loc 1 3615 0
 366 0170 8B42     		cmp	r3, r1
 367 0172 05D1     		bne	.L26
 368              	.L28:
 369              	.LVL65:
3617:uC-LIB/lib_str.c **** 
3618:uC-LIB/lib_str.c ****                *pstr_fmt--   = '-';                             /* ... prepend neg sign (see Note #
 370              		.loc 1 3618 0
 371 0174 2D21     		movs	r1, #45
 372 0176 1170     		strb	r1, [r2]
 373              	.LVL66:
 374 0178 013A     		subs	r2, r2, #1
 375              	.LVL67:
3619:uC-LIB/lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 376              		.loc 1 3619 0
 377 017a 4FF0010E 		mov	lr, #1
 378 017e 06E0     		b	.L25
 379              	.LVL68:
 380              	.L26:
3620:uC-LIB/lib_str.c **** 
3621:uC-LIB/lib_str.c ****             } else if (lead_char != (CPU_CHAR)'\0') {           /* ... else if avail,              
 381              		.loc 1 3621 0
 382 0180 2FB1     		cbz	r7, .L25
 383              	.LVL69:
3622:uC-LIB/lib_str.c ****                *pstr_fmt-- = lead_char;                         /* ... fmt lead char.              
 384              		.loc 1 3622 0
 385 0182 1770     		strb	r7, [r2]
 386 0184 013A     		subs	r2, r2, #1
 387              	.LVL70:
 388 0186 02E0     		b	.L25
 389              	.L19:
 390              	.LVL71:
3623:uC-LIB/lib_str.c ****             }
3624:uC-LIB/lib_str.c **** 
3625:uC-LIB/lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
3626:uC-LIB/lib_str.c ****            *pstr_fmt-- = '?';
 391              		.loc 1 3626 0
 392 0188 3F21     		movs	r1, #63
 393 018a 1170     		strb	r1, [r2]
 394 018c 013A     		subs	r2, r2, #1
 395              	.LVL72:
 396              	.L25:
3594:uC-LIB/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 397              		.loc 1 3594 0 discriminator 2
 398 018e 0133     		adds	r3, r3, #1
 399              	.LVL73:
 400              	.L18:
3594:uC-LIB/lib_str.c ****         if (fmt_invalid == DEF_NO) {
 401              		.loc 1 3594 0 is_stmt 0 discriminator 1
 402 0190 8342     		cmp	r3, r0
 403 0192 C9D3     		bcc	.L29
3627:uC-LIB/lib_str.c ****         }
3628:uC-LIB/lib_str.c ****     }
3629:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 72


3630:uC-LIB/lib_str.c **** 
3631:uC-LIB/lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
 404              		.loc 1 3631 0 is_stmt 1
 405 0194 1EB1     		cbz	r6, .L45
3632:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 406              		.loc 1 3632 0
 407 0196 0020     		movs	r0, #0
 408 0198 02E0     		b	.L2
 409              	.LVL74:
 410              	.L30:
3503:uC-LIB/lib_str.c ****     }
 411              		.loc 1 3503 0
 412 019a 0020     		movs	r0, #0
 413              	.LVL75:
 414 019c 00E0     		b	.L2
 415              	.LVL76:
 416              	.L45:
3633:uC-LIB/lib_str.c ****     }
3634:uC-LIB/lib_str.c **** 
3635:uC-LIB/lib_str.c **** 
3636:uC-LIB/lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
 417              		.loc 1 3636 0
 418 019e 1198     		ldr	r0, [sp, #68]
 419              	.LVL77:
 420              	.L2:
3637:uC-LIB/lib_str.c **** }
 421              		.loc 1 3637 0
 422 01a0 05B0     		add	sp, sp, #20
 423              		.cfi_def_cfa_offset 36
 424              		@ sp needed
 425 01a2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 426              		.cfi_endproc
 427              	.LFE23:
 428              		.size	Str_FmtNbr_Int32, .-Str_FmtNbr_Int32
 429 01a6 00BF     		.section	.text.Str_ParseNbr_Int32,"ax",%progbits
 430              		.align	2
 431              		.thumb
 432              		.thumb_func
 433              		.type	Str_ParseNbr_Int32, %function
 434              	Str_ParseNbr_Int32:
 435              	.LFB24:
3638:uC-LIB/lib_str.c **** 
3639:uC-LIB/lib_str.c **** 
3640:uC-LIB/lib_str.c **** /*$PAGE*/
3641:uC-LIB/lib_str.c **** /*
3642:uC-LIB/lib_str.c **** ***************************************************************************************************
3643:uC-LIB/lib_str.c **** *                                        Str_ParseNbr_Int32()
3644:uC-LIB/lib_str.c **** *
3645:uC-LIB/lib_str.c **** * Description : Parse 32-bit integer from string.
3646:uC-LIB/lib_str.c **** *
3647:uC-LIB/lib_str.c **** * Argument(s) : pstr            Pointer to string (see Notes #1 & #2a).
3648:uC-LIB/lib_str.c **** *
3649:uC-LIB/lib_str.c **** *               pstr_next       Optional pointer to a variable to ... :
3650:uC-LIB/lib_str.c **** *
3651:uC-LIB/lib_str.c **** *                                   (a) Return a pointer to first character following the integer s
3652:uC-LIB/lib_str.c **** *                                           if NO error(s) [see Note #2a2B2];
3653:uC-LIB/lib_str.c **** *                                   (b) Return a pointer to 'pstr',
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 73


3654:uC-LIB/lib_str.c **** *                                           otherwise      (see Note #2a2A2).
3655:uC-LIB/lib_str.c **** *
3656:uC-LIB/lib_str.c **** *               nbr_base        Base of number to parse (see Notes #2a1B1 & #2a2B1).
3657:uC-LIB/lib_str.c **** *
3658:uC-LIB/lib_str.c **** *               nbr_signed      Indicates whether number to parse is signed :
3659:uC-LIB/lib_str.c **** *
3660:uC-LIB/lib_str.c **** *                                   DEF_NO                  Number is unsigned.
3661:uC-LIB/lib_str.c **** *                                   DEF_YES                 Number is   signed.
3662:uC-LIB/lib_str.c **** *
3663:uC-LIB/lib_str.c **** *               pnbr_neg        Pointer to a variable to return if the parsed (signed) number is ne
3664:uC-LIB/lib_str.c **** *
3665:uC-LIB/lib_str.c **** *                                   DEF_NO                  Number is non-negative.
3666:uC-LIB/lib_str.c **** *                                   DEF_YES                 Number is     negative.
3667:uC-LIB/lib_str.c **** *
3668:uC-LIB/lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
3669:uC-LIB/lib_str.c **** *
3670:uC-LIB/lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
3671:uC-LIB/lib_str.c **** *
3672:uC-LIB/lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
3673:uC-LIB/lib_str.c **** *
3674:uC-LIB/lib_str.c **** * Caller(s)   : Str_ParseNbr_Int32U(),
3675:uC-LIB/lib_str.c **** *               Str_ParseNbr_Int32S().
3676:uC-LIB/lib_str.c **** *
3677:uC-LIB/lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
3678:uC-LIB/lib_str.c **** *
3679:uC-LIB/lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3680:uC-LIB/lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3681:uC-LIB/lib_str.c **** *                       to a type long ... representation" :
3682:uC-LIB/lib_str.c **** *
3683:uC-LIB/lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3684:uC-LIB/lib_str.c **** *
3685:uC-LIB/lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
3686:uC-LIB/lib_str.c **** *                                by isspace()]."
3687:uC-LIB/lib_str.c **** *
3688:uC-LIB/lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3689:uC-LIB/lib_str.c **** *                                    input string, starting with the first non-white-space characte
3690:uC-LIB/lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3691:uC-LIB/lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3692:uC-LIB/lib_str.c **** *
3693:uC-LIB/lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3694:uC-LIB/lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3695:uC-LIB/lib_str.c **** *
3696:uC-LIB/lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3697:uC-LIB/lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3698:uC-LIB/lib_str.c **** *                                        hexadecimal constant" :
3699:uC-LIB/lib_str.c **** *
3700:uC-LIB/lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3701:uC-LIB/lib_str.c **** *                                            sequence of decimal digits."
3702:uC-LIB/lib_str.c **** *
3703:uC-LIB/lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3704:uC-LIB/lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3705:uC-LIB/lib_str.c **** *
3706:uC-LIB/lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3707:uC-LIB/lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3708:uC-LIB/lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3709:uC-LIB/lib_str.c **** *
3710:uC-LIB/lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 74


3711:uC-LIB/lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3712:uC-LIB/lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3713:uC-LIB/lib_str.c **** *
3714:uC-LIB/lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3715:uC-LIB/lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3716:uC-LIB/lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3717:uC-LIB/lib_str.c **** *                                                are permitted."
3718:uC-LIB/lib_str.c **** *
3719:uC-LIB/lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3720:uC-LIB/lib_str.c **** *                                               '0X' may optionally precede the sequence of letters
3721:uC-LIB/lib_str.c **** *
3722:uC-LIB/lib_str.c **** *                                           (B) Although NO specification states that "if the value
3723:uC-LIB/lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3724:uC-LIB/lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3725:uC-LIB/lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3726:uC-LIB/lib_str.c **** *$PAGE*
3727:uC-LIB/lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3728:uC-LIB/lib_str.c **** *
3729:uC-LIB/lib_str.c **** *                                   (a) It does NOT seem reasonable to parse & convert a negative n
3730:uC-LIB/lib_str.c **** *                                       integer string into an unsigned integer.  However, a negati
3731:uC-LIB/lib_str.c **** *                                       for an unsigned integer will automatically be parsed as an 
3732:uC-LIB/lib_str.c **** *                                       character (see Note #2aC1).
3733:uC-LIB/lib_str.c **** *
3734:uC-LIB/lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3735:uC-LIB/lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3736:uC-LIB/lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
3737:uC-LIB/lib_str.c **** *
3738:uC-LIB/lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3739:uC-LIB/lib_str.c **** *
3740:uC-LIB/lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3741:uC-LIB/lib_str.c **** *
3742:uC-LIB/lib_str.c **** *                               (1) "no conversion is performed"; ...
3743:uC-LIB/lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3744:uC-LIB/lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
3745:uC-LIB/lib_str.c **** *
3746:uC-LIB/lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3747:uC-LIB/lib_str.c **** *
3748:uC-LIB/lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3749:uC-LIB/lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3750:uC-LIB/lib_str.c **** *
3751:uC-LIB/lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3752:uC-LIB/lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3753:uC-LIB/lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3754:uC-LIB/lib_str.c **** *
3755:uC-LIB/lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3756:uC-LIB/lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3757:uC-LIB/lib_str.c **** *                                   pointer."
3758:uC-LIB/lib_str.c **** *
3759:uC-LIB/lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3760:uC-LIB/lib_str.c **** *
3761:uC-LIB/lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3762:uC-LIB/lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3763:uC-LIB/lib_str.c **** *                                    [or] {LONG_MAX} ... shall be returned."
3764:uC-LIB/lib_str.c **** *
3765:uC-LIB/lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3766:uC-LIB/lib_str.c **** *
3767:uC-LIB/lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 75


3768:uC-LIB/lib_str.c **** *                           shall fail if" :
3769:uC-LIB/lib_str.c **** *
3770:uC-LIB/lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3771:uC-LIB/lib_str.c **** *
3772:uC-LIB/lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3773:uC-LIB/lib_str.c **** *
3774:uC-LIB/lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3775:uC-LIB/lib_str.c **** *                           may fail if" :
3776:uC-LIB/lib_str.c **** *
3777:uC-LIB/lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3778:uC-LIB/lib_str.c **** *$PAGE*
3779:uC-LIB/lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3780:uC-LIB/lib_str.c **** *
3781:uC-LIB/lib_str.c **** *                   (a) Valid parse string integer :
3782:uC-LIB/lib_str.c **** *
3783:uC-LIB/lib_str.c **** *                           pstr      = "     ABCDE xyz"
3784:uC-LIB/lib_str.c **** *                           nbr_base  = 16
3785:uC-LIB/lib_str.c **** *
3786:uC-LIB/lib_str.c **** *                           nbr       = 703710
3787:uC-LIB/lib_str.c **** *                           pstr_next = " xyz"
3788:uC-LIB/lib_str.c **** *
3789:uC-LIB/lib_str.c **** *
3790:uC-LIB/lib_str.c **** *                   (b) Invalid parse string integer :
3791:uC-LIB/lib_str.c **** *
3792:uC-LIB/lib_str.c **** *                           pstr      = "     ABCDE"
3793:uC-LIB/lib_str.c **** *                           nbr_base  = 10
3794:uC-LIB/lib_str.c **** *
3795:uC-LIB/lib_str.c **** *                           nbr       =  0
3796:uC-LIB/lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3797:uC-LIB/lib_str.c **** *
3798:uC-LIB/lib_str.c **** *
3799:uC-LIB/lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3800:uC-LIB/lib_str.c **** *
3801:uC-LIB/lib_str.c **** *                           pstr      = "     0xGABCDE"
3802:uC-LIB/lib_str.c **** *                           nbr_base  = 16
3803:uC-LIB/lib_str.c **** *
3804:uC-LIB/lib_str.c **** *                           nbr       =  0
3805:uC-LIB/lib_str.c **** *                           pstr_next = "xGABCDE"
3806:uC-LIB/lib_str.c **** *
3807:uC-LIB/lib_str.c **** *
3808:uC-LIB/lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3809:uC-LIB/lib_str.c **** *                               following invalid hexadecimal characters) :
3810:uC-LIB/lib_str.c **** *
3811:uC-LIB/lib_str.c **** *                           pstr      = "     0xGABCDE"
3812:uC-LIB/lib_str.c **** *                           nbr_base  =  0
3813:uC-LIB/lib_str.c **** *
3814:uC-LIB/lib_str.c **** *                           nbr       =  0
3815:uC-LIB/lib_str.c **** *                           pstr_next = "xGABCDE"
3816:uC-LIB/lib_str.c **** *
3817:uC-LIB/lib_str.c **** *
3818:uC-LIB/lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3819:uC-LIB/lib_str.c **** *                               following invalid octal       characters) :
3820:uC-LIB/lib_str.c **** *
3821:uC-LIB/lib_str.c **** *                           pstr      = "     0GABCDE"
3822:uC-LIB/lib_str.c **** *                           nbr_base  =  0
3823:uC-LIB/lib_str.c **** *
3824:uC-LIB/lib_str.c **** *                           nbr       =  0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 76


3825:uC-LIB/lib_str.c **** *                           pstr_next = "GABCDE"
3826:uC-LIB/lib_str.c **** *
3827:uC-LIB/lib_str.c **** *
3828:uC-LIB/lib_str.c **** *                   (f) Parse string integer overflow :
3829:uC-LIB/lib_str.c **** *
3830:uC-LIB/lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3831:uC-LIB/lib_str.c **** *                           nbr_base  = 10
3832:uC-LIB/lib_str.c **** *
3833:uC-LIB/lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
3834:uC-LIB/lib_str.c **** *                           pstr_next = "*123456"
3835:uC-LIB/lib_str.c **** *
3836:uC-LIB/lib_str.c **** *
3837:uC-LIB/lib_str.c **** *                   (g) Parse string integer underflow :
3838:uC-LIB/lib_str.c **** *
3839:uC-LIB/lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3840:uC-LIB/lib_str.c **** *                           nbr_base  = 10
3841:uC-LIB/lib_str.c **** *
3842:uC-LIB/lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3843:uC-LIB/lib_str.c **** *                           pstr_next = "*123456"
3844:uC-LIB/lib_str.c **** *
3845:uC-LIB/lib_str.c **** *
3846:uC-LIB/lib_str.c **** *               (4) String parse terminates when :
3847:uC-LIB/lib_str.c **** *
3848:uC-LIB/lib_str.c **** *                   (a) Base passed an invalid base (see Note #2a1B1b).
3849:uC-LIB/lib_str.c **** *                       (1) No conversion performed; 0 returned.
3850:uC-LIB/lib_str.c **** *
3851:uC-LIB/lib_str.c **** *                   (b) (1) Parse string passed a NULL pointer OR empty integer sequence (see Note 
3852:uC-LIB/lib_str.c **** *                           (A) No conversion performed; 0 returned.
3853:uC-LIB/lib_str.c **** *
3854:uC-LIB/lib_str.c **** *                       (2) Invalid parse string character found (see Note #2a1C).
3855:uC-LIB/lib_str.c **** *                           (A) Parsed integer returned.
3856:uC-LIB/lib_str.c **** *                           (B) 'pstr_next' points to invalid character.
3857:uC-LIB/lib_str.c **** *
3858:uC-LIB/lib_str.c **** *                       (3) Entire  parse string converted (see Note #2a2B).
3859:uC-LIB/lib_str.c **** *                           (A) Parsed integer returned.
3860:uC-LIB/lib_str.c **** *                           (B) 'pstr_next' points to terminating NULL character.
3861:uC-LIB/lib_str.c **** *
3862:uC-LIB/lib_str.c **** *               (5) Pointers to variables that return values MUST be initialized PRIOR to all other
3863:uC-LIB/lib_str.c **** *                   validation or function handling in case of any error(s).
3864:uC-LIB/lib_str.c **** ***************************************************************************************************
3865:uC-LIB/lib_str.c **** */
3866:uC-LIB/lib_str.c **** /*$PAGE*/
3867:uC-LIB/lib_str.c **** static  CPU_INT32U  Str_ParseNbr_Int32 (const  CPU_CHAR      *pstr,
3868:uC-LIB/lib_str.c ****                                                CPU_CHAR     **pstr_next,
3869:uC-LIB/lib_str.c ****                                                CPU_INT08U     nbr_base,
3870:uC-LIB/lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
3871:uC-LIB/lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg)
3872:uC-LIB/lib_str.c **** {
 436              		.loc 1 3872 0
 437              		.cfi_startproc
 438              		@ args = 4, pretend = 0, frame = 16
 439              		@ frame_needed = 0, uses_anonymous_args = 0
 440              	.LVL78:
 441 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 442              		.cfi_def_cfa_offset 36
 443              		.cfi_offset 4, -36
 444              		.cfi_offset 5, -32
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 77


 445              		.cfi_offset 6, -28
 446              		.cfi_offset 7, -24
 447              		.cfi_offset 8, -20
 448              		.cfi_offset 9, -16
 449              		.cfi_offset 10, -12
 450              		.cfi_offset 11, -8
 451              		.cfi_offset 14, -4
 452 0004 85B0     		sub	sp, sp, #20
 453              		.cfi_def_cfa_offset 56
 454 0006 8246     		mov	r10, r0
 455 0008 9046     		mov	r8, r2
 456 000a 1C46     		mov	r4, r3
3873:uC-LIB/lib_str.c ****     const  CPU_CHAR     *pstr_parse;
3874:uC-LIB/lib_str.c ****     const  CPU_CHAR     *pstr_parse_nbr;
3875:uC-LIB/lib_str.c ****            CPU_CHAR     *pstr_parse_unused;
3876:uC-LIB/lib_str.c ****            CPU_CHAR      parse_char;
3877:uC-LIB/lib_str.c ****            CPU_INT08U    parse_dig;
3878:uC-LIB/lib_str.c ****            CPU_INT32U    nbr;
3879:uC-LIB/lib_str.c ****            CPU_BOOLEAN   nbr_neg_unused;
3880:uC-LIB/lib_str.c ****            CPU_BOOLEAN   nbr_dig;
3881:uC-LIB/lib_str.c ****            CPU_BOOLEAN   nbr_alpha;
3882:uC-LIB/lib_str.c ****            CPU_BOOLEAN   nbr_hex;
3883:uC-LIB/lib_str.c ****            CPU_BOOLEAN   nbr_hex_lower;
3884:uC-LIB/lib_str.c ****            CPU_BOOLEAN   whitespace;
3885:uC-LIB/lib_str.c ****            CPU_BOOLEAN   neg;
3886:uC-LIB/lib_str.c ****            CPU_BOOLEAN   ovf;
3887:uC-LIB/lib_str.c ****            CPU_BOOLEAN   done;
3888:uC-LIB/lib_str.c **** 
3889:uC-LIB/lib_str.c ****                                                                 /* --------------- VALIDATE PARSE A
3890:uC-LIB/lib_str.c ****     if (pstr_next == (CPU_CHAR **) 0) {                         /* If NOT avail, ...               
 457              		.loc 1 3890 0
 458 000c 8B46     		mov	fp, r1
 459 000e 09B9     		cbnz	r1, .L48
3891:uC-LIB/lib_str.c ****         pstr_next  = (CPU_CHAR **)&pstr_parse_unused;           /* ... re-cfg NULL rtn ptr to unuse
 460              		.loc 1 3891 0
 461 0010 0DF10C0B 		add	fp, sp, #12
 462              	.L48:
 463              	.LVL79:
3892:uC-LIB/lib_str.c ****        (void)&pstr_parse_unused;                                /* Prevent possible 'variable unuse
3893:uC-LIB/lib_str.c ****     }
3894:uC-LIB/lib_str.c ****    *pstr_next = (CPU_CHAR *)pstr;                               /* Init rtn str for err (see Note #
 464              		.loc 1 3894 0
 465 0014 CBF800A0 		str	r10, [fp]
3895:uC-LIB/lib_str.c **** 
3896:uC-LIB/lib_str.c ****     if (pnbr_neg == (CPU_BOOLEAN *) 0) {                        /* If NOT avail, ...               
 466              		.loc 1 3896 0
 467 0018 0E9B     		ldr	r3, [sp, #56]
 468              	.LVL80:
 469 001a 13B9     		cbnz	r3, .L49
3897:uC-LIB/lib_str.c ****         pnbr_neg  = (CPU_BOOLEAN *)&nbr_neg_unused;             /* ... re-cfg NULL rtn ptr to unuse
 470              		.loc 1 3897 0
 471 001c 0DF10B03 		add	r3, sp, #11
 472 0020 0E93     		str	r3, [sp, #56]
 473              	.LVL81:
 474              	.L49:
3898:uC-LIB/lib_str.c ****        (void)&nbr_neg_unused;                                   /* Prevent possible 'variable unuse
3899:uC-LIB/lib_str.c ****     }
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 78


3900:uC-LIB/lib_str.c ****    *pnbr_neg = DEF_NO;                                          /* Init nbr neg for err (see Note #
 475              		.loc 1 3900 0
 476 0022 0023     		movs	r3, #0
 477 0024 0E9A     		ldr	r2, [sp, #56]
 478              	.LVL82:
 479 0026 1370     		strb	r3, [r2]
3901:uC-LIB/lib_str.c **** 
3902:uC-LIB/lib_str.c **** 
3903:uC-LIB/lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn zero if str ptr NULL (see No
 480              		.loc 1 3903 0
 481 0028 BAF1000F 		cmp	r10, #0
 482 002c 00F0B080 		beq	.L75
3904:uC-LIB/lib_str.c ****         return (0u);
3905:uC-LIB/lib_str.c ****     }
3906:uC-LIB/lib_str.c ****                                                                 /* Rtn zero if invalid base (see No
3907:uC-LIB/lib_str.c ****     if ((nbr_base == 1u) ||
 483              		.loc 1 3907 0
 484 0030 B8F1010F 		cmp	r8, #1
 485 0034 00F0AE80 		beq	.L76
 486              		.loc 1 3907 0 is_stmt 0 discriminator 1
 487 0038 B8F1240F 		cmp	r8, #36
 488 003c 00F2AC80 		bhi	.L77
 489              	.LVL83:
3908:uC-LIB/lib_str.c ****         (nbr_base > 36u)) {
3909:uC-LIB/lib_str.c ****         return (0u);
3910:uC-LIB/lib_str.c ****     }
3911:uC-LIB/lib_str.c **** 
3912:uC-LIB/lib_str.c **** 
3913:uC-LIB/lib_str.c ****                                                                 /* ------------- IGNORE PRECEDING C
3914:uC-LIB/lib_str.c ****     pstr_parse = pstr;                                          /* Save ptr to init'l str for err (
3915:uC-LIB/lib_str.c **** 
3916:uC-LIB/lib_str.c ****     whitespace = ASCII_IsSpace(*pstr_parse);
 490              		.loc 1 3916 0 is_stmt 1
 491 0040 9AF80000 		ldrb	r0, [r10]	@ zero_extendqisi2
 492              	.LVL84:
 493 0044 FFF7FEFF 		bl	ASCII_IsSpace
 494              	.LVL85:
3914:uC-LIB/lib_str.c **** 
 495              		.loc 1 3914 0
 496 0048 5746     		mov	r7, r10
3917:uC-LIB/lib_str.c ****     while (whitespace == DEF_YES) {                             /* Ignore initial white-space char(
 497              		.loc 1 3917 0
 498 004a 03E0     		b	.L51
 499              	.LVL86:
 500              	.L52:
3918:uC-LIB/lib_str.c ****         pstr_parse++;
3919:uC-LIB/lib_str.c ****         whitespace = ASCII_IsSpace(*pstr_parse);
 501              		.loc 1 3919 0
 502 004c 17F8010F 		ldrb	r0, [r7, #1]!	@ zero_extendqisi2
 503              	.LVL87:
 504 0050 FFF7FEFF 		bl	ASCII_IsSpace
 505              	.LVL88:
 506              	.L51:
3917:uC-LIB/lib_str.c ****     while (whitespace == DEF_YES) {                             /* Ignore initial white-space char(
 507              		.loc 1 3917 0
 508 0054 0128     		cmp	r0, #1
 509 0056 F9D0     		beq	.L52
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 79


3920:uC-LIB/lib_str.c ****     }
3921:uC-LIB/lib_str.c **** 
3922:uC-LIB/lib_str.c ****     switch (*pstr_parse) {
 510              		.loc 1 3922 0
 511 0058 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 512 005a 2B2B     		cmp	r3, #43
 513 005c 02D0     		beq	.L54
 514 005e 2D2B     		cmp	r3, #45
 515 0060 04D0     		beq	.L55
 516 0062 09E0     		b	.L91
 517              	.L54:
3923:uC-LIB/lib_str.c ****         case '+':                                               /* Ignore   pos sign (see Note #2a1
3924:uC-LIB/lib_str.c ****              pstr_parse++;
 518              		.loc 1 3924 0
 519 0064 0137     		adds	r7, r7, #1
 520              	.LVL89:
3925:uC-LIB/lib_str.c ****              neg = DEF_NO;
 521              		.loc 1 3925 0
 522 0066 0023     		movs	r3, #0
 523 0068 0193     		str	r3, [sp, #4]
3926:uC-LIB/lib_str.c ****              break;
 524              		.loc 1 3926 0
 525 006a 0AE0     		b	.L53
 526              	.LVL90:
 527              	.L55:
3927:uC-LIB/lib_str.c **** 
3928:uC-LIB/lib_str.c **** 
3929:uC-LIB/lib_str.c ****         case '-':                                               /* Validate neg sign (see Note #2a1
3930:uC-LIB/lib_str.c ****              if (nbr_signed == DEF_YES) {
 528              		.loc 1 3930 0
 529 006c 012C     		cmp	r4, #1
 530 006e 06D1     		bne	.L79
3931:uC-LIB/lib_str.c ****                  pstr_parse++;
 531              		.loc 1 3931 0
 532 0070 0137     		adds	r7, r7, #1
 533              	.LVL91:
3932:uC-LIB/lib_str.c ****              }
3933:uC-LIB/lib_str.c ****              neg = DEF_YES;
 534              		.loc 1 3933 0
 535 0072 0123     		movs	r3, #1
 536 0074 0193     		str	r3, [sp, #4]
 537 0076 04E0     		b	.L53
 538              	.L91:
3934:uC-LIB/lib_str.c ****              break;
3935:uC-LIB/lib_str.c **** 
3936:uC-LIB/lib_str.c **** 
3937:uC-LIB/lib_str.c ****         default:
3938:uC-LIB/lib_str.c ****              neg = DEF_NO;
 539              		.loc 1 3938 0
 540 0078 0023     		movs	r3, #0
 541 007a 0193     		str	r3, [sp, #4]
 542 007c 01E0     		b	.L53
 543              	.L79:
3933:uC-LIB/lib_str.c ****              break;
 544              		.loc 1 3933 0
 545 007e 0123     		movs	r3, #1
 546 0080 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 80


 547              	.L53:
 548              	.LVL92:
3939:uC-LIB/lib_str.c ****              break;
3940:uC-LIB/lib_str.c ****     }
3941:uC-LIB/lib_str.c **** 
3942:uC-LIB/lib_str.c **** 
3943:uC-LIB/lib_str.c **** /*$PAGE*/
3944:uC-LIB/lib_str.c ****                                                                 /* --------- IGNORE NBR BASE PRECED
3945:uC-LIB/lib_str.c ****     pstr_parse_nbr = pstr_parse;                                /* Save ptr to str's nbr (see Note 
3946:uC-LIB/lib_str.c **** 
3947:uC-LIB/lib_str.c ****     switch (nbr_base) {
 549              		.loc 1 3947 0
 550 0082 B8F1080F 		cmp	r8, #8
 551 0086 17D0     		beq	.L57
 552 0088 B8F1100F 		cmp	r8, #16
 553 008c 19D0     		beq	.L58
 554 008e B8F1000F 		cmp	r8, #0
 555 0092 26D1     		bne	.L92
3948:uC-LIB/lib_str.c ****         case  0u:                                               /* Determine unspecified nbr base (
3949:uC-LIB/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
 556              		.loc 1 3949 0
 557 0094 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 558 0096 302B     		cmp	r3, #48
 559 0098 25D1     		bne	.L81
3950:uC-LIB/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 560              		.loc 1 3950 0
 561 009a 7E1C     		adds	r6, r7, #1
 562              	.LVL93:
3951:uC-LIB/lib_str.c ****                   switch (*pstr_parse) {
 563              		.loc 1 3951 0
 564 009c 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 565 009e 582B     		cmp	r3, #88
 566 00a0 01D0     		beq	.L60
 567 00a2 782B     		cmp	r3, #120
 568 00a4 23D1     		bne	.L93
 569              	.L60:
 570              	.LVL94:
3952:uC-LIB/lib_str.c ****                       case 'x':                                 /* For '0x' prefix, ...            
3953:uC-LIB/lib_str.c ****                       case 'X':
3954:uC-LIB/lib_str.c ****                            nbr_base   = 16u;                    /* ... set nbr base = 16    (see No
3955:uC-LIB/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
3956:uC-LIB/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
 571              		.loc 1 3956 0
 572 00a6 B878     		ldrb	r0, [r7, #2]	@ zero_extendqisi2
 573              	.LVL95:
 574 00a8 FFF7FEFF 		bl	ASCII_IsDigHex
 575              	.LVL96:
3957:uC-LIB/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
 576              		.loc 1 3957 0
 577 00ac 0128     		cmp	r0, #1
 578 00ae 21D1     		bne	.L83
3958:uC-LIB/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
 579              		.loc 1 3958 0
 580 00b0 BE1C     		adds	r6, r7, #2
 581              	.LVL97:
3954:uC-LIB/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
 582              		.loc 1 3954 0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 81


 583 00b2 4FF01008 		mov	r8, #16
 584 00b6 23E0     		b	.L56
 585              	.LVL98:
 586              	.L57:
3959:uC-LIB/lib_str.c ****                            }
3960:uC-LIB/lib_str.c ****                            break;
3961:uC-LIB/lib_str.c **** 
3962:uC-LIB/lib_str.c **** 
3963:uC-LIB/lib_str.c ****                       default:                                  /* For '0'  prefix, ...            
3964:uC-LIB/lib_str.c ****                            nbr_base =  8u;                      /* ... set nbr base =  8    (see No
3965:uC-LIB/lib_str.c ****                            break;
3966:uC-LIB/lib_str.c ****                   }
3967:uC-LIB/lib_str.c **** 
3968:uC-LIB/lib_str.c ****              } else {                                           /* For non-'0' prefix, ...         
3969:uC-LIB/lib_str.c ****                  nbr_base = 10u;                                /* ... set nbr base = 10    (see No
3970:uC-LIB/lib_str.c ****              }
3971:uC-LIB/lib_str.c ****              break;
3972:uC-LIB/lib_str.c **** 
3973:uC-LIB/lib_str.c **** 
3974:uC-LIB/lib_str.c ****         case  8u:                                               /* See Note #2a1B1a2.              
3975:uC-LIB/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
 587              		.loc 1 3975 0
 588 00b8 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 589 00ba 302B     		cmp	r3, #48
 590 00bc 1DD1     		bne	.L84
3976:uC-LIB/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 591              		.loc 1 3976 0
 592 00be 7E1C     		adds	r6, r7, #1
 593              	.LVL99:
 594 00c0 1EE0     		b	.L56
 595              	.LVL100:
 596              	.L58:
3977:uC-LIB/lib_str.c ****              }
3978:uC-LIB/lib_str.c ****              break;
3979:uC-LIB/lib_str.c **** 
3980:uC-LIB/lib_str.c **** 
3981:uC-LIB/lib_str.c ****         case 16u:                                               /* See Note #2a1B1a3.              
3982:uC-LIB/lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
 597              		.loc 1 3982 0
 598 00c2 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 599 00c4 302B     		cmp	r3, #48
 600 00c6 1AD1     		bne	.L85
3983:uC-LIB/lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 601              		.loc 1 3983 0
 602 00c8 7E1C     		adds	r6, r7, #1
 603              	.LVL101:
3984:uC-LIB/lib_str.c ****                   switch (*pstr_parse) {
 604              		.loc 1 3984 0
 605 00ca 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 606 00cc 582B     		cmp	r3, #88
 607 00ce 01D0     		beq	.L61
 608 00d0 782B     		cmp	r3, #120
 609 00d2 15D1     		bne	.L56
 610              	.L61:
 611              	.LVL102:
3985:uC-LIB/lib_str.c ****                       case 'x':
3986:uC-LIB/lib_str.c ****                       case 'X':
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 82


3987:uC-LIB/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
3988:uC-LIB/lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
 612              		.loc 1 3988 0
 613 00d4 B878     		ldrb	r0, [r7, #2]	@ zero_extendqisi2
 614              	.LVL103:
 615 00d6 FFF7FEFF 		bl	ASCII_IsDigHex
 616              	.LVL104:
3989:uC-LIB/lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
 617              		.loc 1 3989 0
 618 00da 0128     		cmp	r0, #1
 619 00dc 10D1     		bne	.L56
3990:uC-LIB/lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
 620              		.loc 1 3990 0
 621 00de BE1C     		adds	r6, r7, #2
 622              	.LVL105:
 623 00e0 0EE0     		b	.L56
 624              	.LVL106:
 625              	.L92:
3947:uC-LIB/lib_str.c ****         case  0u:                                               /* Determine unspecified nbr base (
 626              		.loc 1 3947 0
 627 00e2 3E46     		mov	r6, r7
 628 00e4 0CE0     		b	.L56
 629              	.L81:
 630 00e6 3E46     		mov	r6, r7
3969:uC-LIB/lib_str.c ****              }
 631              		.loc 1 3969 0
 632 00e8 4FF00A08 		mov	r8, #10
 633 00ec 08E0     		b	.L56
 634              	.LVL107:
 635              	.L93:
3964:uC-LIB/lib_str.c ****                            break;
 636              		.loc 1 3964 0
 637 00ee 4FF00808 		mov	r8, #8
 638 00f2 05E0     		b	.L56
 639              	.LVL108:
 640              	.L83:
3954:uC-LIB/lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
 641              		.loc 1 3954 0
 642 00f4 4FF01008 		mov	r8, #16
 643 00f8 02E0     		b	.L56
 644              	.LVL109:
 645              	.L84:
 646 00fa 3E46     		mov	r6, r7
 647 00fc 00E0     		b	.L56
 648              	.L85:
 649 00fe 3E46     		mov	r6, r7
 650              	.LVL110:
 651              	.L56:
3991:uC-LIB/lib_str.c ****                            }
3992:uC-LIB/lib_str.c ****                            break;
3993:uC-LIB/lib_str.c **** 
3994:uC-LIB/lib_str.c **** 
3995:uC-LIB/lib_str.c ****                       default:
3996:uC-LIB/lib_str.c ****                            break;
3997:uC-LIB/lib_str.c ****                   }
3998:uC-LIB/lib_str.c ****              }
3999:uC-LIB/lib_str.c ****              break;
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 83


4000:uC-LIB/lib_str.c **** 
4001:uC-LIB/lib_str.c **** 
4002:uC-LIB/lib_str.c ****         default:                                                /* See Note #2a1B1b.               
4003:uC-LIB/lib_str.c ****              break;
4004:uC-LIB/lib_str.c ****     }
4005:uC-LIB/lib_str.c **** 
4006:uC-LIB/lib_str.c **** 
4007:uC-LIB/lib_str.c **** /*$PAGE*/
4008:uC-LIB/lib_str.c ****                                                                 /* ------------------ PARSE INT STR
4009:uC-LIB/lib_str.c ****     nbr  = 0u;
4010:uC-LIB/lib_str.c ****     ovf  = DEF_NO;
4011:uC-LIB/lib_str.c ****     done = DEF_NO;
 652              		.loc 1 4011 0
 653 0100 0025     		movs	r5, #0
4010:uC-LIB/lib_str.c ****     done = DEF_NO;
 654              		.loc 1 4010 0
 655 0102 0095     		str	r5, [sp]
4009:uC-LIB/lib_str.c ****     ovf  = DEF_NO;
 656              		.loc 1 4009 0
 657 0104 A946     		mov	r9, r5
4012:uC-LIB/lib_str.c **** 
4013:uC-LIB/lib_str.c ****     while (done == DEF_NO) {                                    /* Parse str for desired nbr base d
 658              		.loc 1 4013 0
 659 0106 2FE0     		b	.L63
 660              	.LVL111:
 661              	.L69:
4014:uC-LIB/lib_str.c ****         parse_char = (CPU_CHAR)*pstr_parse;
 662              		.loc 1 4014 0
 663 0108 3478     		ldrb	r4, [r6]	@ zero_extendqisi2
 664              	.LVL112:
4015:uC-LIB/lib_str.c ****         nbr_alpha  =  ASCII_IsAlphaNum(parse_char);
 665              		.loc 1 4015 0
 666 010a 2046     		mov	r0, r4
 667 010c FFF7FEFF 		bl	ASCII_IsAlphaNum
 668              	.LVL113:
4016:uC-LIB/lib_str.c ****         if (nbr_alpha == DEF_YES) {                             /* If valid alpha num nbr dig avail
 669              		.loc 1 4016 0
 670 0110 0128     		cmp	r0, #1
 671 0112 28D1     		bne	.L86
4017:uC-LIB/lib_str.c ****                                                                 /* ... convert parse char into nbr 
4018:uC-LIB/lib_str.c ****             nbr_dig = ASCII_IsDig(parse_char);
 672              		.loc 1 4018 0
 673 0114 2046     		mov	r0, r4
 674              	.LVL114:
 675 0116 FFF7FEFF 		bl	ASCII_IsDig
 676              	.LVL115:
4019:uC-LIB/lib_str.c ****             if (nbr_dig == DEF_YES) {
 677              		.loc 1 4019 0
 678 011a 0128     		cmp	r0, #1
 679 011c 02D1     		bne	.L64
4020:uC-LIB/lib_str.c ****                 parse_dig = (CPU_INT08U)(parse_char - '0');
 680              		.loc 1 4020 0
 681 011e 303C     		subs	r4, r4, #48
 682              	.LVL116:
 683 0120 E4B2     		uxtb	r4, r4
 684              	.LVL117:
 685 0122 09E0     		b	.L65
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 84


 686              	.LVL118:
 687              	.L64:
4021:uC-LIB/lib_str.c ****             } else {
4022:uC-LIB/lib_str.c ****                 nbr_hex_lower = ASCII_IsLower(parse_char);
 688              		.loc 1 4022 0
 689 0124 2046     		mov	r0, r4
 690              	.LVL119:
 691 0126 FFF7FEFF 		bl	ASCII_IsLower
 692              	.LVL120:
4023:uC-LIB/lib_str.c ****                 if (nbr_hex_lower == DEF_YES) {
 693              		.loc 1 4023 0
 694 012a 0128     		cmp	r0, #1
 695 012c 02D1     		bne	.L66
4024:uC-LIB/lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'a') + 10u);
 696              		.loc 1 4024 0
 697 012e 573C     		subs	r4, r4, #87
 698              	.LVL121:
 699 0130 E4B2     		uxtb	r4, r4
 700              	.LVL122:
 701 0132 01E0     		b	.L65
 702              	.LVL123:
 703              	.L66:
4025:uC-LIB/lib_str.c ****                 } else {
4026:uC-LIB/lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'A') + 10u);
 704              		.loc 1 4026 0
 705 0134 373C     		subs	r4, r4, #55
 706              	.LVL124:
 707 0136 E4B2     		uxtb	r4, r4
 708              	.LVL125:
 709              	.L65:
4027:uC-LIB/lib_str.c ****                 }
4028:uC-LIB/lib_str.c ****             }
4029:uC-LIB/lib_str.c **** 
4030:uC-LIB/lib_str.c ****             if (parse_dig < nbr_base) {                         /* If parse char valid for nbr base
 710              		.loc 1 4030 0
 711 0138 A045     		cmp	r8, r4
 712 013a 12D9     		bls	.L87
4031:uC-LIB/lib_str.c ****                 if (ovf == DEF_NO) {                            /* ... & nbr NOT yet ovf'd,        
 713              		.loc 1 4031 0
 714 013c 009B     		ldr	r3, [sp]
 715 013e 73B9     		cbnz	r3, .L68
4032:uC-LIB/lib_str.c ****                     if (nbr <= Str_MultOvfThTbl_Int32U[nbr_base]) {
 716              		.loc 1 4032 0
 717 0140 174B     		ldr	r3, .L95
 718 0142 53F82830 		ldr	r3, [r3, r8, lsl #2]
 719 0146 9945     		cmp	r9, r3
 720 0148 04D8     		bhi	.L88
 721              	.LVL126:
4033:uC-LIB/lib_str.c ****                                                                 /* ... merge parse char dig into nb
4034:uC-LIB/lib_str.c ****                         nbr *= nbr_base;
4035:uC-LIB/lib_str.c ****                         nbr += parse_dig;
 722              		.loc 1 4035 0
 723 014a 09FB0849 		mla	r9, r9, r8, r4
 724              	.LVL127:
4036:uC-LIB/lib_str.c ****                         if (nbr < parse_dig) {
 725              		.loc 1 4036 0
 726 014e 4C45     		cmp	r4, r9
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 85


 727 0150 03D8     		bhi	.L89
 728 0152 04E0     		b	.L68
 729              	.L88:
4037:uC-LIB/lib_str.c ****                             ovf = DEF_YES;
4038:uC-LIB/lib_str.c ****                         }
4039:uC-LIB/lib_str.c ****                     } else {
4040:uC-LIB/lib_str.c ****                         ovf = DEF_YES;
 730              		.loc 1 4040 0
 731 0154 0123     		movs	r3, #1
 732 0156 0093     		str	r3, [sp]
 733              	.LVL128:
 734 0158 01E0     		b	.L68
 735              	.LVL129:
 736              	.L89:
4037:uC-LIB/lib_str.c ****                             ovf = DEF_YES;
 737              		.loc 1 4037 0
 738 015a 0123     		movs	r3, #1
 739 015c 0093     		str	r3, [sp]
 740              	.LVL130:
 741              	.L68:
4041:uC-LIB/lib_str.c ****                     }
4042:uC-LIB/lib_str.c ****                 }
4043:uC-LIB/lib_str.c ****                 pstr_parse++;
 742              		.loc 1 4043 0
 743 015e 0136     		adds	r6, r6, #1
 744              	.LVL131:
 745 0160 02E0     		b	.L63
 746              	.L87:
4044:uC-LIB/lib_str.c **** 
4045:uC-LIB/lib_str.c ****             } else {                                            /* Invalid         char parsed (see
4046:uC-LIB/lib_str.c ****                 done = DEF_YES;
 747              		.loc 1 4046 0
 748 0162 0125     		movs	r5, #1
 749              	.LVL132:
 750 0164 00E0     		b	.L63
 751              	.LVL133:
 752              	.L86:
4047:uC-LIB/lib_str.c ****             }
4048:uC-LIB/lib_str.c **** 
4049:uC-LIB/lib_str.c ****         } else {                                                /* Invalid OR NULL char parsed (see
4050:uC-LIB/lib_str.c ****             done = DEF_YES;
 753              		.loc 1 4050 0
 754 0166 0125     		movs	r5, #1
 755              	.LVL134:
 756              	.L63:
4013:uC-LIB/lib_str.c ****         parse_char = (CPU_CHAR)*pstr_parse;
 757              		.loc 1 4013 0
 758 0168 002D     		cmp	r5, #0
 759 016a CDD0     		beq	.L69
4051:uC-LIB/lib_str.c ****         }
4052:uC-LIB/lib_str.c ****     }
4053:uC-LIB/lib_str.c **** 
4054:uC-LIB/lib_str.c ****     if (ovf == DEF_YES) {                                       /* If nbr ovf'd, ...               
 760              		.loc 1 4054 0
 761 016c 009B     		ldr	r3, [sp]
 762 016e 0BB1     		cbz	r3, .L70
4055:uC-LIB/lib_str.c ****         nbr  = DEF_INT_32U_MAX_VAL;                             /* ... rtn max int val (see Note #2
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 86


 763              		.loc 1 4055 0
 764 0170 4FF0FF39 		mov	r9, #-1
 765              	.LVL135:
 766              	.L70:
4056:uC-LIB/lib_str.c ****     }
4057:uC-LIB/lib_str.c **** 
4058:uC-LIB/lib_str.c **** 
4059:uC-LIB/lib_str.c ****     if (pstr_parse !=             pstr_parse_nbr) {             /* If final parse str != init'l par
 767              		.loc 1 4059 0
 768 0174 B742     		cmp	r7, r6
 769 0176 02D0     		beq	.L71
4060:uC-LIB/lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr_parse;                   /* .. rtn   parse str's next char (
 770              		.loc 1 4060 0
 771 0178 CBF80060 		str	r6, [fp]
 772 017c 01E0     		b	.L72
 773              	.L71:
4061:uC-LIB/lib_str.c ****     } else {
4062:uC-LIB/lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr;                         /* .. else rtn initial parse str  (
 774              		.loc 1 4062 0
 775 017e CBF800A0 		str	r10, [fp]
 776              	.L72:
4063:uC-LIB/lib_str.c ****     }
4064:uC-LIB/lib_str.c **** 
4065:uC-LIB/lib_str.c ****    *pnbr_neg = neg;                                             /* Rtn neg nbr status.             
 777              		.loc 1 4065 0
 778 0182 0E9B     		ldr	r3, [sp, #56]
 779 0184 1A46     		mov	r2, r3
 780 0186 9DF80430 		ldrb	r3, [sp, #4]	@ zero_extendqisi2
 781 018a 1370     		strb	r3, [r2]
4066:uC-LIB/lib_str.c **** 
4067:uC-LIB/lib_str.c **** 
4068:uC-LIB/lib_str.c ****     return (nbr);
 782              		.loc 1 4068 0
 783 018c 4846     		mov	r0, r9
 784 018e 04E0     		b	.L50
 785              	.LVL136:
 786              	.L75:
3904:uC-LIB/lib_str.c ****     }
 787              		.loc 1 3904 0
 788 0190 0020     		movs	r0, #0
 789              	.LVL137:
 790 0192 02E0     		b	.L50
 791              	.LVL138:
 792              	.L76:
3909:uC-LIB/lib_str.c ****     }
 793              		.loc 1 3909 0
 794 0194 0020     		movs	r0, #0
 795              	.LVL139:
 796 0196 00E0     		b	.L50
 797              	.LVL140:
 798              	.L77:
 799 0198 0020     		movs	r0, #0
 800              	.LVL141:
 801              	.L50:
4069:uC-LIB/lib_str.c **** }
 802              		.loc 1 4069 0
 803 019a 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 87


 804              		.cfi_def_cfa_offset 36
 805              		@ sp needed
 806 019c BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 807              	.LVL142:
 808              	.L96:
 809              		.align	2
 810              	.L95:
 811 01a0 00000000 		.word	.LANCHOR0
 812              		.cfi_endproc
 813              	.LFE24:
 814              		.size	Str_ParseNbr_Int32, .-Str_ParseNbr_Int32
 815              		.section	.text.Str_Len_N,"ax",%progbits
 816              		.align	2
 817              		.global	Str_Len_N
 818              		.thumb
 819              		.thumb_func
 820              		.type	Str_Len_N, %function
 821              	Str_Len_N:
 822              	.LFB2:
 281:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_len;
 823              		.loc 1 281 0
 824              		.cfi_startproc
 825              		@ args = 0, pretend = 0, frame = 0
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 827              		@ link register save eliminated.
 828              	.LVL143:
 829 0000 0346     		mov	r3, r0
 830              	.LVL144:
 287:uC-LIB/lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 831              		.loc 1 287 0
 832 0002 0020     		movs	r0, #0
 833              	.LVL145:
 288:uC-LIB/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 834              		.loc 1 288 0
 835 0004 01E0     		b	.L98
 836              	.LVL146:
 837              	.L100:
 291:uC-LIB/lib_str.c ****         len++;
 838              		.loc 1 291 0
 839 0006 0133     		adds	r3, r3, #1
 840              	.LVL147:
 292:uC-LIB/lib_str.c ****     }
 841              		.loc 1 292 0
 842 0008 0130     		adds	r0, r0, #1
 843              	.LVL148:
 844              	.L98:
 288:uC-LIB/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 845              		.loc 1 288 0
 846 000a 1BB1     		cbz	r3, .L99
 289:uC-LIB/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 847              		.loc 1 289 0 discriminator 1
 848 000c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 288:uC-LIB/lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 849              		.loc 1 288 0 discriminator 1
 850 000e 0AB1     		cbz	r2, .L99
 289:uC-LIB/lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 851              		.loc 1 289 0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 88


 852 0010 8842     		cmp	r0, r1
 853 0012 F8D3     		bcc	.L100
 854              	.L99:
 296:uC-LIB/lib_str.c **** 
 855              		.loc 1 296 0
 856 0014 7047     		bx	lr
 857              		.cfi_endproc
 858              	.LFE2:
 859              		.size	Str_Len_N, .-Str_Len_N
 860 0016 00BF     		.section	.text.Str_Len,"ax",%progbits
 861              		.align	2
 862              		.global	Str_Len
 863              		.thumb
 864              		.thumb_func
 865              		.type	Str_Len, %function
 866              	Str_Len:
 867              	.LFB1:
 220:uC-LIB/lib_str.c ****     CPU_SIZE_T  len;
 868              		.loc 1 220 0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 0
 871              		@ frame_needed = 0, uses_anonymous_args = 0
 872              	.LVL149:
 873 0000 08B5     		push	{r3, lr}
 874              		.cfi_def_cfa_offset 8
 875              		.cfi_offset 3, -8
 876              		.cfi_offset 14, -4
 224:uC-LIB/lib_str.c ****                     DEF_INT_CPU_U_MAX_VAL);
 877              		.loc 1 224 0
 878 0002 4FF0FF31 		mov	r1, #-1
 879 0006 FFF7FEFF 		bl	Str_Len_N
 880              	.LVL150:
 228:uC-LIB/lib_str.c **** 
 881              		.loc 1 228 0
 882 000a 08BD     		pop	{r3, pc}
 883              		.cfi_endproc
 884              	.LFE1:
 885              		.size	Str_Len, .-Str_Len
 886              		.section	.text.Str_Copy_N,"ax",%progbits
 887              		.align	2
 888              		.global	Str_Copy_N
 889              		.thumb
 890              		.thumb_func
 891              		.type	Str_Copy_N, %function
 892              	Str_Copy_N:
 893              	.LFB4:
 446:uC-LIB/lib_str.c ****            CPU_CHAR    *pstr_copy_dest;
 894              		.loc 1 446 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 0
 897              		@ frame_needed = 0, uses_anonymous_args = 0
 898              		@ link register save eliminated.
 899              	.LVL151:
 452:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 900              		.loc 1 452 0
 901 0000 B8B1     		cbz	r0, .L108
 446:uC-LIB/lib_str.c ****            CPU_CHAR    *pstr_copy_dest;
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 89


 902              		.loc 1 446 0
 903 0002 70B4     		push	{r4, r5, r6}
 904              		.cfi_def_cfa_offset 12
 905              		.cfi_offset 4, -12
 906              		.cfi_offset 5, -8
 907              		.cfi_offset 6, -4
 908 0004 0646     		mov	r6, r0
 455:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 909              		.loc 1 455 0
 910 0006 B1B1     		cbz	r1, .L109
 911 0008 0346     		mov	r3, r0
 912 000a 0024     		movs	r4, #0
 913 000c 03E0     		b	.L105
 914              	.LVL152:
 915              	.L107:
 468:uC-LIB/lib_str.c ****         pstr_copy_dest++;
 916              		.loc 1 468 0
 917 000e 03F8015B 		strb	r5, [r3], #1
 918              	.LVL153:
 470:uC-LIB/lib_str.c ****         len_copy++;
 919              		.loc 1 470 0
 920 0012 0131     		adds	r1, r1, #1
 921              	.LVL154:
 471:uC-LIB/lib_str.c ****     }
 922              		.loc 1 471 0
 923 0014 0134     		adds	r4, r4, #1
 924              	.LVL155:
 925              	.L105:
 464:uC-LIB/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 926              		.loc 1 464 0
 927 0016 23B1     		cbz	r3, .L106
 464:uC-LIB/lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 928              		.loc 1 464 0 is_stmt 0 discriminator 1
 929 0018 19B1     		cbz	r1, .L106
 466:uC-LIB/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 930              		.loc 1 466 0 is_stmt 1
 931 001a 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 465:uC-LIB/lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 932              		.loc 1 465 0
 933 001c 0DB1     		cbz	r5, .L106
 466:uC-LIB/lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
 934              		.loc 1 466 0
 935 001e 9442     		cmp	r4, r2
 936 0020 F5D3     		bcc	.L107
 937              	.L106:
 474:uC-LIB/lib_str.c ****         (pstr_copy_src  == (const CPU_CHAR *)0)) {
 938              		.loc 1 474 0
 939 0022 53B1     		cbz	r3, .L110
 474:uC-LIB/lib_str.c ****         (pstr_copy_src  == (const CPU_CHAR *)0)) {
 940              		.loc 1 474 0 is_stmt 0 discriminator 1
 941 0024 59B1     		cbz	r1, .L111
 479:uC-LIB/lib_str.c ****        *pstr_copy_dest = (CPU_CHAR)'\0';                        /* ... copy NULL char  (see Note #3
 942              		.loc 1 479 0 is_stmt 1
 943 0026 9442     		cmp	r4, r2
 944 0028 0BD2     		bcs	.L112
 480:uC-LIB/lib_str.c ****     }
 945              		.loc 1 480 0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 90


 946 002a 0022     		movs	r2, #0
 947              	.LVL156:
 948 002c 1A70     		strb	r2, [r3]
 484:uC-LIB/lib_str.c **** }
 949              		.loc 1 484 0
 950 002e 3046     		mov	r0, r6
 951              	.LVL157:
 952 0030 08E0     		b	.L104
 953              	.LVL158:
 954              	.L108:
 955              		.cfi_def_cfa_offset 0
 956              		.cfi_restore 4
 957              		.cfi_restore 5
 958              		.cfi_restore 6
 453:uC-LIB/lib_str.c ****     }
 959              		.loc 1 453 0
 960 0032 0020     		movs	r0, #0
 961              	.LVL159:
 485:uC-LIB/lib_str.c **** 
 962              		.loc 1 485 0
 963 0034 7047     		bx	lr
 964              	.LVL160:
 965              	.L109:
 966              		.cfi_def_cfa_offset 12
 967              		.cfi_offset 4, -12
 968              		.cfi_offset 5, -8
 969              		.cfi_offset 6, -4
 456:uC-LIB/lib_str.c ****     }
 970              		.loc 1 456 0
 971 0036 0020     		movs	r0, #0
 972              	.LVL161:
 973 0038 04E0     		b	.L104
 974              	.LVL162:
 975              	.L110:
 476:uC-LIB/lib_str.c ****     }
 976              		.loc 1 476 0
 977 003a 0020     		movs	r0, #0
 978              	.LVL163:
 979 003c 02E0     		b	.L104
 980              	.LVL164:
 981              	.L111:
 982 003e 0020     		movs	r0, #0
 983              	.LVL165:
 984 0040 00E0     		b	.L104
 985              	.LVL166:
 986              	.L112:
 484:uC-LIB/lib_str.c **** }
 987              		.loc 1 484 0
 988 0042 3046     		mov	r0, r6
 989              	.LVL167:
 990              	.L104:
 485:uC-LIB/lib_str.c **** 
 991              		.loc 1 485 0
 992 0044 70BC     		pop	{r4, r5, r6}
 993              		.cfi_restore 6
 994              		.cfi_restore 5
 995              		.cfi_restore 4
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 91


 996              		.cfi_def_cfa_offset 0
 997              	.LVL168:
 998 0046 7047     		bx	lr
 999              		.cfi_endproc
 1000              	.LFE4:
 1001              		.size	Str_Copy_N, .-Str_Copy_N
 1002              		.section	.text.Str_Copy,"ax",%progbits
 1003              		.align	2
 1004              		.global	Str_Copy
 1005              		.thumb
 1006              		.thumb_func
 1007              		.type	Str_Copy, %function
 1008              	Str_Copy:
 1009              	.LFB3:
 354:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 1010              		.loc 1 354 0
 1011              		.cfi_startproc
 1012              		@ args = 0, pretend = 0, frame = 0
 1013              		@ frame_needed = 0, uses_anonymous_args = 0
 1014              	.LVL169:
 1015 0000 08B5     		push	{r3, lr}
 1016              		.cfi_def_cfa_offset 8
 1017              		.cfi_offset 3, -8
 1018              		.cfi_offset 14, -4
 358:uC-LIB/lib_str.c ****                           pstr_src,
 1019              		.loc 1 358 0
 1020 0002 4FF0FF32 		mov	r2, #-1
 1021 0006 FFF7FEFF 		bl	Str_Copy_N
 1022              	.LVL170:
 363:uC-LIB/lib_str.c **** 
 1023              		.loc 1 363 0
 1024 000a 08BD     		pop	{r3, pc}
 1025              		.cfi_endproc
 1026              	.LFE3:
 1027              		.size	Str_Copy, .-Str_Copy
 1028              		.section	.text.Str_Cat_N,"ax",%progbits
 1029              		.align	2
 1030              		.global	Str_Cat_N
 1031              		.thumb
 1032              		.thumb_func
 1033              		.type	Str_Cat_N, %function
 1034              	Str_Cat_N:
 1035              	.LFB6:
 631:uC-LIB/lib_str.c ****            CPU_CHAR    *pstr_cat_dest;
 1036              		.loc 1 631 0
 1037              		.cfi_startproc
 1038              		@ args = 0, pretend = 0, frame = 0
 1039              		@ frame_needed = 0, uses_anonymous_args = 0
 1040              		@ link register save eliminated.
 1041              	.LVL171:
 637:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1042              		.loc 1 637 0
 1043 0000 E8B1     		cbz	r0, .L124
 631:uC-LIB/lib_str.c ****            CPU_CHAR    *pstr_cat_dest;
 1044              		.loc 1 631 0
 1045 0002 70B4     		push	{r4, r5, r6}
 1046              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 92


 1047              		.cfi_offset 4, -12
 1048              		.cfi_offset 5, -8
 1049              		.cfi_offset 6, -4
 1050 0004 0646     		mov	r6, r0
 640:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1051              		.loc 1 640 0
 1052 0006 E1B1     		cbz	r1, .L125
 644:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)pstr_dest);
 1053              		.loc 1 644 0
 1054 0008 EAB1     		cbz	r2, .L126
 1055 000a 0346     		mov	r3, r0
 1056 000c 00E0     		b	.L118
 1057              	.LVL172:
 1058              	.L120:
 652:uC-LIB/lib_str.c ****     }
 1059              		.loc 1 652 0
 1060 000e 0133     		adds	r3, r3, #1
 1061              	.LVL173:
 1062              	.L118:
 650:uC-LIB/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 1063              		.loc 1 650 0
 1064 0010 13B1     		cbz	r3, .L119
 651:uC-LIB/lib_str.c ****         pstr_cat_dest++;
 1065              		.loc 1 651 0 discriminator 1
 1066 0012 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 650:uC-LIB/lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 1067              		.loc 1 650 0 discriminator 1
 1068 0014 002C     		cmp	r4, #0
 1069 0016 FAD1     		bne	.L120
 1070              	.L119:
 654:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1071              		.loc 1 654 0
 1072 0018 B3B1     		cbz	r3, .L127
 1073 001a 0024     		movs	r4, #0
 1074 001c 03E0     		b	.L121
 1075              	.LVL174:
 1076              	.L123:
 665:uC-LIB/lib_str.c ****         pstr_cat_dest++;
 1077              		.loc 1 665 0
 1078 001e 03F8015B 		strb	r5, [r3], #1
 1079              	.LVL175:
 667:uC-LIB/lib_str.c ****         len_cat++;
 1080              		.loc 1 667 0
 1081 0022 0131     		adds	r1, r1, #1
 1082              	.LVL176:
 668:uC-LIB/lib_str.c ****     }
 1083              		.loc 1 668 0
 1084 0024 0134     		adds	r4, r4, #1
 1085              	.LVL177:
 1086              	.L121:
 661:uC-LIB/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 1087              		.loc 1 661 0
 1088 0026 23B1     		cbz	r3, .L122
 661:uC-LIB/lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 1089              		.loc 1 661 0 is_stmt 0 discriminator 1
 1090 0028 19B1     		cbz	r1, .L122
 663:uC-LIB/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 93


 1091              		.loc 1 663 0 is_stmt 1
 1092 002a 0D78     		ldrb	r5, [r1]	@ zero_extendqisi2
 662:uC-LIB/lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 1093              		.loc 1 662 0
 1094 002c 0DB1     		cbz	r5, .L122
 663:uC-LIB/lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 1095              		.loc 1 663 0
 1096 002e 9442     		cmp	r4, r2
 1097 0030 F5D3     		bcc	.L123
 1098              	.L122:
 671:uC-LIB/lib_str.c ****         (pstr_cat_src  == (const CPU_CHAR *)0)) {
 1099              		.loc 1 671 0
 1100 0032 5BB1     		cbz	r3, .L128
 671:uC-LIB/lib_str.c ****         (pstr_cat_src  == (const CPU_CHAR *)0)) {
 1101              		.loc 1 671 0 is_stmt 0 discriminator 1
 1102 0034 61B1     		cbz	r1, .L129
 676:uC-LIB/lib_str.c **** 
 1103              		.loc 1 676 0 is_stmt 1
 1104 0036 0022     		movs	r2, #0
 1105              	.LVL178:
 1106 0038 1A70     		strb	r2, [r3]
 679:uC-LIB/lib_str.c **** }
 1107              		.loc 1 679 0
 1108 003a 3046     		mov	r0, r6
 1109              	.LVL179:
 1110 003c 09E0     		b	.L117
 1111              	.LVL180:
 1112              	.L124:
 1113              		.cfi_def_cfa_offset 0
 1114              		.cfi_restore 4
 1115              		.cfi_restore 5
 1116              		.cfi_restore 6
 638:uC-LIB/lib_str.c ****     }
 1117              		.loc 1 638 0
 1118 003e 0020     		movs	r0, #0
 1119              	.LVL181:
 680:uC-LIB/lib_str.c **** 
 1120              		.loc 1 680 0
 1121 0040 7047     		bx	lr
 1122              	.LVL182:
 1123              	.L125:
 1124              		.cfi_def_cfa_offset 12
 1125              		.cfi_offset 4, -12
 1126              		.cfi_offset 5, -8
 1127              		.cfi_offset 6, -4
 641:uC-LIB/lib_str.c ****     }
 1128              		.loc 1 641 0
 1129 0042 0020     		movs	r0, #0
 1130              	.LVL183:
 1131 0044 05E0     		b	.L117
 1132              	.LVL184:
 1133              	.L126:
 1134 0046 04E0     		b	.L117
 1135              	.LVL185:
 1136              	.L127:
 655:uC-LIB/lib_str.c ****     }
 1137              		.loc 1 655 0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 94


 1138 0048 0020     		movs	r0, #0
 1139              	.LVL186:
 1140 004a 02E0     		b	.L117
 1141              	.LVL187:
 1142              	.L128:
 673:uC-LIB/lib_str.c ****     }
 1143              		.loc 1 673 0
 1144 004c 0020     		movs	r0, #0
 1145              	.LVL188:
 1146 004e 00E0     		b	.L117
 1147              	.LVL189:
 1148              	.L129:
 1149 0050 0020     		movs	r0, #0
 1150              	.LVL190:
 1151              	.L117:
 680:uC-LIB/lib_str.c **** 
 1152              		.loc 1 680 0
 1153 0052 70BC     		pop	{r4, r5, r6}
 1154              		.cfi_restore 6
 1155              		.cfi_restore 5
 1156              		.cfi_restore 4
 1157              		.cfi_def_cfa_offset 0
 1158              	.LVL191:
 1159 0054 7047     		bx	lr
 1160              		.cfi_endproc
 1161              	.LFE6:
 1162              		.size	Str_Cat_N, .-Str_Cat_N
 1163 0056 00BF     		.section	.text.Str_Cat,"ax",%progbits
 1164              		.align	2
 1165              		.global	Str_Cat
 1166              		.thumb
 1167              		.thumb_func
 1168              		.type	Str_Cat, %function
 1169              	Str_Cat:
 1170              	.LFB5:
 547:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 1171              		.loc 1 547 0
 1172              		.cfi_startproc
 1173              		@ args = 0, pretend = 0, frame = 0
 1174              		@ frame_needed = 0, uses_anonymous_args = 0
 1175              	.LVL192:
 1176 0000 08B5     		push	{r3, lr}
 1177              		.cfi_def_cfa_offset 8
 1178              		.cfi_offset 3, -8
 1179              		.cfi_offset 14, -4
 551:uC-LIB/lib_str.c ****                          pstr_cat,
 1180              		.loc 1 551 0
 1181 0002 4FF0FF32 		mov	r2, #-1
 1182 0006 FFF7FEFF 		bl	Str_Cat_N
 1183              	.LVL193:
 556:uC-LIB/lib_str.c **** 
 1184              		.loc 1 556 0
 1185 000a 08BD     		pop	{r3, pc}
 1186              		.cfi_endproc
 1187              	.LFE5:
 1188              		.size	Str_Cat, .-Str_Cat
 1189              		.section	.text.Str_Cmp_N,"ax",%progbits
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 95


 1190              		.align	2
 1191              		.global	Str_Cmp_N
 1192              		.thumb
 1193              		.thumb_func
 1194              		.type	Str_Cmp_N, %function
 1195              	Str_Cmp_N:
 1196              	.LFB8:
 864:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 1197              		.loc 1 864 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 0
 1200              		@ frame_needed = 0, uses_anonymous_args = 0
 1201              		@ link register save eliminated.
 1202              	.LVL194:
 873:uC-LIB/lib_str.c ****         return (0);
 1203              		.loc 1 873 0
 1204 0000 5AB3     		cbz	r2, .L142
 864:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 1205              		.loc 1 864 0
 1206 0002 F0B4     		push	{r4, r5, r6, r7}
 1207              		.cfi_def_cfa_offset 16
 1208              		.cfi_offset 4, -16
 1209              		.cfi_offset 5, -12
 1210              		.cfi_offset 6, -8
 1211              		.cfi_offset 7, -4
 1212 0004 1746     		mov	r7, r2
 877:uC-LIB/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 1213              		.loc 1 877 0
 1214 0006 20B9     		cbnz	r0, .L135
 878:uC-LIB/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 1215              		.loc 1 878 0
 1216 0008 49B3     		cbz	r1, .L143
 881:uC-LIB/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 1217              		.loc 1 881 0
 1218 000a 0B78     		ldrb	r3, [r1]	@ zero_extendqisi2
 1219 000c 5B42     		negs	r3, r3
 1220 000e 18B2     		sxth	r0, r3
 1221              	.LVL195:
 882:uC-LIB/lib_str.c ****     }
 1222              		.loc 1 882 0
 1223 0010 2CE0     		b	.L134
 1224              	.LVL196:
 1225              	.L135:
 884:uC-LIB/lib_str.c ****         cmp_val = (CPU_INT16S)(*p1_str);
 1226              		.loc 1 884 0
 1227 0012 09B9     		cbnz	r1, .L136
 885:uC-LIB/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 1228              		.loc 1 885 0
 1229 0014 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1230              	.LVL197:
 886:uC-LIB/lib_str.c ****     }
 1231              		.loc 1 886 0
 1232 0016 29E0     		b	.L134
 1233              	.LVL198:
 1234              	.L136:
 894:uC-LIB/lib_str.c ****     p2_str_cmp_next++;
 1235              		.loc 1 894 0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 96


 1236 0018 441C     		adds	r4, r0, #1
 1237              	.LVL199:
 895:uC-LIB/lib_str.c ****     cmp_len         = 0u;
 1238              		.loc 1 895 0
 1239 001a 4D1C     		adds	r5, r1, #1
 1240              	.LVL200:
 896:uC-LIB/lib_str.c **** 
 1241              		.loc 1 896 0
 1242 001c 0022     		movs	r2, #0
 1243              	.LVL201:
 898:uC-LIB/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1244              		.loc 1 898 0
 1245 001e 04E0     		b	.L137
 1246              	.LVL202:
 1247              	.L139:
 903:uC-LIB/lib_str.c ****         p2_str_cmp++;
 1248              		.loc 1 903 0
 1249 0020 0130     		adds	r0, r0, #1
 1250              	.LVL203:
 904:uC-LIB/lib_str.c ****         p1_str_cmp_next++;
 1251              		.loc 1 904 0
 1252 0022 0131     		adds	r1, r1, #1
 1253              	.LVL204:
 905:uC-LIB/lib_str.c ****         p2_str_cmp_next++;
 1254              		.loc 1 905 0
 1255 0024 0134     		adds	r4, r4, #1
 1256              	.LVL205:
 906:uC-LIB/lib_str.c ****         cmp_len++;
 1257              		.loc 1 906 0
 1258 0026 0135     		adds	r5, r5, #1
 1259              	.LVL206:
 907:uC-LIB/lib_str.c ****     }
 1260              		.loc 1 907 0
 1261 0028 0132     		adds	r2, r2, #1
 1262              	.LVL207:
 1263              	.L137:
 898:uC-LIB/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1264              		.loc 1 898 0
 1265 002a 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1266 002c 0E78     		ldrb	r6, [r1]	@ zero_extendqisi2
 1267 002e B342     		cmp	r3, r6
 1268 0030 04D1     		bne	.L138
 898:uC-LIB/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1269              		.loc 1 898 0 is_stmt 0 discriminator 1
 1270 0032 1BB1     		cbz	r3, .L138
 899:uC-LIB/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1271              		.loc 1 899 0 is_stmt 1
 1272 0034 14B1     		cbz	r4, .L138
 900:uC-LIB/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1273              		.loc 1 900 0
 1274 0036 0DB1     		cbz	r5, .L138
 901:uC-LIB/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 1275              		.loc 1 901 0
 1276 0038 BA42     		cmp	r2, r7
 1277 003a F1D3     		bcc	.L139
 1278              	.L138:
 911:uC-LIB/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 97


 1279              		.loc 1 911 0
 1280 003c BA42     		cmp	r2, r7
 1281 003e 10D0     		beq	.L144
 915:uC-LIB/lib_str.c ****                                                                 /* ... calc & rtn char diff  (see N
 1282              		.loc 1 915 0
 1283 0040 B342     		cmp	r3, r6
 1284 0042 01D0     		beq	.L140
 917:uC-LIB/lib_str.c **** 
 1285              		.loc 1 917 0
 1286 0044 981B     		subs	r0, r3, r6
 1287              	.LVL208:
 1288 0046 11E0     		b	.L134
 1289              	.LVL209:
 1290              	.L140:
 919:uC-LIB/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 1291              		.loc 1 919 0
 1292 0048 6BB1     		cbz	r3, .L145
 923:uC-LIB/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 1293              		.loc 1 923 0
 1294 004a 24B9     		cbnz	r4, .L141
 924:uC-LIB/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 1295              		.loc 1 924 0
 1296 004c 6DB1     		cbz	r5, .L146
 928:uC-LIB/lib_str.c ****             }
 1297              		.loc 1 928 0
 1298 004e 2B78     		ldrb	r3, [r5]	@ zero_extendqisi2
 1299 0050 5B42     		negs	r3, r3
 1300 0052 18B2     		sxth	r0, r3
 1301              	.LVL210:
 1302 0054 0AE0     		b	.L134
 1303              	.LVL211:
 1304              	.L141:
 931:uC-LIB/lib_str.c ****         }
 1305              		.loc 1 931 0
 1306 0056 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1307              	.LVL212:
 1308 0058 08E0     		b	.L134
 1309              	.LVL213:
 1310              	.L142:
 1311              		.cfi_def_cfa_offset 0
 1312              		.cfi_restore 4
 1313              		.cfi_restore 5
 1314              		.cfi_restore 6
 1315              		.cfi_restore 7
 874:uC-LIB/lib_str.c ****     }
 1316              		.loc 1 874 0
 1317 005a 0020     		movs	r0, #0
 1318              	.LVL214:
 937:uC-LIB/lib_str.c **** 
 1319              		.loc 1 937 0
 1320 005c 7047     		bx	lr
 1321              	.LVL215:
 1322              	.L143:
 1323              		.cfi_def_cfa_offset 16
 1324              		.cfi_offset 4, -16
 1325              		.cfi_offset 5, -12
 1326              		.cfi_offset 6, -8
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 98


 1327              		.cfi_offset 7, -4
 879:uC-LIB/lib_str.c ****         }
 1328              		.loc 1 879 0
 1329 005e 0020     		movs	r0, #0
 1330              	.LVL216:
 1331 0060 04E0     		b	.L134
 1332              	.LVL217:
 1333              	.L144:
 912:uC-LIB/lib_str.c ****     }
 1334              		.loc 1 912 0
 1335 0062 0020     		movs	r0, #0
 1336              	.LVL218:
 1337 0064 02E0     		b	.L134
 1338              	.LVL219:
 1339              	.L145:
 920:uC-LIB/lib_str.c **** 
 1340              		.loc 1 920 0
 1341 0066 0020     		movs	r0, #0
 1342              	.LVL220:
 1343 0068 00E0     		b	.L134
 1344              	.LVL221:
 1345              	.L146:
 925:uC-LIB/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
 1346              		.loc 1 925 0
 1347 006a 0020     		movs	r0, #0
 1348              	.LVL222:
 1349              	.L134:
 937:uC-LIB/lib_str.c **** 
 1350              		.loc 1 937 0
 1351 006c F0BC     		pop	{r4, r5, r6, r7}
 1352              		.cfi_restore 7
 1353              		.cfi_restore 6
 1354              		.cfi_restore 5
 1355              		.cfi_restore 4
 1356              		.cfi_def_cfa_offset 0
 1357              	.LVL223:
 1358 006e 7047     		bx	lr
 1359              		.cfi_endproc
 1360              	.LFE8:
 1361              		.size	Str_Cmp_N, .-Str_Cmp_N
 1362              		.section	.text.Str_Cmp,"ax",%progbits
 1363              		.align	2
 1364              		.global	Str_Cmp
 1365              		.thumb
 1366              		.thumb_func
 1367              		.type	Str_Cmp, %function
 1368              	Str_Cmp:
 1369              	.LFB7:
 761:uC-LIB/lib_str.c ****     CPU_INT16S  cmp_val;
 1370              		.loc 1 761 0
 1371              		.cfi_startproc
 1372              		@ args = 0, pretend = 0, frame = 0
 1373              		@ frame_needed = 0, uses_anonymous_args = 0
 1374              	.LVL224:
 1375 0000 08B5     		push	{r3, lr}
 1376              		.cfi_def_cfa_offset 8
 1377              		.cfi_offset 3, -8
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 99


 1378              		.cfi_offset 14, -4
 765:uC-LIB/lib_str.c ****                         p2_str,
 1379              		.loc 1 765 0
 1380 0002 4FF0FF32 		mov	r2, #-1
 1381 0006 FFF7FEFF 		bl	Str_Cmp_N
 1382              	.LVL225:
 770:uC-LIB/lib_str.c **** 
 1383              		.loc 1 770 0
 1384 000a 08BD     		pop	{r3, pc}
 1385              		.cfi_endproc
 1386              	.LFE7:
 1387              		.size	Str_Cmp, .-Str_Cmp
 1388              		.section	.text.Str_CmpIgnoreCase_N,"ax",%progbits
 1389              		.align	2
 1390              		.global	Str_CmpIgnoreCase_N
 1391              		.thumb
 1392              		.thumb_func
 1393              		.type	Str_CmpIgnoreCase_N, %function
 1394              	Str_CmpIgnoreCase_N:
 1395              	.LFB10:
1141:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 1396              		.loc 1 1141 0
 1397              		.cfi_startproc
 1398              		@ args = 0, pretend = 0, frame = 0
 1399              		@ frame_needed = 0, uses_anonymous_args = 0
 1400              	.LVL226:
1152:uC-LIB/lib_str.c ****         return (0);
 1401              		.loc 1 1152 0
 1402 0000 002A     		cmp	r2, #0
 1403 0002 50D0     		beq	.L159
1141:uC-LIB/lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 1404              		.loc 1 1141 0
 1405 0004 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 1406              		.cfi_def_cfa_offset 32
 1407              		.cfi_offset 4, -32
 1408              		.cfi_offset 5, -28
 1409              		.cfi_offset 6, -24
 1410              		.cfi_offset 7, -20
 1411              		.cfi_offset 8, -16
 1412              		.cfi_offset 9, -12
 1413              		.cfi_offset 10, -8
 1414              		.cfi_offset 14, -4
 1415 0008 0446     		mov	r4, r0
 1416 000a 8846     		mov	r8, r1
 1417 000c 9246     		mov	r10, r2
1156:uC-LIB/lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 1418              		.loc 1 1156 0
 1419 000e 40B9     		cbnz	r0, .L152
1157:uC-LIB/lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 1420              		.loc 1 1157 0
 1421 0010 0029     		cmp	r1, #0
 1422 0012 4AD0     		beq	.L160
1160:uC-LIB/lib_str.c ****         cmp_val = (CPU_INT16S)0 - (CPU_INT16S)char_2;
 1423              		.loc 1 1160 0
 1424 0014 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1425              	.LVL227:
 1426 0016 FFF7FEFF 		bl	ASCII_ToLower
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 100


 1427              	.LVL228:
1161:uC-LIB/lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 1428              		.loc 1 1161 0
 1429 001a 4042     		negs	r0, r0
 1430              	.LVL229:
 1431 001c 00B2     		sxth	r0, r0
1162:uC-LIB/lib_str.c ****     }
 1432              		.loc 1 1162 0
 1433 001e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1434              	.LVL230:
 1435              	.L152:
1164:uC-LIB/lib_str.c ****         char_1  =  ASCII_ToLower(*p1_str);
 1436              		.loc 1 1164 0
 1437 0022 29B9     		cbnz	r1, .L153
1165:uC-LIB/lib_str.c ****         cmp_val = (CPU_INT16S)char_1;
 1438              		.loc 1 1165 0
 1439 0024 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1440              	.LVL231:
 1441 0026 FFF7FEFF 		bl	ASCII_ToLower
 1442              	.LVL232:
1166:uC-LIB/lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 1443              		.loc 1 1166 0
 1444 002a 00B2     		sxth	r0, r0
 1445              	.LVL233:
1167:uC-LIB/lib_str.c ****     }
 1446              		.loc 1 1167 0
 1447 002c BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1448              	.LVL234:
 1449              	.L153:
1175:uC-LIB/lib_str.c ****     p2_str_cmp_next++;
 1450              		.loc 1 1175 0
 1451 0030 461C     		adds	r6, r0, #1
 1452              	.LVL235:
1176:uC-LIB/lib_str.c ****     char_1          = ASCII_ToLower(*p1_str_cmp);
 1453              		.loc 1 1176 0
 1454 0032 4F1C     		adds	r7, r1, #1
 1455              	.LVL236:
1177:uC-LIB/lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
 1456              		.loc 1 1177 0
 1457 0034 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1458              	.LVL237:
 1459 0036 FFF7FEFF 		bl	ASCII_ToLower
 1460              	.LVL238:
 1461 003a 8146     		mov	r9, r0
 1462              	.LVL239:
1178:uC-LIB/lib_str.c ****     cmp_len         = 0u;
 1463              		.loc 1 1178 0
 1464 003c 98F80000 		ldrb	r0, [r8]	@ zero_extendqisi2
 1465 0040 FFF7FEFF 		bl	ASCII_ToLower
 1466              	.LVL240:
1179:uC-LIB/lib_str.c **** 
 1467              		.loc 1 1179 0
 1468 0044 0025     		movs	r5, #0
1181:uC-LIB/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1469              		.loc 1 1181 0
 1470 0046 0BE0     		b	.L154
 1471              	.LVL241:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 101


 1472              	.L156:
1188:uC-LIB/lib_str.c ****         p2_str_cmp_next++;
 1473              		.loc 1 1188 0
 1474 0048 0136     		adds	r6, r6, #1
 1475              	.LVL242:
1189:uC-LIB/lib_str.c ****         cmp_len++;
 1476              		.loc 1 1189 0
 1477 004a 0137     		adds	r7, r7, #1
 1478              	.LVL243:
1190:uC-LIB/lib_str.c ****         char_1 = ASCII_ToLower(*p1_str_cmp);
 1479              		.loc 1 1190 0
 1480 004c 0135     		adds	r5, r5, #1
 1481              	.LVL244:
1191:uC-LIB/lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
 1482              		.loc 1 1191 0
 1483 004e 14F8010F 		ldrb	r0, [r4, #1]!	@ zero_extendqisi2
 1484              	.LVL245:
 1485 0052 FFF7FEFF 		bl	ASCII_ToLower
 1486              	.LVL246:
 1487 0056 8146     		mov	r9, r0
 1488              	.LVL247:
1192:uC-LIB/lib_str.c ****     }
 1489              		.loc 1 1192 0
 1490 0058 18F8010F 		ldrb	r0, [r8, #1]!	@ zero_extendqisi2
 1491              	.LVL248:
 1492 005c FFF7FEFF 		bl	ASCII_ToLower
 1493              	.LVL249:
 1494              	.L154:
1181:uC-LIB/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1495              		.loc 1 1181 0
 1496 0060 8145     		cmp	r9, r0
 1497 0062 05D1     		bne	.L155
1182:uC-LIB/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1498              		.loc 1 1182 0 discriminator 1
 1499 0064 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
1181:uC-LIB/lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 1500              		.loc 1 1181 0 discriminator 1
 1501 0066 1BB1     		cbz	r3, .L155
1182:uC-LIB/lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 1502              		.loc 1 1182 0
 1503 0068 16B1     		cbz	r6, .L155
1183:uC-LIB/lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 1504              		.loc 1 1183 0
 1505 006a 0FB1     		cbz	r7, .L155
1184:uC-LIB/lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 1506              		.loc 1 1184 0
 1507 006c 5545     		cmp	r5, r10
 1508 006e EBD3     		bcc	.L156
 1509              	.L155:
1196:uC-LIB/lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1510              		.loc 1 1196 0
 1511 0070 5545     		cmp	r5, r10
 1512 0072 1DD0     		beq	.L161
1200:uC-LIB/lib_str.c ****          cmp_val = (CPU_INT16S)char_1 - (CPU_INT16S)char_2;     /* ... calc & rtn char diff  (see N
 1513              		.loc 1 1200 0
 1514 0074 8145     		cmp	r9, r0
 1515 0076 04D0     		beq	.L157
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 102


1201:uC-LIB/lib_str.c **** 
 1516              		.loc 1 1201 0
 1517 0078 C0EB0900 		rsb	r0, r0, r9
 1518              	.LVL250:
 1519 007c 00B2     		sxth	r0, r0
 1520 007e BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1521              	.LVL251:
 1522              	.L157:
1203:uC-LIB/lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 1523              		.loc 1 1203 0
 1524 0082 B9F1000F 		cmp	r9, #0
 1525 0086 16D0     		beq	.L162
1207:uC-LIB/lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 1526              		.loc 1 1207 0
 1527 0088 3EB9     		cbnz	r6, .L158
1208:uC-LIB/lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 1528              		.loc 1 1208 0
 1529 008a BFB1     		cbz	r7, .L163
1211:uC-LIB/lib_str.c ****                 cmp_val = (CPU_INT16S)0 - (CPU_INT16S)char_2;   /* ... rtn neg p2_str_cmp_next val 
 1530              		.loc 1 1211 0
 1531 008c 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 1532              	.LVL252:
 1533 008e FFF7FEFF 		bl	ASCII_ToLower
 1534              	.LVL253:
1212:uC-LIB/lib_str.c ****             }
 1535              		.loc 1 1212 0
 1536 0092 4042     		negs	r0, r0
 1537              	.LVL254:
 1538 0094 00B2     		sxth	r0, r0
 1539 0096 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1540              	.LVL255:
 1541              	.L158:
1215:uC-LIB/lib_str.c ****             cmp_val = (CPU_INT16S)char_1;                       /* ... rtn pos p1_str_cmp_next val 
 1542              		.loc 1 1215 0
 1543 009a 3078     		ldrb	r0, [r6]	@ zero_extendqisi2
 1544              	.LVL256:
 1545 009c FFF7FEFF 		bl	ASCII_ToLower
 1546              	.LVL257:
1216:uC-LIB/lib_str.c ****         }
 1547              		.loc 1 1216 0
 1548 00a0 00B2     		sxth	r0, r0
 1549              	.LVL258:
 1550 00a2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1551              	.LVL259:
 1552              	.L159:
 1553              		.cfi_def_cfa_offset 0
 1554              		.cfi_restore 4
 1555              		.cfi_restore 5
 1556              		.cfi_restore 6
 1557              		.cfi_restore 7
 1558              		.cfi_restore 8
 1559              		.cfi_restore 9
 1560              		.cfi_restore 10
 1561              		.cfi_restore 14
1153:uC-LIB/lib_str.c ****     }
 1562              		.loc 1 1153 0
 1563 00a6 0020     		movs	r0, #0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 103


 1564              	.LVL260:
1222:uC-LIB/lib_str.c **** 
 1565              		.loc 1 1222 0
 1566 00a8 7047     		bx	lr
 1567              	.LVL261:
 1568              	.L160:
 1569              		.cfi_def_cfa_offset 32
 1570              		.cfi_offset 4, -32
 1571              		.cfi_offset 5, -28
 1572              		.cfi_offset 6, -24
 1573              		.cfi_offset 7, -20
 1574              		.cfi_offset 8, -16
 1575              		.cfi_offset 9, -12
 1576              		.cfi_offset 10, -8
 1577              		.cfi_offset 14, -4
1158:uC-LIB/lib_str.c ****         }
 1578              		.loc 1 1158 0
 1579 00aa 0020     		movs	r0, #0
 1580              	.LVL262:
 1581 00ac BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1582              	.LVL263:
 1583              	.L161:
1197:uC-LIB/lib_str.c ****     }
 1584              		.loc 1 1197 0
 1585 00b0 0020     		movs	r0, #0
 1586              	.LVL264:
 1587 00b2 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1588              	.LVL265:
 1589              	.L162:
1204:uC-LIB/lib_str.c **** 
 1590              		.loc 1 1204 0
 1591 00b6 0020     		movs	r0, #0
 1592              	.LVL266:
 1593 00b8 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1594              	.LVL267:
 1595              	.L163:
1209:uC-LIB/lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
 1596              		.loc 1 1209 0
 1597 00bc 0020     		movs	r0, #0
 1598              	.LVL268:
1222:uC-LIB/lib_str.c **** 
 1599              		.loc 1 1222 0
 1600 00be BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1601              		.cfi_endproc
 1602              	.LFE10:
 1603              		.size	Str_CmpIgnoreCase_N, .-Str_CmpIgnoreCase_N
 1604 00c2 00BF     		.section	.text.Str_CmpIgnoreCase,"ax",%progbits
 1605              		.align	2
 1606              		.global	Str_CmpIgnoreCase
 1607              		.thumb
 1608              		.thumb_func
 1609              		.type	Str_CmpIgnoreCase, %function
 1610              	Str_CmpIgnoreCase:
 1611              	.LFB9:
1028:uC-LIB/lib_str.c ****     CPU_INT16S  cmp_val;
 1612              		.loc 1 1028 0
 1613              		.cfi_startproc
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 104


 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 0, uses_anonymous_args = 0
 1616              	.LVL269:
 1617 0000 08B5     		push	{r3, lr}
 1618              		.cfi_def_cfa_offset 8
 1619              		.cfi_offset 3, -8
 1620              		.cfi_offset 14, -4
1032:uC-LIB/lib_str.c ****                                   p2_str,
 1621              		.loc 1 1032 0
 1622 0002 4FF0FF32 		mov	r2, #-1
 1623 0006 FFF7FEFF 		bl	Str_CmpIgnoreCase_N
 1624              	.LVL270:
1037:uC-LIB/lib_str.c **** 
 1625              		.loc 1 1037 0
 1626 000a 08BD     		pop	{r3, pc}
 1627              		.cfi_endproc
 1628              	.LFE9:
 1629              		.size	Str_CmpIgnoreCase, .-Str_CmpIgnoreCase
 1630              		.section	.text.Str_Char_N,"ax",%progbits
 1631              		.align	2
 1632              		.global	Str_Char_N
 1633              		.thumb
 1634              		.thumb_func
 1635              		.type	Str_Char_N, %function
 1636              	Str_Char_N:
 1637              	.LFB12:
1362:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_char;
 1638              		.loc 1 1362 0
 1639              		.cfi_startproc
 1640              		@ args = 0, pretend = 0, frame = 0
 1641              		@ frame_needed = 0, uses_anonymous_args = 0
 1642              		@ link register save eliminated.
 1643              	.LVL271:
1367:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1644              		.loc 1 1367 0
 1645 0000 A8B1     		cbz	r0, .L172
 1646 0002 0346     		mov	r3, r0
1371:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1647              		.loc 1 1371 0
 1648 0004 A9B1     		cbz	r1, .L173
1362:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_char;
 1649              		.loc 1 1362 0
 1650 0006 10B4     		push	{r4}
 1651              		.cfi_def_cfa_offset 4
 1652              		.cfi_offset 4, -4
 1653 0008 0020     		movs	r0, #0
 1654              	.LVL272:
 1655 000a 01E0     		b	.L169
 1656              	.LVL273:
 1657              	.L171:
1383:uC-LIB/lib_str.c ****         len_srch++;
 1658              		.loc 1 1383 0
 1659 000c 0133     		adds	r3, r3, #1
 1660              	.LVL274:
1384:uC-LIB/lib_str.c ****     }
 1661              		.loc 1 1384 0
 1662 000e 0130     		adds	r0, r0, #1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 105


 1663              	.LVL275:
 1664              	.L169:
1379:uC-LIB/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1665              		.loc 1 1379 0
 1666 0010 2BB1     		cbz	r3, .L170
1380:uC-LIB/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
 1667              		.loc 1 1380 0 discriminator 1
 1668 0012 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
1379:uC-LIB/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
 1669              		.loc 1 1379 0 discriminator 1
 1670 0014 1CB1     		cbz	r4, .L170
1380:uC-LIB/lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
 1671              		.loc 1 1380 0
 1672 0016 9442     		cmp	r4, r2
 1673 0018 01D0     		beq	.L170
1381:uC-LIB/lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
 1674              		.loc 1 1381 0
 1675 001a 8842     		cmp	r0, r1
 1676 001c F6D3     		bcc	.L171
 1677              	.L170:
1388:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1678              		.loc 1 1388 0
 1679 001e 53B1     		cbz	r3, .L174
1392:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
 1680              		.loc 1 1392 0
 1681 0020 8842     		cmp	r0, r1
 1682 0022 0AD2     		bcs	.L175
1396:uC-LIB/lib_str.c ****          return ((CPU_CHAR *)0);
 1683              		.loc 1 1396 0
 1684 0024 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1685              	.LVL276:
 1686 0026 8A42     		cmp	r2, r1
 1687 0028 09D0     		beq	.L176
1397:uC-LIB/lib_str.c ****     }
 1688              		.loc 1 1397 0
 1689 002a 0020     		movs	r0, #0
 1690              	.LVL277:
 1691 002c 08E0     		b	.L168
 1692              	.LVL278:
 1693              	.L172:
 1694              		.cfi_def_cfa_offset 0
 1695              		.cfi_restore 4
1368:uC-LIB/lib_str.c ****     }
 1696              		.loc 1 1368 0
 1697 002e 0020     		movs	r0, #0
 1698              	.LVL279:
1402:uC-LIB/lib_str.c **** 
 1699              		.loc 1 1402 0
 1700 0030 7047     		bx	lr
 1701              	.LVL280:
 1702              	.L173:
1372:uC-LIB/lib_str.c ****     }
 1703              		.loc 1 1372 0
 1704 0032 0020     		movs	r0, #0
 1705              	.LVL281:
 1706 0034 7047     		bx	lr
 1707              	.LVL282:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 106


 1708              	.L174:
 1709              		.cfi_def_cfa_offset 4
 1710              		.cfi_offset 4, -4
1389:uC-LIB/lib_str.c ****     }
 1711              		.loc 1 1389 0
 1712 0036 0020     		movs	r0, #0
 1713              	.LVL283:
 1714 0038 02E0     		b	.L168
 1715              	.LVL284:
 1716              	.L175:
1393:uC-LIB/lib_str.c ****     }
 1717              		.loc 1 1393 0
 1718 003a 0020     		movs	r0, #0
 1719              	.LVL285:
 1720 003c 00E0     		b	.L168
 1721              	.LVL286:
 1722              	.L176:
1401:uC-LIB/lib_str.c **** }
 1723              		.loc 1 1401 0
 1724 003e 1846     		mov	r0, r3
 1725              	.LVL287:
 1726              	.L168:
1402:uC-LIB/lib_str.c **** 
 1727              		.loc 1 1402 0
 1728 0040 10BC     		pop	{r4}
 1729              		.cfi_restore 4
 1730              		.cfi_def_cfa_offset 0
 1731 0042 7047     		bx	lr
 1732              		.cfi_endproc
 1733              	.LFE12:
 1734              		.size	Str_Char_N, .-Str_Char_N
 1735              		.section	.text.Str_Char,"ax",%progbits
 1736              		.align	2
 1737              		.global	Str_Char
 1738              		.thumb
 1739              		.thumb_func
 1740              		.type	Str_Char, %function
 1741              	Str_Char:
 1742              	.LFB11:
1280:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 1743              		.loc 1 1280 0
 1744              		.cfi_startproc
 1745              		@ args = 0, pretend = 0, frame = 0
 1746              		@ frame_needed = 0, uses_anonymous_args = 0
 1747              	.LVL288:
 1748 0000 08B5     		push	{r3, lr}
 1749              		.cfi_def_cfa_offset 8
 1750              		.cfi_offset 3, -8
 1751              		.cfi_offset 14, -4
1284:uC-LIB/lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL,
 1752              		.loc 1 1284 0
 1753 0002 0A46     		mov	r2, r1
 1754 0004 4FF0FF31 		mov	r1, #-1
 1755              	.LVL289:
 1756 0008 FFF7FEFF 		bl	Str_Char_N
 1757              	.LVL290:
1289:uC-LIB/lib_str.c **** 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 107


 1758              		.loc 1 1289 0
 1759 000c 08BD     		pop	{r3, pc}
 1760              		.cfi_endproc
 1761              	.LFE11:
 1762              		.size	Str_Char, .-Str_Char
 1763 000e 00BF     		.section	.text.Str_Char_Last_N,"ax",%progbits
 1764              		.align	2
 1765              		.global	Str_Char_Last_N
 1766              		.thumb
 1767              		.thumb_func
 1768              		.type	Str_Char_Last_N, %function
 1769              	Str_Char_Last_N:
 1770              	.LFB14:
1543:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_char;
 1771              		.loc 1 1543 0
 1772              		.cfi_startproc
 1773              		@ args = 0, pretend = 0, frame = 0
 1774              		@ frame_needed = 0, uses_anonymous_args = 0
 1775              	.LVL291:
1549:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1776              		.loc 1 1549 0
 1777 0000 A0B1     		cbz	r0, .L186
1543:uC-LIB/lib_str.c ****     const  CPU_CHAR    *pstr_char;
 1778              		.loc 1 1543 0
 1779 0002 38B5     		push	{r3, r4, r5, lr}
 1780              		.cfi_def_cfa_offset 16
 1781              		.cfi_offset 3, -16
 1782              		.cfi_offset 4, -12
 1783              		.cfi_offset 5, -8
 1784              		.cfi_offset 14, -4
 1785 0004 0446     		mov	r4, r0
1553:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1786              		.loc 1 1553 0
 1787 0006 99B1     		cbz	r1, .L187
 1788 0008 1546     		mov	r5, r2
 1789              	.LVL292:
1560:uC-LIB/lib_str.c ****     pstr_char   += str_len;
 1790              		.loc 1 1560 0
 1791 000a 0139     		subs	r1, r1, #1
 1792              	.LVL293:
 1793 000c FFF7FEFF 		bl	Str_Len_N
 1794              	.LVL294:
1563:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1795              		.loc 1 1563 0
 1796 0010 2018     		adds	r0, r4, r0
 1797              	.LVL295:
 1798 0012 01D1     		bne	.L183
 1799 0014 0EE0     		b	.L188
 1800              	.L185:
1569:uC-LIB/lib_str.c ****     }
 1801              		.loc 1 1569 0
 1802 0016 0138     		subs	r0, r0, #1
 1803              	.LVL296:
 1804              	.L183:
1567:uC-LIB/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 1805              		.loc 1 1567 0
 1806 0018 A042     		cmp	r0, r4
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 108


 1807 001a 02D0     		beq	.L184
1568:uC-LIB/lib_str.c ****         pstr_char--;
 1808              		.loc 1 1568 0 discriminator 1
 1809 001c 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
1567:uC-LIB/lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
 1810              		.loc 1 1567 0 discriminator 1
 1811 001e AB42     		cmp	r3, r5
 1812 0020 F9D1     		bne	.L185
 1813              	.L184:
1573:uC-LIB/lib_str.c ****          return ((CPU_CHAR *)0);
 1814              		.loc 1 1573 0
 1815 0022 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1816 0024 9D42     		cmp	r5, r3
 1817 0026 06D0     		beq	.L182
1574:uC-LIB/lib_str.c ****     }
 1818              		.loc 1 1574 0
 1819 0028 0020     		movs	r0, #0
 1820              	.LVL297:
 1821 002a 38BD     		pop	{r3, r4, r5, pc}
 1822              	.LVL298:
 1823              	.L186:
 1824              		.cfi_def_cfa_offset 0
 1825              		.cfi_restore 3
 1826              		.cfi_restore 4
 1827              		.cfi_restore 5
 1828              		.cfi_restore 14
1550:uC-LIB/lib_str.c ****     }
 1829              		.loc 1 1550 0
 1830 002c 0020     		movs	r0, #0
 1831              	.LVL299:
1579:uC-LIB/lib_str.c **** 
 1832              		.loc 1 1579 0
 1833 002e 7047     		bx	lr
 1834              	.LVL300:
 1835              	.L187:
 1836              		.cfi_def_cfa_offset 16
 1837              		.cfi_offset 3, -16
 1838              		.cfi_offset 4, -12
 1839              		.cfi_offset 5, -8
 1840              		.cfi_offset 14, -4
1554:uC-LIB/lib_str.c ****     }
 1841              		.loc 1 1554 0
 1842 0030 0020     		movs	r0, #0
 1843              	.LVL301:
 1844 0032 38BD     		pop	{r3, r4, r5, pc}
 1845              	.LVL302:
 1846              	.L188:
1564:uC-LIB/lib_str.c ****     }
 1847              		.loc 1 1564 0
 1848 0034 0020     		movs	r0, #0
 1849              	.LVL303:
 1850              	.L182:
1579:uC-LIB/lib_str.c **** 
 1851              		.loc 1 1579 0
 1852 0036 38BD     		pop	{r3, r4, r5, pc}
 1853              		.cfi_endproc
 1854              	.LFE14:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 109


 1855              		.size	Str_Char_Last_N, .-Str_Char_Last_N
 1856              		.section	.text.Str_Char_Last,"ax",%progbits
 1857              		.align	2
 1858              		.global	Str_Char_Last
 1859              		.thumb
 1860              		.thumb_func
 1861              		.type	Str_Char_Last, %function
 1862              	Str_Char_Last:
 1863              	.LFB13:
1459:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 1864              		.loc 1 1459 0
 1865              		.cfi_startproc
 1866              		@ args = 0, pretend = 0, frame = 0
 1867              		@ frame_needed = 0, uses_anonymous_args = 0
 1868              	.LVL304:
 1869 0000 08B5     		push	{r3, lr}
 1870              		.cfi_def_cfa_offset 8
 1871              		.cfi_offset 3, -8
 1872              		.cfi_offset 14, -4
1463:uC-LIB/lib_str.c ****                                DEF_INT_CPU_U_MAX_VAL,
 1873              		.loc 1 1463 0
 1874 0002 0A46     		mov	r2, r1
 1875 0004 4FF0FF31 		mov	r1, #-1
 1876              	.LVL305:
 1877 0008 FFF7FEFF 		bl	Str_Char_Last_N
 1878              	.LVL306:
1468:uC-LIB/lib_str.c **** 
 1879              		.loc 1 1468 0
 1880 000c 08BD     		pop	{r3, pc}
 1881              		.cfi_endproc
 1882              	.LFE13:
 1883              		.size	Str_Char_Last, .-Str_Char_Last
 1884 000e 00BF     		.section	.text.Str_Char_Replace_N,"ax",%progbits
 1885              		.align	2
 1886              		.global	Str_Char_Replace_N
 1887              		.thumb
 1888              		.thumb_func
 1889              		.type	Str_Char_Replace_N, %function
 1890              	Str_Char_Replace_N:
 1891              	.LFB16:
1687:uC-LIB/lib_str.c ****     CPU_CHAR    *pstr_char;
 1892              		.loc 1 1687 0
 1893              		.cfi_startproc
 1894              		@ args = 0, pretend = 0, frame = 0
 1895              		@ frame_needed = 0, uses_anonymous_args = 0
 1896              		@ link register save eliminated.
 1897              	.LVL307:
1692:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1898              		.loc 1 1692 0
 1899 0000 80B1     		cbz	r0, .L198
1687:uC-LIB/lib_str.c ****     CPU_CHAR    *pstr_char;
 1900              		.loc 1 1687 0
 1901 0002 70B4     		push	{r4, r5, r6}
 1902              		.cfi_def_cfa_offset 12
 1903              		.cfi_offset 4, -12
 1904              		.cfi_offset 5, -8
 1905              		.cfi_offset 6, -4
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 110


 1906 0004 0646     		mov	r6, r0
1696:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 1907              		.loc 1 1696 0
 1908 0006 7BB1     		cbz	r3, .L199
 1909 0008 0446     		mov	r4, r0
 1910 000a 04E0     		b	.L195
 1911              	.LVL308:
 1912              	.L197:
1707:uC-LIB/lib_str.c ****             *pstr_char  = char_replace;                         /* Replace char if srch char is fou
 1913              		.loc 1 1707 0
 1914 000c 8D42     		cmp	r5, r1
 1915 000e 00D1     		bne	.L196
1708:uC-LIB/lib_str.c ****         }
 1916              		.loc 1 1708 0
 1917 0010 2270     		strb	r2, [r4]
 1918              	.L196:
1711:uC-LIB/lib_str.c ****         len--;
 1919              		.loc 1 1711 0
 1920 0012 0134     		adds	r4, r4, #1
 1921              	.LVL309:
1712:uC-LIB/lib_str.c ****     }
 1922              		.loc 1 1712 0
 1923 0014 013B     		subs	r3, r3, #1
 1924              	.LVL310:
 1925              	.L195:
1703:uC-LIB/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 1926              		.loc 1 1703 0
 1927 0016 4CB1     		cbz	r4, .L200
1704:uC-LIB/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 1928              		.loc 1 1704 0 discriminator 1
 1929 0018 2578     		ldrb	r5, [r4]	@ zero_extendqisi2
1703:uC-LIB/lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
 1930              		.loc 1 1703 0 discriminator 1
 1931 001a 4DB1     		cbz	r5, .L201
1704:uC-LIB/lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
 1932              		.loc 1 1704 0
 1933 001c 002B     		cmp	r3, #0
 1934 001e F5D1     		bne	.L197
1715:uC-LIB/lib_str.c **** }
 1935              		.loc 1 1715 0
 1936 0020 3046     		mov	r0, r6
 1937              	.LVL311:
 1938 0022 06E0     		b	.L194
 1939              	.LVL312:
 1940              	.L198:
 1941              		.cfi_def_cfa_offset 0
 1942              		.cfi_restore 4
 1943              		.cfi_restore 5
 1944              		.cfi_restore 6
1693:uC-LIB/lib_str.c ****     }
 1945              		.loc 1 1693 0
 1946 0024 0020     		movs	r0, #0
 1947              	.LVL313:
1716:uC-LIB/lib_str.c **** 
 1948              		.loc 1 1716 0
 1949 0026 7047     		bx	lr
 1950              	.LVL314:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 111


 1951              	.L199:
 1952              		.cfi_def_cfa_offset 12
 1953              		.cfi_offset 4, -12
 1954              		.cfi_offset 5, -8
 1955              		.cfi_offset 6, -4
1697:uC-LIB/lib_str.c ****     }
 1956              		.loc 1 1697 0
 1957 0028 0020     		movs	r0, #0
 1958              	.LVL315:
 1959 002a 02E0     		b	.L194
 1960              	.LVL316:
 1961              	.L200:
1715:uC-LIB/lib_str.c **** }
 1962              		.loc 1 1715 0
 1963 002c 3046     		mov	r0, r6
 1964              	.LVL317:
 1965 002e 00E0     		b	.L194
 1966              	.LVL318:
 1967              	.L201:
 1968 0030 3046     		mov	r0, r6
 1969              	.LVL319:
 1970              	.L194:
1716:uC-LIB/lib_str.c **** 
 1971              		.loc 1 1716 0
 1972 0032 70BC     		pop	{r4, r5, r6}
 1973              		.cfi_restore 6
 1974              		.cfi_restore 5
 1975              		.cfi_restore 4
 1976              		.cfi_def_cfa_offset 0
 1977              	.LVL320:
 1978 0034 7047     		bx	lr
 1979              		.cfi_endproc
 1980              	.LFE16:
 1981              		.size	Str_Char_Replace_N, .-Str_Char_Replace_N
 1982 0036 00BF     		.section	.text.Str_Char_Replace,"ax",%progbits
 1983              		.align	2
 1984              		.global	Str_Char_Replace
 1985              		.thumb
 1986              		.thumb_func
 1987              		.type	Str_Char_Replace, %function
 1988              	Str_Char_Replace:
 1989              	.LFB15:
1623:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 1990              		.loc 1 1623 0
 1991              		.cfi_startproc
 1992              		@ args = 0, pretend = 0, frame = 0
 1993              		@ frame_needed = 0, uses_anonymous_args = 0
 1994              	.LVL321:
 1995 0000 08B5     		push	{r3, lr}
 1996              		.cfi_def_cfa_offset 8
 1997              		.cfi_offset 3, -8
 1998              		.cfi_offset 14, -4
1627:uC-LIB/lib_str.c ****                                   char_srch,
 1999              		.loc 1 1627 0
 2000 0002 4FF0FF33 		mov	r3, #-1
 2001 0006 FFF7FEFF 		bl	Str_Char_Replace_N
 2002              	.LVL322:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 112


1633:uC-LIB/lib_str.c **** 
 2003              		.loc 1 1633 0
 2004 000a 08BD     		pop	{r3, pc}
 2005              		.cfi_endproc
 2006              	.LFE15:
 2007              		.size	Str_Char_Replace, .-Str_Char_Replace
 2008              		.section	.text.Str_Str_N,"ax",%progbits
 2009              		.align	2
 2010              		.global	Str_Str_N
 2011              		.thumb
 2012              		.thumb_func
 2013              		.type	Str_Str_N, %function
 2014              	Str_Str_N:
 2015              	.LFB18:
1868:uC-LIB/lib_str.c ****            CPU_SIZE_T    str_len;
 2016              		.loc 1 1868 0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 2020              	.LVL323:
1880:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 2021              		.loc 1 1880 0
 2022 0000 A0B3     		cbz	r0, .L211
1868:uC-LIB/lib_str.c ****            CPU_SIZE_T    str_len;
 2023              		.loc 1 1868 0
 2024 0002 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 2025              		.cfi_def_cfa_offset 32
 2026              		.cfi_offset 3, -32
 2027              		.cfi_offset 4, -28
 2028              		.cfi_offset 5, -24
 2029              		.cfi_offset 6, -20
 2030              		.cfi_offset 7, -16
 2031              		.cfi_offset 8, -12
 2032              		.cfi_offset 9, -8
 2033              		.cfi_offset 14, -4
 2034 0006 0746     		mov	r7, r0
1883:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 2035              		.loc 1 1883 0
 2036 0008 91B3     		cbz	r1, .L212
1887:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 2037              		.loc 1 1887 0
 2038 000a A2B3     		cbz	r2, .L213
1893:uC-LIB/lib_str.c **** 
 2039              		.loc 1 1893 0
 2040 000c B2F1FF3F 		cmp	r2, #-1
 2041 0010 01D0     		beq	.L214
1893:uC-LIB/lib_str.c **** 
 2042              		.loc 1 1893 0 is_stmt 0 discriminator 1
 2043 0012 541C     		adds	r4, r2, #1
 2044 0014 01E0     		b	.L207
 2045              	.L214:
1893:uC-LIB/lib_str.c **** 
 2046              		.loc 1 1893 0
 2047 0016 4FF0FF34 		mov	r4, #-1
 2048              	.L207:
 2049 001a 0E46     		mov	r6, r1
 2050              	.LVL324:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 113


1895:uC-LIB/lib_str.c ****     str_len_srch = Str_Len_N(pstr_srch, len_max_srch);
 2051              		.loc 1 1895 0 is_stmt 1
 2052 001c 1146     		mov	r1, r2
 2053              	.LVL325:
 2054 001e 3846     		mov	r0, r7
 2055              	.LVL326:
 2056 0020 FFF7FEFF 		bl	Str_Len_N
 2057              	.LVL327:
 2058 0024 8046     		mov	r8, r0
 2059              	.LVL328:
1896:uC-LIB/lib_str.c ****     if (str_len_srch < 1) {                                     /* Rtn ptr to str if srch str len =
 2060              		.loc 1 1896 0
 2061 0026 2146     		mov	r1, r4
 2062 0028 3046     		mov	r0, r6
 2063              	.LVL329:
 2064 002a FFF7FEFF 		bl	Str_Len_N
 2065              	.LVL330:
1897:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)pstr);
 2066              		.loc 1 1897 0
 2067 002e 8146     		mov	r9, r0
 2068 0030 20B3     		cbz	r0, .L215
1900:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 2069              		.loc 1 1900 0
 2070 0032 8045     		cmp	r8, r0
 2071 0034 25D3     		bcc	.L216
 2072              	.LVL331:
1905:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 2073              		.loc 1 1905 0
 2074 0036 17EB080F 		cmn	r7, r8
 2075 003a 25D0     		beq	.L217
 2076              	.LVL332:
1909:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 2077              		.loc 1 1909 0
 2078 003c C642     		cmn	r6, r0
 2079 003e 26D0     		beq	.L218
1914:uC-LIB/lib_str.c ****     srch_ix   = 0u;
 2080              		.loc 1 1914 0
 2081 0040 C0EB0808 		rsb	r8, r0, r8
 2082              	.LVL333:
1915:uC-LIB/lib_str.c ****     srch_done = DEF_NO;
 2083              		.loc 1 1915 0
 2084 0044 0024     		movs	r4, #0
 2085              	.LVL334:
 2086              	.L210:
1919:uC-LIB/lib_str.c ****         srch_cmp     =  Str_Cmp_N(pstr_srch_ix, pstr_srch, str_len_srch);
 2087              		.loc 1 1919 0
 2088 0046 3D19     		adds	r5, r7, r4
 2089              	.LVL335:
1920:uC-LIB/lib_str.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
 2090              		.loc 1 1920 0
 2091 0048 4A46     		mov	r2, r9
 2092 004a 3146     		mov	r1, r6
 2093 004c 2846     		mov	r0, r5
 2094 004e FFF7FEFF 		bl	Str_Cmp_N
 2095              	.LVL336:
1921:uC-LIB/lib_str.c ****         srch_ix++;
 2096              		.loc 1 1921 0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 114


 2097 0052 0246     		mov	r2, r0
 2098 0054 08B9     		cbnz	r0, .L219
 2099 0056 0123     		movs	r3, #1
 2100 0058 00E0     		b	.L208
 2101              	.L219:
 2102 005a 0023     		movs	r3, #0
 2103              	.L208:
 2104              	.LVL337:
1922:uC-LIB/lib_str.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
 2105              		.loc 1 1922 0 discriminator 4
 2106 005c 0134     		adds	r4, r4, #1
 2107              	.LVL338:
1923:uC-LIB/lib_str.c **** 
 2108              		.loc 1 1923 0 discriminator 4
 2109 005e 0BB9     		cbnz	r3, .L209
1923:uC-LIB/lib_str.c **** 
 2110              		.loc 1 1923 0 is_stmt 0 discriminator 1
 2111 0060 A045     		cmp	r8, r4
 2112 0062 F0D2     		bcs	.L210
 2113              	.L209:
1926:uC-LIB/lib_str.c ****         return ((CPU_CHAR *)0);
 2114              		.loc 1 1926 0 is_stmt 1
 2115 0064 B2B1     		cbz	r2, .L220
1927:uC-LIB/lib_str.c ****     }
 2116              		.loc 1 1927 0
 2117 0066 0020     		movs	r0, #0
 2118              	.LVL339:
 2119 0068 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2120              	.LVL340:
 2121              	.L211:
 2122              		.cfi_def_cfa_offset 0
 2123              		.cfi_restore 3
 2124              		.cfi_restore 4
 2125              		.cfi_restore 5
 2126              		.cfi_restore 6
 2127              		.cfi_restore 7
 2128              		.cfi_restore 8
 2129              		.cfi_restore 9
 2130              		.cfi_restore 14
1881:uC-LIB/lib_str.c ****     }
 2131              		.loc 1 1881 0
 2132 006c 0020     		movs	r0, #0
 2133              	.LVL341:
1931:uC-LIB/lib_str.c **** 
 2134              		.loc 1 1931 0
 2135 006e 7047     		bx	lr
 2136              	.LVL342:
 2137              	.L212:
 2138              		.cfi_def_cfa_offset 32
 2139              		.cfi_offset 3, -32
 2140              		.cfi_offset 4, -28
 2141              		.cfi_offset 5, -24
 2142              		.cfi_offset 6, -20
 2143              		.cfi_offset 7, -16
 2144              		.cfi_offset 8, -12
 2145              		.cfi_offset 9, -8
 2146              		.cfi_offset 14, -4
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 115


1884:uC-LIB/lib_str.c ****     }
 2147              		.loc 1 1884 0
 2148 0070 0020     		movs	r0, #0
 2149              	.LVL343:
 2150 0072 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2151              	.LVL344:
 2152              	.L213:
1888:uC-LIB/lib_str.c ****     }
 2153              		.loc 1 1888 0
 2154 0076 0020     		movs	r0, #0
 2155              	.LVL345:
 2156 0078 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2157              	.LVL346:
 2158              	.L215:
1898:uC-LIB/lib_str.c ****     }
 2159              		.loc 1 1898 0
 2160 007c 3846     		mov	r0, r7
 2161              	.LVL347:
 2162 007e BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2163              	.LVL348:
 2164              	.L216:
1901:uC-LIB/lib_str.c ****     }
 2165              		.loc 1 1901 0
 2166 0082 0020     		movs	r0, #0
 2167              	.LVL349:
 2168 0084 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2169              	.LVL350:
 2170              	.L217:
1906:uC-LIB/lib_str.c ****     }
 2171              		.loc 1 1906 0
 2172 0088 0020     		movs	r0, #0
 2173              	.LVL351:
 2174 008a BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2175              	.LVL352:
 2176              	.L218:
1910:uC-LIB/lib_str.c ****     }
 2177              		.loc 1 1910 0
 2178 008e 0020     		movs	r0, #0
 2179              	.LVL353:
 2180 0090 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2181              	.LVL354:
 2182              	.L220:
1930:uC-LIB/lib_str.c **** }
 2183              		.loc 1 1930 0
 2184 0094 2846     		mov	r0, r5
 2185              	.LVL355:
1931:uC-LIB/lib_str.c **** 
 2186              		.loc 1 1931 0
 2187 0096 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 2188              		.cfi_endproc
 2189              	.LFE18:
 2190              		.size	Str_Str_N, .-Str_Str_N
 2191 009a 00BF     		.section	.text.Str_Str,"ax",%progbits
 2192              		.align	2
 2193              		.global	Str_Str
 2194              		.thumb
 2195              		.thumb_func
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 116


 2196              		.type	Str_Str, %function
 2197              	Str_Str:
 2198              	.LFB17:
1782:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_rtn;
 2199              		.loc 1 1782 0
 2200              		.cfi_startproc
 2201              		@ args = 0, pretend = 0, frame = 0
 2202              		@ frame_needed = 0, uses_anonymous_args = 0
 2203              	.LVL356:
 2204 0000 08B5     		push	{r3, lr}
 2205              		.cfi_def_cfa_offset 8
 2206              		.cfi_offset 3, -8
 2207              		.cfi_offset 14, -4
1786:uC-LIB/lib_str.c ****                          pstr_srch,
 2208              		.loc 1 1786 0
 2209 0002 4FF0FF32 		mov	r2, #-1
 2210 0006 FFF7FEFF 		bl	Str_Str_N
 2211              	.LVL357:
1791:uC-LIB/lib_str.c **** 
 2212              		.loc 1 1791 0
 2213 000a 08BD     		pop	{r3, pc}
 2214              		.cfi_endproc
 2215              	.LFE17:
 2216              		.size	Str_Str, .-Str_Str
 2217              		.section	.text.Str_FmtNbr_Int32U,"ax",%progbits
 2218              		.align	2
 2219              		.global	Str_FmtNbr_Int32U
 2220              		.thumb
 2221              		.thumb_func
 2222              		.type	Str_FmtNbr_Int32U, %function
 2223              	Str_FmtNbr_Int32U:
 2224              	.LFB19:
2066:uC-LIB/lib_str.c ****     CPU_CHAR  *pstr_fmt;
 2225              		.loc 1 2066 0
 2226              		.cfi_startproc
 2227              		@ args = 12, pretend = 0, frame = 0
 2228              		@ frame_needed = 0, uses_anonymous_args = 0
 2229              	.LVL358:
 2230 0000 10B5     		push	{r4, lr}
 2231              		.cfi_def_cfa_offset 8
 2232              		.cfi_offset 4, -8
 2233              		.cfi_offset 14, -4
 2234 0002 84B0     		sub	sp, sp, #16
 2235              		.cfi_def_cfa_offset 24
2070:uC-LIB/lib_str.c ****                                 nbr_dig,
 2236              		.loc 1 2070 0
 2237 0004 089C     		ldr	r4, [sp, #32]
 2238 0006 0394     		str	r4, [sp, #12]
 2239 0008 9DF81C40 		ldrb	r4, [sp, #28]	@ zero_extendqisi2
 2240 000c 0294     		str	r4, [sp, #8]
 2241 000e 9DF81840 		ldrb	r4, [sp, #24]	@ zero_extendqisi2
 2242 0012 0194     		str	r4, [sp, #4]
 2243 0014 0093     		str	r3, [sp]
 2244 0016 0023     		movs	r3, #0
 2245              	.LVL359:
 2246 0018 FFF7FEFF 		bl	Str_FmtNbr_Int32
 2247              	.LVL360:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 117


2080:uC-LIB/lib_str.c **** 
 2248              		.loc 1 2080 0
 2249 001c 04B0     		add	sp, sp, #16
 2250              		.cfi_def_cfa_offset 8
 2251              		@ sp needed
 2252 001e 10BD     		pop	{r4, pc}
 2253              		.cfi_endproc
 2254              	.LFE19:
 2255              		.size	Str_FmtNbr_Int32U, .-Str_FmtNbr_Int32U
 2256              		.section	.text.Str_FmtNbr_Int32S,"ax",%progbits
 2257              		.align	2
 2258              		.global	Str_FmtNbr_Int32S
 2259              		.thumb
 2260              		.thumb_func
 2261              		.type	Str_FmtNbr_Int32S, %function
 2262              	Str_FmtNbr_Int32S:
 2263              	.LFB20:
2283:uC-LIB/lib_str.c ****     CPU_CHAR     *pstr_fmt;
 2264              		.loc 1 2283 0
 2265              		.cfi_startproc
 2266              		@ args = 12, pretend = 0, frame = 0
 2267              		@ frame_needed = 0, uses_anonymous_args = 0
 2268              	.LVL361:
 2269 0000 30B5     		push	{r4, r5, lr}
 2270              		.cfi_def_cfa_offset 12
 2271              		.cfi_offset 4, -12
 2272              		.cfi_offset 5, -8
 2273              		.cfi_offset 14, -4
 2274 0002 85B0     		sub	sp, sp, #20
 2275              		.cfi_def_cfa_offset 32
2289:uC-LIB/lib_str.c ****         nbr_fmt = -nbr;                                         /* ... negate nbr.                 
 2276              		.loc 1 2289 0
 2277 0004 0028     		cmp	r0, #0
 2278 0006 02DA     		bge	.L228
2290:uC-LIB/lib_str.c ****         nbr_neg =  DEF_YES;
 2279              		.loc 1 2290 0
 2280 0008 4042     		negs	r0, r0
 2281              	.LVL362:
2291:uC-LIB/lib_str.c ****     } else {
 2282              		.loc 1 2291 0
 2283 000a 0125     		movs	r5, #1
 2284 000c 00E0     		b	.L227
 2285              	.LVL363:
 2286              	.L228:
2294:uC-LIB/lib_str.c ****     }
 2287              		.loc 1 2294 0
 2288 000e 0025     		movs	r5, #0
 2289              	.LVL364:
 2290              	.L227:
2297:uC-LIB/lib_str.c ****                                             nbr_dig,
 2291              		.loc 1 2297 0
 2292 0010 0A9C     		ldr	r4, [sp, #40]
 2293 0012 0394     		str	r4, [sp, #12]
 2294 0014 9DF82440 		ldrb	r4, [sp, #36]	@ zero_extendqisi2
 2295 0018 0294     		str	r4, [sp, #8]
 2296 001a 9DF82040 		ldrb	r4, [sp, #32]	@ zero_extendqisi2
 2297 001e 0194     		str	r4, [sp, #4]
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 118


 2298 0020 0093     		str	r3, [sp]
 2299 0022 2B46     		mov	r3, r5
 2300              	.LVL365:
 2301 0024 FFF7FEFF 		bl	Str_FmtNbr_Int32
 2302              	.LVL366:
2307:uC-LIB/lib_str.c **** 
 2303              		.loc 1 2307 0
 2304 0028 05B0     		add	sp, sp, #20
 2305              		.cfi_def_cfa_offset 12
 2306              		@ sp needed
 2307 002a 30BD     		pop	{r4, r5, pc}
 2308              		.cfi_endproc
 2309              	.LFE20:
 2310              		.size	Str_FmtNbr_Int32S, .-Str_FmtNbr_Int32S
 2311              		.section	.text.Str_ParseNbr_Int32U,"ax",%progbits
 2312              		.align	2
 2313              		.global	Str_ParseNbr_Int32U
 2314              		.thumb
 2315              		.thumb_func
 2316              		.type	Str_ParseNbr_Int32U, %function
 2317              	Str_ParseNbr_Int32U:
 2318              	.LFB21:
3002:uC-LIB/lib_str.c ****     CPU_INT32U  nbr;
 2319              		.loc 1 3002 0
 2320              		.cfi_startproc
 2321              		@ args = 0, pretend = 0, frame = 0
 2322              		@ frame_needed = 0, uses_anonymous_args = 0
 2323              	.LVL367:
 2324 0000 00B5     		push	{lr}
 2325              		.cfi_def_cfa_offset 4
 2326              		.cfi_offset 14, -4
 2327 0002 83B0     		sub	sp, sp, #12
 2328              		.cfi_def_cfa_offset 16
3006:uC-LIB/lib_str.c ****                                             pstr_next,
 2329              		.loc 1 3006 0
 2330 0004 0023     		movs	r3, #0
 2331 0006 0093     		str	r3, [sp]
 2332 0008 FFF7FEFF 		bl	Str_ParseNbr_Int32
 2333              	.LVL368:
3013:uC-LIB/lib_str.c **** 
 2334              		.loc 1 3013 0
 2335 000c 03B0     		add	sp, sp, #12
 2336              		.cfi_def_cfa_offset 4
 2337              		@ sp needed
 2338 000e 5DF804FB 		ldr	pc, [sp], #4
 2339              		.cfi_endproc
 2340              	.LFE21:
 2341              		.size	Str_ParseNbr_Int32U, .-Str_ParseNbr_Int32U
 2342 0012 00BF     		.section	.text.Str_ParseNbr_Int32S,"ax",%progbits
 2343              		.align	2
 2344              		.global	Str_ParseNbr_Int32S
 2345              		.thumb
 2346              		.thumb_func
 2347              		.type	Str_ParseNbr_Int32S, %function
 2348              	Str_ParseNbr_Int32S:
 2349              	.LFB22:
3219:uC-LIB/lib_str.c ****     CPU_INT32S   nbr;
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 119


 2350              		.loc 1 3219 0
 2351              		.cfi_startproc
 2352              		@ args = 0, pretend = 0, frame = 8
 2353              		@ frame_needed = 0, uses_anonymous_args = 0
 2354              	.LVL369:
 2355 0000 00B5     		push	{lr}
 2356              		.cfi_def_cfa_offset 4
 2357              		.cfi_offset 14, -4
 2358 0002 85B0     		sub	sp, sp, #20
 2359              		.cfi_def_cfa_offset 24
3225:uC-LIB/lib_str.c ****                                  pstr_next,
 2360              		.loc 1 3225 0
 2361 0004 0DF10F03 		add	r3, sp, #15
 2362 0008 0093     		str	r3, [sp]
 2363 000a 0123     		movs	r3, #1
 2364 000c FFF7FEFF 		bl	Str_ParseNbr_Int32
 2365              	.LVL370:
3231:uC-LIB/lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U) DEF_INT_32S_MAX_VAL)          ?  (CPU_INT32S)DEF_INT_32S_MAX_
 2366              		.loc 1 3231 0
 2367 0010 9DF80F20 		ldrb	r2, [sp, #15]	@ zero_extendqisi2
 2368 0014 22B9     		cbnz	r2, .L233
3233:uC-LIB/lib_str.c ****     } else {
 2369              		.loc 1 3233 0
 2370 0016 0028     		cmp	r0, #0
 2371 0018 08DA     		bge	.L234
 2372 001a 6FF00040 		mvn	r0, #-2147483648
 2373              	.LVL371:
 2374 001e 05E0     		b	.L234
 2375              	.LVL372:
 2376              	.L233:
3236:uC-LIB/lib_str.c ****     }
 2377              		.loc 1 3236 0
 2378 0020 0028     		cmp	r0, #0
 2379 0022 01DB     		blt	.L235
3236:uC-LIB/lib_str.c ****     }
 2380              		.loc 1 3236 0 is_stmt 0 discriminator 1
 2381 0024 4042     		negs	r0, r0
 2382              	.LVL373:
 2383 0026 01E0     		b	.L234
 2384              	.LVL374:
 2385              	.L235:
3236:uC-LIB/lib_str.c ****     }
 2386              		.loc 1 3236 0
 2387 0028 4FF00040 		mov	r0, #-2147483648
 2388              	.LVL375:
 2389              	.L234:
3240:uC-LIB/lib_str.c **** 
 2390              		.loc 1 3240 0 is_stmt 1
 2391 002c 05B0     		add	sp, sp, #20
 2392              		.cfi_def_cfa_offset 4
 2393              		@ sp needed
 2394 002e 5DF804FB 		ldr	pc, [sp], #4
 2395              		.cfi_endproc
 2396              	.LFE22:
 2397              		.size	Str_ParseNbr_Int32S, .-Str_ParseNbr_Int32S
 2398 0032 00BF     		.section	.rodata
 2399              		.align	2
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 120


 2400              		.set	.LANCHOR0,. + 0
 2401              		.type	Str_MultOvfThTbl_Int32U, %object
 2402              		.size	Str_MultOvfThTbl_Int32U, 148
 2403              	Str_MultOvfThTbl_Int32U:
 2404 0000 FFFFFFFF 		.word	-1
 2405 0004 FFFFFFFF 		.word	-1
 2406 0008 FFFFFF7F 		.word	2147483647
 2407 000c 55555555 		.word	1431655765
 2408 0010 FFFFFF3F 		.word	1073741823
 2409 0014 33333333 		.word	858993459
 2410 0018 AAAAAA2A 		.word	715827882
 2411 001c 24499224 		.word	613566756
 2412 0020 FFFFFF1F 		.word	536870911
 2413 0024 1CC7711C 		.word	477218588
 2414 0028 99999919 		.word	429496729
 2415 002c 74D14517 		.word	390451572
 2416 0030 55555515 		.word	357913941
 2417 0034 133BB113 		.word	330382099
 2418 0038 92244912 		.word	306783378
 2419 003c 11111111 		.word	286331153
 2420 0040 FFFFFF0F 		.word	268435455
 2421 0044 0F0F0F0F 		.word	252645135
 2422 0048 8EE3380E 		.word	238609294
 2423 004c 5E43790D 		.word	226050910
 2424 0050 CCCCCC0C 		.word	214748364
 2425 0054 0CC3300C 		.word	204522252
 2426 0058 BAE8A20B 		.word	195225786
 2427 005c 2C64210B 		.word	186737708
 2428 0060 AAAAAA0A 		.word	178956970
 2429 0064 A3703D0A 		.word	171798691
 2430 0068 899DD809 		.word	165191049
 2431 006c 5E427B09 		.word	159072862
 2432 0070 49922409 		.word	153391689
 2433 0074 B0DCD308 		.word	148102320
 2434 0078 88888808 		.word	143165576
 2435 007c 84104208 		.word	138547332
 2436 0080 FFFFFF07 		.word	134217727
 2437 0084 7CF0C107 		.word	130150524
 2438 0088 87878707 		.word	126322567
 2439 008c 07755007 		.word	122713351
 2440 0090 C7711C07 		.word	119304647
 2441              		.text
 2442              	.Letext0:
 2443              		.file 2 ".\\uC-CPU\\ARM-Cortex-M3\\GNU/cpu.h"
 2444              		.file 3 ".\\uC-LIB/lib_ascii.h"
 2445              		.section	.debug_info,"",%progbits
 2446              	.Ldebug_info0:
 2447 0000 D3100000 		.4byte	0x10d3
 2448 0004 0400     		.2byte	0x4
 2449 0006 00000000 		.4byte	.Ldebug_abbrev0
 2450 000a 04       		.byte	0x4
 2451 000b 01       		.uleb128 0x1
 2452 000c BA010000 		.4byte	.LASF130
 2453 0010 0C       		.byte	0xc
 2454 0011 73000000 		.4byte	.LASF131
 2455 0015 73040000 		.4byte	.LASF132
 2456 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 121


 2457 001d 00000000 		.4byte	0
 2458 0021 00000000 		.4byte	.Ldebug_line0
 2459 0025 02       		.uleb128 0x2
 2460 0026 04       		.byte	0x4
 2461 0027 07       		.byte	0x7
 2462 0028 97000000 		.4byte	.LASF0
 2463 002c 03       		.uleb128 0x3
 2464 002d 84020000 		.4byte	.LASF2
 2465 0031 02       		.byte	0x2
 2466 0032 76       		.byte	0x76
 2467 0033 37000000 		.4byte	0x37
 2468 0037 02       		.uleb128 0x2
 2469 0038 01       		.byte	0x1
 2470 0039 08       		.byte	0x8
 2471 003a EC020000 		.4byte	.LASF1
 2472 003e 03       		.uleb128 0x3
 2473 003f 74050000 		.4byte	.LASF3
 2474 0043 02       		.byte	0x2
 2475 0044 77       		.byte	0x77
 2476 0045 49000000 		.4byte	0x49
 2477 0049 02       		.uleb128 0x2
 2478 004a 01       		.byte	0x1
 2479 004b 08       		.byte	0x8
 2480 004c 8B050000 		.4byte	.LASF4
 2481 0050 03       		.uleb128 0x3
 2482 0051 9B010000 		.4byte	.LASF5
 2483 0055 02       		.byte	0x2
 2484 0056 78       		.byte	0x78
 2485 0057 49000000 		.4byte	0x49
 2486 005b 02       		.uleb128 0x2
 2487 005c 01       		.byte	0x1
 2488 005d 06       		.byte	0x6
 2489 005e 6A060000 		.4byte	.LASF6
 2490 0062 02       		.uleb128 0x2
 2491 0063 02       		.byte	0x2
 2492 0064 07       		.byte	0x7
 2493 0065 76060000 		.4byte	.LASF7
 2494 0069 03       		.uleb128 0x3
 2495 006a 6A030000 		.4byte	.LASF8
 2496 006e 02       		.byte	0x2
 2497 006f 7B       		.byte	0x7b
 2498 0070 74000000 		.4byte	0x74
 2499 0074 02       		.uleb128 0x2
 2500 0075 02       		.byte	0x2
 2501 0076 05       		.byte	0x5
 2502 0077 69040000 		.4byte	.LASF9
 2503 007b 03       		.uleb128 0x3
 2504 007c A6010000 		.4byte	.LASF10
 2505 0080 02       		.byte	0x2
 2506 0081 7C       		.byte	0x7c
 2507 0082 25000000 		.4byte	0x25
 2508 0086 03       		.uleb128 0x3
 2509 0087 8C000000 		.4byte	.LASF11
 2510 008b 02       		.byte	0x2
 2511 008c 7D       		.byte	0x7d
 2512 008d 91000000 		.4byte	0x91
 2513 0091 04       		.uleb128 0x4
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 122


 2514 0092 04       		.byte	0x4
 2515 0093 05       		.byte	0x5
 2516 0094 696E7400 		.ascii	"int\000"
 2517 0098 02       		.uleb128 0x2
 2518 0099 08       		.byte	0x8
 2519 009a 07       		.byte	0x7
 2520 009b 63010000 		.4byte	.LASF12
 2521 009f 02       		.uleb128 0x2
 2522 00a0 08       		.byte	0x8
 2523 00a1 05       		.byte	0x5
 2524 00a2 31030000 		.4byte	.LASF13
 2525 00a6 02       		.uleb128 0x2
 2526 00a7 04       		.byte	0x4
 2527 00a8 04       		.byte	0x4
 2528 00a9 5D010000 		.4byte	.LASF14
 2529 00ad 02       		.uleb128 0x2
 2530 00ae 08       		.byte	0x8
 2531 00af 04       		.byte	0x4
 2532 00b0 A0060000 		.4byte	.LASF15
 2533 00b4 03       		.uleb128 0x3
 2534 00b5 63050000 		.4byte	.LASF16
 2535 00b9 02       		.byte	0x2
 2536 00ba B5       		.byte	0xb5
 2537 00bb 7B000000 		.4byte	0x7b
 2538 00bf 03       		.uleb128 0x3
 2539 00c0 B2020000 		.4byte	.LASF17
 2540 00c4 02       		.byte	0x2
 2541 00c5 BE       		.byte	0xbe
 2542 00c6 7B000000 		.4byte	0x7b
 2543 00ca 03       		.uleb128 0x3
 2544 00cb 19030000 		.4byte	.LASF18
 2545 00cf 02       		.byte	0x2
 2546 00d0 C7       		.byte	0xc7
 2547 00d1 B4000000 		.4byte	0xb4
 2548 00d5 02       		.uleb128 0x2
 2549 00d6 04       		.byte	0x4
 2550 00d7 05       		.byte	0x5
 2551 00d8 C4040000 		.4byte	.LASF19
 2552 00dc 02       		.uleb128 0x2
 2553 00dd 04       		.byte	0x4
 2554 00de 07       		.byte	0x7
 2555 00df 37050000 		.4byte	.LASF20
 2556 00e3 02       		.uleb128 0x2
 2557 00e4 08       		.byte	0x8
 2558 00e5 04       		.byte	0x4
 2559 00e6 06040000 		.4byte	.LASF21
 2560 00ea 02       		.uleb128 0x2
 2561 00eb 04       		.byte	0x4
 2562 00ec 07       		.byte	0x7
 2563 00ed 2E050000 		.4byte	.LASF22
 2564 00f1 05       		.uleb128 0x5
 2565 00f2 75030000 		.4byte	.LASF45
 2566 00f6 01       		.byte	0x1
 2567 00f7 900D     		.2byte	0xd90
 2568 00f9 A6020000 		.4byte	0x2a6
 2569 00fd 00000000 		.4byte	.LFB23
 2570 0101 A6010000 		.4byte	.LFE23-.LFB23
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 123


 2571 0105 01       		.uleb128 0x1
 2572 0106 9C       		.byte	0x9c
 2573 0107 A6020000 		.4byte	0x2a6
 2574 010b 06       		.uleb128 0x6
 2575 010c 6E627200 		.ascii	"nbr\000"
 2576 0110 01       		.byte	0x1
 2577 0111 900D     		.2byte	0xd90
 2578 0113 7B000000 		.4byte	0x7b
 2579 0117 00000000 		.4byte	.LLST0
 2580 011b 07       		.uleb128 0x7
 2581 011c A9050000 		.4byte	.LASF23
 2582 0120 01       		.byte	0x1
 2583 0121 910D     		.2byte	0xd91
 2584 0123 50000000 		.4byte	0x50
 2585 0127 52000000 		.4byte	.LLST1
 2586 012b 07       		.uleb128 0x7
 2587 012c 4A040000 		.4byte	.LASF24
 2588 0130 01       		.byte	0x1
 2589 0131 920D     		.2byte	0xd92
 2590 0133 50000000 		.4byte	0x50
 2591 0137 8C000000 		.4byte	.LLST2
 2592 013b 07       		.uleb128 0x7
 2593 013c 57030000 		.4byte	.LASF25
 2594 0140 01       		.byte	0x1
 2595 0141 930D     		.2byte	0xd93
 2596 0143 3E000000 		.4byte	0x3e
 2597 0147 C6000000 		.4byte	.LLST3
 2598 014b 08       		.uleb128 0x8
 2599 014c 69000000 		.4byte	.LASF26
 2600 0150 01       		.byte	0x1
 2601 0151 940D     		.2byte	0xd94
 2602 0153 2C000000 		.4byte	0x2c
 2603 0157 02       		.uleb128 0x2
 2604 0158 91       		.byte	0x91
 2605 0159 00       		.sleb128 0
 2606 015a 08       		.uleb128 0x8
 2607 015b C5020000 		.4byte	.LASF27
 2608 015f 01       		.byte	0x1
 2609 0160 950D     		.2byte	0xd95
 2610 0162 3E000000 		.4byte	0x3e
 2611 0166 02       		.uleb128 0x2
 2612 0167 91       		.byte	0x91
 2613 0168 04       		.sleb128 4
 2614 0169 09       		.uleb128 0x9
 2615 016a 6E756C00 		.ascii	"nul\000"
 2616 016e 01       		.byte	0x1
 2617 016f 960D     		.2byte	0xd96
 2618 0171 3E000000 		.4byte	0x3e
 2619 0175 02       		.uleb128 0x2
 2620 0176 91       		.byte	0x91
 2621 0177 08       		.sleb128 8
 2622 0178 08       		.uleb128 0x8
 2623 0179 49030000 		.4byte	.LASF28
 2624 017d 01       		.byte	0x1
 2625 017e 970D     		.2byte	0xd97
 2626 0180 A6020000 		.4byte	0x2a6
 2627 0184 02       		.uleb128 0x2
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 124


 2628 0185 91       		.byte	0x91
 2629 0186 0C       		.sleb128 12
 2630 0187 0A       		.uleb128 0xa
 2631 0188 52020000 		.4byte	.LASF29
 2632 018c 01       		.byte	0x1
 2633 018d 990D     		.2byte	0xd99
 2634 018f A6020000 		.4byte	0x2a6
 2635 0193 00010000 		.4byte	.LLST4
 2636 0197 0B       		.uleb128 0xb
 2637 0198 6900     		.ascii	"i\000"
 2638 019a 01       		.byte	0x1
 2639 019b 9A0D     		.2byte	0xd9a
 2640 019d BF000000 		.4byte	0xbf
 2641 01a1 BA010000 		.4byte	.LLST5
 2642 01a5 0A       		.uleb128 0xa
 2643 01a6 62060000 		.4byte	.LASF30
 2644 01aa 01       		.byte	0x1
 2645 01ab 9B0D     		.2byte	0xd9b
 2646 01ad 7B000000 		.4byte	0x7b
 2647 01b1 E4010000 		.4byte	.LLST6
 2648 01b5 0A       		.uleb128 0xa
 2649 01b6 E4020000 		.4byte	.LASF31
 2650 01ba 01       		.byte	0x1
 2651 01bb 9C0D     		.2byte	0xd9c
 2652 01bd 7B000000 		.4byte	0x7b
 2653 01c1 02020000 		.4byte	.LLST7
 2654 01c5 0A       		.uleb128 0xa
 2655 01c6 51010000 		.4byte	.LASF32
 2656 01ca 01       		.byte	0x1
 2657 01cb 9D0D     		.2byte	0xd9d
 2658 01cd 50000000 		.4byte	0x50
 2659 01d1 2B020000 		.4byte	.LLST8
 2660 01d5 0A       		.uleb128 0xa
 2661 01d6 D7040000 		.4byte	.LASF33
 2662 01da 01       		.byte	0x1
 2663 01db 9E0D     		.2byte	0xd9e
 2664 01dd 50000000 		.4byte	0x50
 2665 01e1 5F020000 		.4byte	.LLST9
 2666 01e5 0A       		.uleb128 0xa
 2667 01e6 00000000 		.4byte	.LASF34
 2668 01ea 01       		.byte	0x1
 2669 01eb 9F0D     		.2byte	0xd9f
 2670 01ed 50000000 		.4byte	0x50
 2671 01f1 7D020000 		.4byte	.LLST10
 2672 01f5 0A       		.uleb128 0xa
 2673 01f6 24030000 		.4byte	.LASF35
 2674 01fa 01       		.byte	0x1
 2675 01fb A00D     		.2byte	0xda0
 2676 01fd 50000000 		.4byte	0x50
 2677 0201 B1020000 		.4byte	.LLST11
 2678 0205 0A       		.uleb128 0xa
 2679 0206 FA050000 		.4byte	.LASF36
 2680 020a 01       		.byte	0x1
 2681 020b A10D     		.2byte	0xda1
 2682 020d 50000000 		.4byte	0x50
 2683 0211 C4020000 		.4byte	.LLST12
 2684 0215 0A       		.uleb128 0xa
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 125


 2685 0216 17000000 		.4byte	.LASF37
 2686 021a 01       		.byte	0x1
 2687 021b A20D     		.2byte	0xda2
 2688 021d 50000000 		.4byte	0x50
 2689 0221 04030000 		.4byte	.LLST13
 2690 0225 0A       		.uleb128 0xa
 2691 0226 08010000 		.4byte	.LASF38
 2692 022a 01       		.byte	0x1
 2693 022b A30D     		.2byte	0xda3
 2694 022d 50000000 		.4byte	0x50
 2695 0231 71030000 		.4byte	.LLST14
 2696 0235 0A       		.uleb128 0xa
 2697 0236 FF020000 		.4byte	.LASF39
 2698 023a 01       		.byte	0x1
 2699 023b A40D     		.2byte	0xda4
 2700 023d 50000000 		.4byte	0x50
 2701 0241 E6030000 		.4byte	.LLST15
 2702 0245 0A       		.uleb128 0xa
 2703 0246 E3040000 		.4byte	.LASF40
 2704 024a 01       		.byte	0x1
 2705 024b A50D     		.2byte	0xda5
 2706 024d 3E000000 		.4byte	0x3e
 2707 0251 0F040000 		.4byte	.LLST16
 2708 0255 0A       		.uleb128 0xa
 2709 0256 5B020000 		.4byte	.LASF41
 2710 025a 01       		.byte	0x1
 2711 025b A60D     		.2byte	0xda6
 2712 025d 3E000000 		.4byte	0x3e
 2713 0261 2D040000 		.4byte	.LLST17
 2714 0265 0A       		.uleb128 0xa
 2715 0266 86030000 		.4byte	.LASF42
 2716 026a 01       		.byte	0x1
 2717 026b A70D     		.2byte	0xda7
 2718 026d 3E000000 		.4byte	0x3e
 2719 0271 4D040000 		.4byte	.LLST18
 2720 0275 0A       		.uleb128 0xa
 2721 0276 B1060000 		.4byte	.LASF43
 2722 027a 01       		.byte	0x1
 2723 027b A80D     		.2byte	0xda8
 2724 027d 3E000000 		.4byte	0x3e
 2725 0281 98040000 		.4byte	.LLST19
 2726 0285 0A       		.uleb128 0xa
 2727 0286 D0020000 		.4byte	.LASF44
 2728 028a 01       		.byte	0x1
 2729 028b A90D     		.2byte	0xda9
 2730 028d 3E000000 		.4byte	0x3e
 2731 0291 AB040000 		.4byte	.LLST20
 2732 0295 0C       		.uleb128 0xc
 2733 0296 42000000 		.4byte	.LVL6
 2734 029a 82100000 		.4byte	0x1082
 2735 029e 0D       		.uleb128 0xd
 2736 029f 01       		.uleb128 0x1
 2737 02a0 50       		.byte	0x50
 2738 02a1 02       		.uleb128 0x2
 2739 02a2 77       		.byte	0x77
 2740 02a3 00       		.sleb128 0
 2741 02a4 00       		.byte	0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 126


 2742 02a5 00       		.byte	0
 2743 02a6 0E       		.uleb128 0xe
 2744 02a7 04       		.byte	0x4
 2745 02a8 2C000000 		.4byte	0x2c
 2746 02ac 05       		.uleb128 0x5
 2747 02ad 3E010000 		.4byte	.LASF46
 2748 02b1 01       		.byte	0x1
 2749 02b2 1B0F     		.2byte	0xf1b
 2750 02b4 7B000000 		.4byte	0x7b
 2751 02b8 00000000 		.4byte	.LFB24
 2752 02bc A4010000 		.4byte	.LFE24-.LFB24
 2753 02c0 01       		.uleb128 0x1
 2754 02c1 9C       		.byte	0x9c
 2755 02c2 61040000 		.4byte	0x461
 2756 02c6 07       		.uleb128 0x7
 2757 02c7 49030000 		.4byte	.LASF28
 2758 02cb 01       		.byte	0x1
 2759 02cc 1B0F     		.2byte	0xf1b
 2760 02ce 61040000 		.4byte	0x461
 2761 02d2 F8040000 		.4byte	.LLST21
 2762 02d6 07       		.uleb128 0x7
 2763 02d7 57000000 		.4byte	.LASF47
 2764 02db 01       		.byte	0x1
 2765 02dc 1C0F     		.2byte	0xf1c
 2766 02de 6C040000 		.4byte	0x46c
 2767 02e2 66050000 		.4byte	.LLST22
 2768 02e6 07       		.uleb128 0x7
 2769 02e7 4A040000 		.4byte	.LASF24
 2770 02eb 01       		.byte	0x1
 2771 02ec 1D0F     		.2byte	0xf1d
 2772 02ee 50000000 		.4byte	0x50
 2773 02f2 84050000 		.4byte	.LLST23
 2774 02f6 07       		.uleb128 0x7
 2775 02f7 28040000 		.4byte	.LASF48
 2776 02fb 01       		.byte	0x1
 2777 02fc 1E0F     		.2byte	0xf1e
 2778 02fe 3E000000 		.4byte	0x3e
 2779 0302 F2050000 		.4byte	.LLST24
 2780 0306 07       		.uleb128 0x7
 2781 0307 92010000 		.4byte	.LASF49
 2782 030b 01       		.byte	0x1
 2783 030c 1F0F     		.2byte	0xf1f
 2784 030e 72040000 		.4byte	0x472
 2785 0312 13060000 		.4byte	.LLST25
 2786 0316 0A       		.uleb128 0xa
 2787 0317 80050000 		.4byte	.LASF50
 2788 031b 01       		.byte	0x1
 2789 031c 210F     		.2byte	0xf21
 2790 031e 61040000 		.4byte	0x461
 2791 0322 56060000 		.4byte	.LLST26
 2792 0326 0A       		.uleb128 0xa
 2793 0327 33000000 		.4byte	.LASF51
 2794 032b 01       		.byte	0x1
 2795 032c 220F     		.2byte	0xf22
 2796 032e 61040000 		.4byte	0x461
 2797 0332 FA060000 		.4byte	.LLST27
 2798 0336 0F       		.uleb128 0xf
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 127


 2799 0337 48060000 		.4byte	.LASF52
 2800 033b 01       		.byte	0x1
 2801 033c 230F     		.2byte	0xf23
 2802 033e A6020000 		.4byte	0x2a6
 2803 0342 02       		.uleb128 0x2
 2804 0343 91       		.byte	0x91
 2805 0344 54       		.sleb128 -44
 2806 0345 0A       		.uleb128 0xa
 2807 0346 28000000 		.4byte	.LASF53
 2808 034a 01       		.byte	0x1
 2809 034b 240F     		.2byte	0xf24
 2810 034d 2C000000 		.4byte	0x2c
 2811 0351 0D070000 		.4byte	.LLST28
 2812 0355 0A       		.uleb128 0xa
 2813 0356 F0050000 		.4byte	.LASF54
 2814 035a 01       		.byte	0x1
 2815 035b 250F     		.2byte	0xf25
 2816 035d 50000000 		.4byte	0x50
 2817 0361 81070000 		.4byte	.LLST29
 2818 0365 0B       		.uleb128 0xb
 2819 0366 6E627200 		.ascii	"nbr\000"
 2820 036a 01       		.byte	0x1
 2821 036b 260F     		.2byte	0xf26
 2822 036d 7B000000 		.4byte	0x7b
 2823 0371 AA070000 		.4byte	.LLST30
 2824 0375 0F       		.uleb128 0xf
 2825 0376 1A010000 		.4byte	.LASF55
 2826 037a 01       		.byte	0x1
 2827 037b 270F     		.2byte	0xf27
 2828 037d 3E000000 		.4byte	0x3e
 2829 0381 02       		.uleb128 0x2
 2830 0382 91       		.byte	0x91
 2831 0383 53       		.sleb128 -45
 2832 0384 0A       		.uleb128 0xa
 2833 0385 A9050000 		.4byte	.LASF23
 2834 0389 01       		.byte	0x1
 2835 038a 280F     		.2byte	0xf28
 2836 038c 3E000000 		.4byte	0x3e
 2837 0390 E4070000 		.4byte	.LLST31
 2838 0394 0A       		.uleb128 0xa
 2839 0395 E9000000 		.4byte	.LASF56
 2840 0399 01       		.byte	0x1
 2841 039a 290F     		.2byte	0xf29
 2842 039c 3E000000 		.4byte	0x3e
 2843 03a0 F7070000 		.4byte	.LLST32
 2844 03a4 0A       		.uleb128 0xa
 2845 03a5 29010000 		.4byte	.LASF57
 2846 03a9 01       		.byte	0x1
 2847 03aa 2A0F     		.2byte	0xf2a
 2848 03ac 3E000000 		.4byte	0x3e
 2849 03b0 15080000 		.4byte	.LLST33
 2850 03b4 0A       		.uleb128 0xa
 2851 03b5 CF000000 		.4byte	.LASF58
 2852 03b9 01       		.byte	0x1
 2853 03ba 2B0F     		.2byte	0xf2b
 2854 03bc 3E000000 		.4byte	0x3e
 2855 03c0 3E080000 		.4byte	.LLST34
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 128


 2856 03c4 0A       		.uleb128 0xa
 2857 03c5 2A060000 		.4byte	.LASF59
 2858 03c9 01       		.byte	0x1
 2859 03ca 2C0F     		.2byte	0xf2c
 2860 03cc 3E000000 		.4byte	0x3e
 2861 03d0 51080000 		.4byte	.LLST35
 2862 03d4 0B       		.uleb128 0xb
 2863 03d5 6E656700 		.ascii	"neg\000"
 2864 03d9 01       		.byte	0x1
 2865 03da 2D0F     		.2byte	0xf2d
 2866 03dc 3E000000 		.4byte	0x3e
 2867 03e0 90080000 		.4byte	.LLST36
 2868 03e4 0B       		.uleb128 0xb
 2869 03e5 6F766600 		.ascii	"ovf\000"
 2870 03e9 01       		.byte	0x1
 2871 03ea 2E0F     		.2byte	0xf2e
 2872 03ec 3E000000 		.4byte	0x3e
 2873 03f0 B0080000 		.4byte	.LLST37
 2874 03f4 0A       		.uleb128 0xa
 2875 03f5 B4030000 		.4byte	.LASF60
 2876 03f9 01       		.byte	0x1
 2877 03fa 2F0F     		.2byte	0xf2f
 2878 03fc 3E000000 		.4byte	0x3e
 2879 0400 DC080000 		.4byte	.LLST38
 2880 0404 10       		.uleb128 0x10
 2881 0405 48000000 		.4byte	.LVL85
 2882 0409 8E100000 		.4byte	0x108e
 2883 040d 10       		.uleb128 0x10
 2884 040e 54000000 		.4byte	.LVL88
 2885 0412 8E100000 		.4byte	0x108e
 2886 0416 10       		.uleb128 0x10
 2887 0417 AC000000 		.4byte	.LVL96
 2888 041b 9A100000 		.4byte	0x109a
 2889 041f 10       		.uleb128 0x10
 2890 0420 DA000000 		.4byte	.LVL104
 2891 0424 9A100000 		.4byte	0x109a
 2892 0428 11       		.uleb128 0x11
 2893 0429 10010000 		.4byte	.LVL113
 2894 042d A6100000 		.4byte	0x10a6
 2895 0431 3C040000 		.4byte	0x43c
 2896 0435 0D       		.uleb128 0xd
 2897 0436 01       		.uleb128 0x1
 2898 0437 50       		.byte	0x50
 2899 0438 02       		.uleb128 0x2
 2900 0439 74       		.byte	0x74
 2901 043a 00       		.sleb128 0
 2902 043b 00       		.byte	0
 2903 043c 11       		.uleb128 0x11
 2904 043d 1A010000 		.4byte	.LVL115
 2905 0441 B2100000 		.4byte	0x10b2
 2906 0445 50040000 		.4byte	0x450
 2907 0449 0D       		.uleb128 0xd
 2908 044a 01       		.uleb128 0x1
 2909 044b 50       		.byte	0x50
 2910 044c 02       		.uleb128 0x2
 2911 044d 74       		.byte	0x74
 2912 044e 00       		.sleb128 0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 129


 2913 044f 00       		.byte	0
 2914 0450 0C       		.uleb128 0xc
 2915 0451 2A010000 		.4byte	.LVL120
 2916 0455 BE100000 		.4byte	0x10be
 2917 0459 0D       		.uleb128 0xd
 2918 045a 01       		.uleb128 0x1
 2919 045b 50       		.byte	0x50
 2920 045c 02       		.uleb128 0x2
 2921 045d 74       		.byte	0x74
 2922 045e 00       		.sleb128 0
 2923 045f 00       		.byte	0
 2924 0460 00       		.byte	0
 2925 0461 0E       		.uleb128 0xe
 2926 0462 04       		.byte	0x4
 2927 0463 67040000 		.4byte	0x467
 2928 0467 12       		.uleb128 0x12
 2929 0468 2C000000 		.4byte	0x2c
 2930 046c 0E       		.uleb128 0xe
 2931 046d 04       		.byte	0x4
 2932 046e A6020000 		.4byte	0x2a6
 2933 0472 0E       		.uleb128 0xe
 2934 0473 04       		.byte	0x4
 2935 0474 3E000000 		.4byte	0x3e
 2936 0478 13       		.uleb128 0x13
 2937 0479 49050000 		.4byte	.LASF63
 2938 047d 01       		.byte	0x1
 2939 047e 1701     		.2byte	0x117
 2940 0480 CA000000 		.4byte	0xca
 2941 0484 00000000 		.4byte	.LFB2
 2942 0488 16000000 		.4byte	.LFE2-.LFB2
 2943 048c 01       		.uleb128 0x1
 2944 048d 9C       		.byte	0x9c
 2945 048e D1040000 		.4byte	0x4d1
 2946 0492 07       		.uleb128 0x7
 2947 0493 49030000 		.4byte	.LASF28
 2948 0497 01       		.byte	0x1
 2949 0498 1701     		.2byte	0x117
 2950 049a 61040000 		.4byte	0x461
 2951 049e 06090000 		.4byte	.LLST39
 2952 04a2 08       		.uleb128 0x8
 2953 04a3 A4000000 		.4byte	.LASF61
 2954 04a7 01       		.byte	0x1
 2955 04a8 1801     		.2byte	0x118
 2956 04aa CA000000 		.4byte	0xca
 2957 04ae 01       		.uleb128 0x1
 2958 04af 51       		.byte	0x51
 2959 04b0 0A       		.uleb128 0xa
 2960 04b1 FF000000 		.4byte	.LASF62
 2961 04b5 01       		.byte	0x1
 2962 04b6 1A01     		.2byte	0x11a
 2963 04b8 61040000 		.4byte	0x461
 2964 04bc 32090000 		.4byte	.LLST40
 2965 04c0 0B       		.uleb128 0xb
 2966 04c1 6C656E00 		.ascii	"len\000"
 2967 04c5 01       		.byte	0x1
 2968 04c6 1B01     		.2byte	0x11b
 2969 04c8 CA000000 		.4byte	0xca
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 130


 2970 04cc 50090000 		.4byte	.LLST41
 2971 04d0 00       		.byte	0
 2972 04d1 14       		.uleb128 0x14
 2973 04d2 5A060000 		.4byte	.LASF64
 2974 04d6 01       		.byte	0x1
 2975 04d7 DB       		.byte	0xdb
 2976 04d8 CA000000 		.4byte	0xca
 2977 04dc 00000000 		.4byte	.LFB1
 2978 04e0 0C000000 		.4byte	.LFE1-.LFB1
 2979 04e4 01       		.uleb128 0x1
 2980 04e5 9C       		.byte	0x9c
 2981 04e6 1E050000 		.4byte	0x51e
 2982 04ea 15       		.uleb128 0x15
 2983 04eb 49030000 		.4byte	.LASF28
 2984 04ef 01       		.byte	0x1
 2985 04f0 DB       		.byte	0xdb
 2986 04f1 61040000 		.4byte	0x461
 2987 04f5 6F090000 		.4byte	.LLST42
 2988 04f9 16       		.uleb128 0x16
 2989 04fa 6C656E00 		.ascii	"len\000"
 2990 04fe 01       		.byte	0x1
 2991 04ff DD       		.byte	0xdd
 2992 0500 CA000000 		.4byte	0xca
 2993 0504 01       		.uleb128 0x1
 2994 0505 50       		.byte	0x50
 2995 0506 0C       		.uleb128 0xc
 2996 0507 0A000000 		.4byte	.LVL150
 2997 050b 78040000 		.4byte	0x478
 2998 050f 0D       		.uleb128 0xd
 2999 0510 01       		.uleb128 0x1
 3000 0511 50       		.byte	0x50
 3001 0512 03       		.uleb128 0x3
 3002 0513 F3       		.byte	0xf3
 3003 0514 01       		.uleb128 0x1
 3004 0515 50       		.byte	0x50
 3005 0516 0D       		.uleb128 0xd
 3006 0517 01       		.uleb128 0x1
 3007 0518 51       		.byte	0x51
 3008 0519 02       		.uleb128 0x2
 3009 051a 09       		.byte	0x9
 3010 051b FF       		.byte	0xff
 3011 051c 00       		.byte	0
 3012 051d 00       		.byte	0
 3013 051e 13       		.uleb128 0x13
 3014 051f 8D020000 		.4byte	.LASF65
 3015 0523 01       		.byte	0x1
 3016 0524 BB01     		.2byte	0x1bb
 3017 0526 A6020000 		.4byte	0x2a6
 3018 052a 00000000 		.4byte	.LFB4
 3019 052e 48000000 		.4byte	.LFE4-.LFB4
 3020 0532 01       		.uleb128 0x1
 3021 0533 9C       		.byte	0x9c
 3022 0534 99050000 		.4byte	0x599
 3023 0538 07       		.uleb128 0x7
 3024 0539 A7060000 		.4byte	.LASF66
 3025 053d 01       		.byte	0x1
 3026 053e BB01     		.2byte	0x1bb
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 131


 3027 0540 A6020000 		.4byte	0x2a6
 3028 0544 90090000 		.4byte	.LLST43
 3029 0548 07       		.uleb128 0x7
 3030 0549 25050000 		.4byte	.LASF67
 3031 054d 01       		.byte	0x1
 3032 054e BC01     		.2byte	0x1bc
 3033 0550 61040000 		.4byte	0x461
 3034 0554 2D0A0000 		.4byte	.LLST44
 3035 0558 07       		.uleb128 0x7
 3036 0559 A4000000 		.4byte	.LASF61
 3037 055d 01       		.byte	0x1
 3038 055e BD01     		.2byte	0x1bd
 3039 0560 CA000000 		.4byte	0xca
 3040 0564 670A0000 		.4byte	.LLST45
 3041 0568 0A       		.uleb128 0xa
 3042 0569 A3020000 		.4byte	.LASF68
 3043 056d 01       		.byte	0x1
 3044 056e BF01     		.2byte	0x1bf
 3045 0570 A6020000 		.4byte	0x2a6
 3046 0574 A10A0000 		.4byte	.LLST46
 3047 0578 0A       		.uleb128 0xa
 3048 0579 12040000 		.4byte	.LASF69
 3049 057d 01       		.byte	0x1
 3050 057e C001     		.2byte	0x1c0
 3051 0580 61040000 		.4byte	0x461
 3052 0584 BF0A0000 		.4byte	.LLST47
 3053 0588 0A       		.uleb128 0xa
 3054 0589 BE000000 		.4byte	.LASF70
 3055 058d 01       		.byte	0x1
 3056 058e C101     		.2byte	0x1c1
 3057 0590 CA000000 		.4byte	0xca
 3058 0594 DD0A0000 		.4byte	.LLST48
 3059 0598 00       		.byte	0
 3060 0599 13       		.uleb128 0x13
 3061 059a B1010000 		.4byte	.LASF71
 3062 059e 01       		.byte	0x1
 3063 059f 6001     		.2byte	0x160
 3064 05a1 A6020000 		.4byte	0x2a6
 3065 05a5 00000000 		.4byte	.LFB3
 3066 05a9 0C000000 		.4byte	.LFE3-.LFB3
 3067 05ad 01       		.uleb128 0x1
 3068 05ae 9C       		.byte	0x9c
 3069 05af 00060000 		.4byte	0x600
 3070 05b3 07       		.uleb128 0x7
 3071 05b4 A7060000 		.4byte	.LASF66
 3072 05b8 01       		.byte	0x1
 3073 05b9 6001     		.2byte	0x160
 3074 05bb A6020000 		.4byte	0x2a6
 3075 05bf FB0A0000 		.4byte	.LLST49
 3076 05c3 07       		.uleb128 0x7
 3077 05c4 25050000 		.4byte	.LASF67
 3078 05c8 01       		.byte	0x1
 3079 05c9 6101     		.2byte	0x161
 3080 05cb 61040000 		.4byte	0x461
 3081 05cf 1C0B0000 		.4byte	.LLST50
 3082 05d3 0F       		.uleb128 0xf
 3083 05d4 4E030000 		.4byte	.LASF72
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 132


 3084 05d8 01       		.byte	0x1
 3085 05d9 6301     		.2byte	0x163
 3086 05db A6020000 		.4byte	0x2a6
 3087 05df 01       		.uleb128 0x1
 3088 05e0 50       		.byte	0x50
 3089 05e1 0C       		.uleb128 0xc
 3090 05e2 0A000000 		.4byte	.LVL170
 3091 05e6 1E050000 		.4byte	0x51e
 3092 05ea 0D       		.uleb128 0xd
 3093 05eb 01       		.uleb128 0x1
 3094 05ec 50       		.byte	0x50
 3095 05ed 03       		.uleb128 0x3
 3096 05ee F3       		.byte	0xf3
 3097 05ef 01       		.uleb128 0x1
 3098 05f0 50       		.byte	0x50
 3099 05f1 0D       		.uleb128 0xd
 3100 05f2 01       		.uleb128 0x1
 3101 05f3 51       		.byte	0x51
 3102 05f4 03       		.uleb128 0x3
 3103 05f5 F3       		.byte	0xf3
 3104 05f6 01       		.uleb128 0x1
 3105 05f7 51       		.byte	0x51
 3106 05f8 0D       		.uleb128 0xd
 3107 05f9 01       		.uleb128 0x1
 3108 05fa 52       		.byte	0x52
 3109 05fb 02       		.uleb128 0x2
 3110 05fc 09       		.byte	0x9
 3111 05fd FF       		.byte	0xff
 3112 05fe 00       		.byte	0
 3113 05ff 00       		.byte	0
 3114 0600 13       		.uleb128 0x13
 3115 0601 0D000000 		.4byte	.LASF73
 3116 0605 01       		.byte	0x1
 3117 0606 7402     		.2byte	0x274
 3118 0608 A6020000 		.4byte	0x2a6
 3119 060c 00000000 		.4byte	.LFB6
 3120 0610 56000000 		.4byte	.LFE6-.LFB6
 3121 0614 01       		.uleb128 0x1
 3122 0615 9C       		.byte	0x9c
 3123 0616 7B060000 		.4byte	0x67b
 3124 061a 07       		.uleb128 0x7
 3125 061b A7060000 		.4byte	.LASF66
 3126 061f 01       		.byte	0x1
 3127 0620 7402     		.2byte	0x274
 3128 0622 A6020000 		.4byte	0x2a6
 3129 0626 3D0B0000 		.4byte	.LLST51
 3130 062a 07       		.uleb128 0x7
 3131 062b 71020000 		.4byte	.LASF74
 3132 062f 01       		.byte	0x1
 3133 0630 7502     		.2byte	0x275
 3134 0632 61040000 		.4byte	0x461
 3135 0636 DA0B0000 		.4byte	.LLST52
 3136 063a 07       		.uleb128 0x7
 3137 063b A4000000 		.4byte	.LASF61
 3138 063f 01       		.byte	0x1
 3139 0640 7602     		.2byte	0x276
 3140 0642 CA000000 		.4byte	0xca
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 133


 3141 0646 140C0000 		.4byte	.LLST53
 3142 064a 0A       		.uleb128 0xa
 3143 064b 17050000 		.4byte	.LASF75
 3144 064f 01       		.byte	0x1
 3145 0650 7802     		.2byte	0x278
 3146 0652 A6020000 		.4byte	0x2a6
 3147 0656 4E0C0000 		.4byte	.LLST54
 3148 065a 0A       		.uleb128 0xa
 3149 065b 02050000 		.4byte	.LASF76
 3150 065f 01       		.byte	0x1
 3151 0660 7902     		.2byte	0x279
 3152 0662 61040000 		.4byte	0x461
 3153 0666 6C0C0000 		.4byte	.LLST55
 3154 066a 0A       		.uleb128 0xa
 3155 066b C7000000 		.4byte	.LASF77
 3156 066f 01       		.byte	0x1
 3157 0670 7A02     		.2byte	0x27a
 3158 0672 CA000000 		.4byte	0xca
 3159 0676 8A0C0000 		.4byte	.LLST56
 3160 067a 00       		.byte	0
 3161 067b 13       		.uleb128 0x13
 3162 067c 84000000 		.4byte	.LASF78
 3163 0680 01       		.byte	0x1
 3164 0681 2102     		.2byte	0x221
 3165 0683 A6020000 		.4byte	0x2a6
 3166 0687 00000000 		.4byte	.LFB5
 3167 068b 0C000000 		.4byte	.LFE5-.LFB5
 3168 068f 01       		.uleb128 0x1
 3169 0690 9C       		.byte	0x9c
 3170 0691 E2060000 		.4byte	0x6e2
 3171 0695 07       		.uleb128 0x7
 3172 0696 A7060000 		.4byte	.LASF66
 3173 069a 01       		.byte	0x1
 3174 069b 2102     		.2byte	0x221
 3175 069d A6020000 		.4byte	0x2a6
 3176 06a1 A80C0000 		.4byte	.LLST57
 3177 06a5 07       		.uleb128 0x7
 3178 06a6 71020000 		.4byte	.LASF74
 3179 06aa 01       		.byte	0x1
 3180 06ab 2202     		.2byte	0x222
 3181 06ad 61040000 		.4byte	0x461
 3182 06b1 C90C0000 		.4byte	.LLST58
 3183 06b5 0F       		.uleb128 0xf
 3184 06b6 4E030000 		.4byte	.LASF72
 3185 06ba 01       		.byte	0x1
 3186 06bb 2402     		.2byte	0x224
 3187 06bd A6020000 		.4byte	0x2a6
 3188 06c1 01       		.uleb128 0x1
 3189 06c2 50       		.byte	0x50
 3190 06c3 0C       		.uleb128 0xc
 3191 06c4 0A000000 		.4byte	.LVL193
 3192 06c8 00060000 		.4byte	0x600
 3193 06cc 0D       		.uleb128 0xd
 3194 06cd 01       		.uleb128 0x1
 3195 06ce 50       		.byte	0x50
 3196 06cf 03       		.uleb128 0x3
 3197 06d0 F3       		.byte	0xf3
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 134


 3198 06d1 01       		.uleb128 0x1
 3199 06d2 50       		.byte	0x50
 3200 06d3 0D       		.uleb128 0xd
 3201 06d4 01       		.uleb128 0x1
 3202 06d5 51       		.byte	0x51
 3203 06d6 03       		.uleb128 0x3
 3204 06d7 F3       		.byte	0xf3
 3205 06d8 01       		.uleb128 0x1
 3206 06d9 51       		.byte	0x51
 3207 06da 0D       		.uleb128 0xd
 3208 06db 01       		.uleb128 0x1
 3209 06dc 52       		.byte	0x52
 3210 06dd 02       		.uleb128 0x2
 3211 06de 09       		.byte	0x9
 3212 06df FF       		.byte	0xff
 3213 06e0 00       		.byte	0
 3214 06e1 00       		.byte	0
 3215 06e2 13       		.uleb128 0x13
 3216 06e3 7A020000 		.4byte	.LASF79
 3217 06e7 01       		.byte	0x1
 3218 06e8 5D03     		.2byte	0x35d
 3219 06ea 69000000 		.4byte	0x69
 3220 06ee 00000000 		.4byte	.LFB8
 3221 06f2 70000000 		.4byte	.LFE8-.LFB8
 3222 06f6 01       		.uleb128 0x1
 3223 06f7 9C       		.byte	0x9c
 3224 06f8 89070000 		.4byte	0x789
 3225 06fc 07       		.uleb128 0x7
 3226 06fd DD020000 		.4byte	.LASF80
 3227 0701 01       		.byte	0x1
 3228 0702 5D03     		.2byte	0x35d
 3229 0704 61040000 		.4byte	0x461
 3230 0708 EA0C0000 		.4byte	.LLST59
 3231 070c 07       		.uleb128 0x7
 3232 070d 50000000 		.4byte	.LASF81
 3233 0711 01       		.byte	0x1
 3234 0712 5E03     		.2byte	0x35e
 3235 0714 61040000 		.4byte	0x461
 3236 0718 6F0D0000 		.4byte	.LLST60
 3237 071c 07       		.uleb128 0x7
 3238 071d A4000000 		.4byte	.LASF61
 3239 0721 01       		.byte	0x1
 3240 0722 5F03     		.2byte	0x35f
 3241 0724 CA000000 		.4byte	0xca
 3242 0728 A90D0000 		.4byte	.LLST61
 3243 072c 0A       		.uleb128 0xa
 3244 072d 87010000 		.4byte	.LASF82
 3245 0731 01       		.byte	0x1
 3246 0732 6103     		.2byte	0x361
 3247 0734 61040000 		.4byte	0x461
 3248 0738 EB0D0000 		.4byte	.LLST62
 3249 073c 0A       		.uleb128 0xa
 3250 073d 5F030000 		.4byte	.LASF83
 3251 0741 01       		.byte	0x1
 3252 0742 6203     		.2byte	0x362
 3253 0744 61040000 		.4byte	0x461
 3254 0748 350E0000 		.4byte	.LLST63
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 135


 3255 074c 0A       		.uleb128 0xa
 3256 074d 99050000 		.4byte	.LASF84
 3257 0751 01       		.byte	0x1
 3258 0752 6303     		.2byte	0x363
 3259 0754 61040000 		.4byte	0x461
 3260 0758 530E0000 		.4byte	.LLST64
 3261 075c 0A       		.uleb128 0xa
 3262 075d 53050000 		.4byte	.LASF85
 3263 0761 01       		.byte	0x1
 3264 0762 6403     		.2byte	0x364
 3265 0764 61040000 		.4byte	0x461
 3266 0768 7C0E0000 		.4byte	.LLST65
 3267 076c 17       		.uleb128 0x17
 3268 076d 0F050000 		.4byte	.LASF88
 3269 0771 01       		.byte	0x1
 3270 0772 6503     		.2byte	0x365
 3271 0774 69000000 		.4byte	0x69
 3272 0778 0A       		.uleb128 0xa
 3273 0779 61000000 		.4byte	.LASF86
 3274 077d 01       		.byte	0x1
 3275 077e 6603     		.2byte	0x366
 3276 0780 CA000000 		.4byte	0xca
 3277 0784 A50E0000 		.4byte	.LLST66
 3278 0788 00       		.byte	0
 3279 0789 13       		.uleb128 0x13
 3280 078a E8050000 		.4byte	.LASF87
 3281 078e 01       		.byte	0x1
 3282 078f F702     		.2byte	0x2f7
 3283 0791 69000000 		.4byte	0x69
 3284 0795 00000000 		.4byte	.LFB7
 3285 0799 0C000000 		.4byte	.LFE7-.LFB7
 3286 079d 01       		.uleb128 0x1
 3287 079e 9C       		.byte	0x9c
 3288 079f F0070000 		.4byte	0x7f0
 3289 07a3 07       		.uleb128 0x7
 3290 07a4 DD020000 		.4byte	.LASF80
 3291 07a8 01       		.byte	0x1
 3292 07a9 F702     		.2byte	0x2f7
 3293 07ab 61040000 		.4byte	0x461
 3294 07af CF0E0000 		.4byte	.LLST67
 3295 07b3 07       		.uleb128 0x7
 3296 07b4 50000000 		.4byte	.LASF81
 3297 07b8 01       		.byte	0x1
 3298 07b9 F802     		.2byte	0x2f8
 3299 07bb 61040000 		.4byte	0x461
 3300 07bf F00E0000 		.4byte	.LLST68
 3301 07c3 0F       		.uleb128 0xf
 3302 07c4 0F050000 		.4byte	.LASF88
 3303 07c8 01       		.byte	0x1
 3304 07c9 FA02     		.2byte	0x2fa
 3305 07cb 69000000 		.4byte	0x69
 3306 07cf 01       		.uleb128 0x1
 3307 07d0 50       		.byte	0x50
 3308 07d1 0C       		.uleb128 0xc
 3309 07d2 0A000000 		.4byte	.LVL225
 3310 07d6 E2060000 		.4byte	0x6e2
 3311 07da 0D       		.uleb128 0xd
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 136


 3312 07db 01       		.uleb128 0x1
 3313 07dc 50       		.byte	0x50
 3314 07dd 03       		.uleb128 0x3
 3315 07de F3       		.byte	0xf3
 3316 07df 01       		.uleb128 0x1
 3317 07e0 50       		.byte	0x50
 3318 07e1 0D       		.uleb128 0xd
 3319 07e2 01       		.uleb128 0x1
 3320 07e3 51       		.byte	0x51
 3321 07e4 03       		.uleb128 0x3
 3322 07e5 F3       		.byte	0xf3
 3323 07e6 01       		.uleb128 0x1
 3324 07e7 51       		.byte	0x51
 3325 07e8 0D       		.uleb128 0xd
 3326 07e9 01       		.uleb128 0x1
 3327 07ea 52       		.byte	0x52
 3328 07eb 02       		.uleb128 0x2
 3329 07ec 09       		.byte	0x9
 3330 07ed FF       		.byte	0xff
 3331 07ee 00       		.byte	0
 3332 07ef 00       		.byte	0
 3333 07f0 13       		.uleb128 0x13
 3334 07f1 16060000 		.4byte	.LASF89
 3335 07f5 01       		.byte	0x1
 3336 07f6 7204     		.2byte	0x472
 3337 07f8 69000000 		.4byte	0x69
 3338 07fc 00000000 		.4byte	.LFB10
 3339 0800 C2000000 		.4byte	.LFE10-.LFB10
 3340 0804 01       		.uleb128 0x1
 3341 0805 9C       		.byte	0x9c
 3342 0806 FF080000 		.4byte	0x8ff
 3343 080a 07       		.uleb128 0x7
 3344 080b DD020000 		.4byte	.LASF80
 3345 080f 01       		.byte	0x1
 3346 0810 7204     		.2byte	0x472
 3347 0812 61040000 		.4byte	0x461
 3348 0816 110F0000 		.4byte	.LLST69
 3349 081a 07       		.uleb128 0x7
 3350 081b 50000000 		.4byte	.LASF81
 3351 081f 01       		.byte	0x1
 3352 0820 7304     		.2byte	0x473
 3353 0822 61040000 		.4byte	0x461
 3354 0826 A60F0000 		.4byte	.LLST70
 3355 082a 07       		.uleb128 0x7
 3356 082b A4000000 		.4byte	.LASF61
 3357 082f 01       		.byte	0x1
 3358 0830 7404     		.2byte	0x474
 3359 0832 CA000000 		.4byte	0xca
 3360 0836 17100000 		.4byte	.LLST71
 3361 083a 0A       		.uleb128 0xa
 3362 083b 87010000 		.4byte	.LASF82
 3363 083f 01       		.byte	0x1
 3364 0840 7604     		.2byte	0x476
 3365 0842 61040000 		.4byte	0x461
 3366 0846 77100000 		.4byte	.LLST72
 3367 084a 0A       		.uleb128 0xa
 3368 084b 5F030000 		.4byte	.LASF83
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 137


 3369 084f 01       		.byte	0x1
 3370 0850 7704     		.2byte	0x477
 3371 0852 61040000 		.4byte	0x461
 3372 0856 B8100000 		.4byte	.LLST73
 3373 085a 0A       		.uleb128 0xa
 3374 085b 99050000 		.4byte	.LASF84
 3375 085f 01       		.byte	0x1
 3376 0860 7804     		.2byte	0x478
 3377 0862 61040000 		.4byte	0x461
 3378 0866 F9100000 		.4byte	.LLST74
 3379 086a 0A       		.uleb128 0xa
 3380 086b 53050000 		.4byte	.LASF85
 3381 086f 01       		.byte	0x1
 3382 0870 7904     		.2byte	0x479
 3383 0872 61040000 		.4byte	0x461
 3384 0876 22110000 		.4byte	.LLST75
 3385 087a 0A       		.uleb128 0xa
 3386 087b 33040000 		.4byte	.LASF90
 3387 087f 01       		.byte	0x1
 3388 0880 7A04     		.2byte	0x47a
 3389 0882 2C000000 		.4byte	0x2c
 3390 0886 4B110000 		.4byte	.LLST76
 3391 088a 0A       		.uleb128 0xa
 3392 088b 3A040000 		.4byte	.LASF91
 3393 088f 01       		.byte	0x1
 3394 0890 7B04     		.2byte	0x47b
 3395 0892 2C000000 		.4byte	0x2c
 3396 0896 7F110000 		.4byte	.LLST77
 3397 089a 17       		.uleb128 0x17
 3398 089b 0F050000 		.4byte	.LASF88
 3399 089f 01       		.byte	0x1
 3400 08a0 7C04     		.2byte	0x47c
 3401 08a2 69000000 		.4byte	0x69
 3402 08a6 0A       		.uleb128 0xa
 3403 08a7 61000000 		.4byte	.LASF86
 3404 08ab 01       		.byte	0x1
 3405 08ac 7D04     		.2byte	0x47d
 3406 08ae CA000000 		.4byte	0xca
 3407 08b2 EA110000 		.4byte	.LLST78
 3408 08b6 10       		.uleb128 0x10
 3409 08b7 1A000000 		.4byte	.LVL228
 3410 08bb CA100000 		.4byte	0x10ca
 3411 08bf 10       		.uleb128 0x10
 3412 08c0 2A000000 		.4byte	.LVL232
 3413 08c4 CA100000 		.4byte	0x10ca
 3414 08c8 10       		.uleb128 0x10
 3415 08c9 3A000000 		.4byte	.LVL238
 3416 08cd CA100000 		.4byte	0x10ca
 3417 08d1 10       		.uleb128 0x10
 3418 08d2 44000000 		.4byte	.LVL240
 3419 08d6 CA100000 		.4byte	0x10ca
 3420 08da 10       		.uleb128 0x10
 3421 08db 56000000 		.4byte	.LVL246
 3422 08df CA100000 		.4byte	0x10ca
 3423 08e3 10       		.uleb128 0x10
 3424 08e4 60000000 		.4byte	.LVL249
 3425 08e8 CA100000 		.4byte	0x10ca
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 138


 3426 08ec 10       		.uleb128 0x10
 3427 08ed 92000000 		.4byte	.LVL253
 3428 08f1 CA100000 		.4byte	0x10ca
 3429 08f5 10       		.uleb128 0x10
 3430 08f6 A0000000 		.4byte	.LVL257
 3431 08fa CA100000 		.4byte	0x10ca
 3432 08fe 00       		.byte	0
 3433 08ff 13       		.uleb128 0x13
 3434 0900 AC000000 		.4byte	.LASF92
 3435 0904 01       		.byte	0x1
 3436 0905 0204     		.2byte	0x402
 3437 0907 69000000 		.4byte	0x69
 3438 090b 00000000 		.4byte	.LFB9
 3439 090f 0C000000 		.4byte	.LFE9-.LFB9
 3440 0913 01       		.uleb128 0x1
 3441 0914 9C       		.byte	0x9c
 3442 0915 66090000 		.4byte	0x966
 3443 0919 07       		.uleb128 0x7
 3444 091a DD020000 		.4byte	.LASF80
 3445 091e 01       		.byte	0x1
 3446 091f 0204     		.2byte	0x402
 3447 0921 61040000 		.4byte	0x461
 3448 0925 14120000 		.4byte	.LLST79
 3449 0929 07       		.uleb128 0x7
 3450 092a 50000000 		.4byte	.LASF81
 3451 092e 01       		.byte	0x1
 3452 092f 0304     		.2byte	0x403
 3453 0931 61040000 		.4byte	0x461
 3454 0935 35120000 		.4byte	.LLST80
 3455 0939 0F       		.uleb128 0xf
 3456 093a 0F050000 		.4byte	.LASF88
 3457 093e 01       		.byte	0x1
 3458 093f 0504     		.2byte	0x405
 3459 0941 69000000 		.4byte	0x69
 3460 0945 01       		.uleb128 0x1
 3461 0946 50       		.byte	0x50
 3462 0947 0C       		.uleb128 0xc
 3463 0948 0A000000 		.4byte	.LVL270
 3464 094c F0070000 		.4byte	0x7f0
 3465 0950 0D       		.uleb128 0xd
 3466 0951 01       		.uleb128 0x1
 3467 0952 50       		.byte	0x50
 3468 0953 03       		.uleb128 0x3
 3469 0954 F3       		.byte	0xf3
 3470 0955 01       		.uleb128 0x1
 3471 0956 50       		.byte	0x50
 3472 0957 0D       		.uleb128 0xd
 3473 0958 01       		.uleb128 0x1
 3474 0959 51       		.byte	0x51
 3475 095a 03       		.uleb128 0x3
 3476 095b F3       		.byte	0xf3
 3477 095c 01       		.uleb128 0x1
 3478 095d 51       		.byte	0x51
 3479 095e 0D       		.uleb128 0xd
 3480 095f 01       		.uleb128 0x1
 3481 0960 52       		.byte	0x52
 3482 0961 02       		.uleb128 0x2
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 139


 3483 0962 09       		.byte	0x9
 3484 0963 FF       		.byte	0xff
 3485 0964 00       		.byte	0
 3486 0965 00       		.byte	0
 3487 0966 13       		.uleb128 0x13
 3488 0967 98020000 		.4byte	.LASF93
 3489 096b 01       		.byte	0x1
 3490 096c 4F05     		.2byte	0x54f
 3491 096e A6020000 		.4byte	0x2a6
 3492 0972 00000000 		.4byte	.LFB12
 3493 0976 44000000 		.4byte	.LFE12-.LFB12
 3494 097a 01       		.uleb128 0x1
 3495 097b 9C       		.byte	0x9c
 3496 097c CF090000 		.4byte	0x9cf
 3497 0980 07       		.uleb128 0x7
 3498 0981 49030000 		.4byte	.LASF28
 3499 0985 01       		.byte	0x1
 3500 0986 4F05     		.2byte	0x54f
 3501 0988 61040000 		.4byte	0x461
 3502 098c 56120000 		.4byte	.LLST81
 3503 0990 07       		.uleb128 0x7
 3504 0991 A4000000 		.4byte	.LASF61
 3505 0995 01       		.byte	0x1
 3506 0996 5005     		.2byte	0x550
 3507 0998 CA000000 		.4byte	0xca
 3508 099c BF120000 		.4byte	.LLST82
 3509 09a0 08       		.uleb128 0x8
 3510 09a1 48020000 		.4byte	.LASF94
 3511 09a5 01       		.byte	0x1
 3512 09a6 5105     		.2byte	0x551
 3513 09a8 2C000000 		.4byte	0x2c
 3514 09ac 01       		.uleb128 0x1
 3515 09ad 52       		.byte	0x52
 3516 09ae 0A       		.uleb128 0xa
 3517 09af BB020000 		.4byte	.LASF95
 3518 09b3 01       		.byte	0x1
 3519 09b4 5305     		.2byte	0x553
 3520 09b6 61040000 		.4byte	0x461
 3521 09ba F9120000 		.4byte	.LLST83
 3522 09be 0A       		.uleb128 0xa
 3523 09bf 41040000 		.4byte	.LASF96
 3524 09c3 01       		.byte	0x1
 3525 09c4 5405     		.2byte	0x554
 3526 09c6 CA000000 		.4byte	0xca
 3527 09ca 17130000 		.4byte	.LLST84
 3528 09ce 00       		.byte	0
 3529 09cf 13       		.uleb128 0x13
 3530 09d0 FD030000 		.4byte	.LASF97
 3531 09d4 01       		.byte	0x1
 3532 09d5 FE04     		.2byte	0x4fe
 3533 09d7 A6020000 		.4byte	0x2a6
 3534 09db 00000000 		.4byte	.LFB11
 3535 09df 0E000000 		.4byte	.LFE11-.LFB11
 3536 09e3 01       		.uleb128 0x1
 3537 09e4 9C       		.byte	0x9c
 3538 09e5 2F0A0000 		.4byte	0xa2f
 3539 09e9 07       		.uleb128 0x7
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 140


 3540 09ea 49030000 		.4byte	.LASF28
 3541 09ee 01       		.byte	0x1
 3542 09ef FE04     		.2byte	0x4fe
 3543 09f1 61040000 		.4byte	0x461
 3544 09f5 4B130000 		.4byte	.LLST85
 3545 09f9 07       		.uleb128 0x7
 3546 09fa 48020000 		.4byte	.LASF94
 3547 09fe 01       		.byte	0x1
 3548 09ff FF04     		.2byte	0x4ff
 3549 0a01 2C000000 		.4byte	0x2c
 3550 0a05 6C130000 		.4byte	.LLST86
 3551 0a09 0F       		.uleb128 0xf
 3552 0a0a 4E030000 		.4byte	.LASF72
 3553 0a0e 01       		.byte	0x1
 3554 0a0f 0105     		.2byte	0x501
 3555 0a11 A6020000 		.4byte	0x2a6
 3556 0a15 01       		.uleb128 0x1
 3557 0a16 50       		.byte	0x50
 3558 0a17 0C       		.uleb128 0xc
 3559 0a18 0C000000 		.4byte	.LVL290
 3560 0a1c 66090000 		.4byte	0x966
 3561 0a20 0D       		.uleb128 0xd
 3562 0a21 01       		.uleb128 0x1
 3563 0a22 50       		.byte	0x50
 3564 0a23 03       		.uleb128 0x3
 3565 0a24 F3       		.byte	0xf3
 3566 0a25 01       		.uleb128 0x1
 3567 0a26 50       		.byte	0x50
 3568 0a27 0D       		.uleb128 0xd
 3569 0a28 01       		.uleb128 0x1
 3570 0a29 51       		.byte	0x51
 3571 0a2a 02       		.uleb128 0x2
 3572 0a2b 09       		.byte	0x9
 3573 0a2c FF       		.byte	0xff
 3574 0a2d 00       		.byte	0
 3575 0a2e 00       		.byte	0
 3576 0a2f 13       		.uleb128 0x13
 3577 0a30 B1050000 		.4byte	.LASF98
 3578 0a34 01       		.byte	0x1
 3579 0a35 0406     		.2byte	0x604
 3580 0a37 A6020000 		.4byte	0x2a6
 3581 0a3b 00000000 		.4byte	.LFB14
 3582 0a3f 38000000 		.4byte	.LFE14-.LFB14
 3583 0a43 01       		.uleb128 0x1
 3584 0a44 9C       		.byte	0x9c
 3585 0a45 C30A0000 		.4byte	0xac3
 3586 0a49 07       		.uleb128 0x7
 3587 0a4a 49030000 		.4byte	.LASF28
 3588 0a4e 01       		.byte	0x1
 3589 0a4f 0406     		.2byte	0x604
 3590 0a51 61040000 		.4byte	0x461
 3591 0a55 8D130000 		.4byte	.LLST87
 3592 0a59 07       		.uleb128 0x7
 3593 0a5a A4000000 		.4byte	.LASF61
 3594 0a5e 01       		.byte	0x1
 3595 0a5f 0506     		.2byte	0x605
 3596 0a61 CA000000 		.4byte	0xca
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 141


 3597 0a65 DA130000 		.4byte	.LLST88
 3598 0a69 07       		.uleb128 0x7
 3599 0a6a 48020000 		.4byte	.LASF94
 3600 0a6e 01       		.byte	0x1
 3601 0a6f 0606     		.2byte	0x606
 3602 0a71 2C000000 		.4byte	0x2c
 3603 0a75 21140000 		.4byte	.LLST89
 3604 0a79 0A       		.uleb128 0xa
 3605 0a7a BB020000 		.4byte	.LASF95
 3606 0a7e 01       		.byte	0x1
 3607 0a7f 0806     		.2byte	0x608
 3608 0a81 61040000 		.4byte	0x461
 3609 0a85 5B140000 		.4byte	.LLST90
 3610 0a89 0A       		.uleb128 0xa
 3611 0a8a DD000000 		.4byte	.LASF99
 3612 0a8e 01       		.byte	0x1
 3613 0a8f 0906     		.2byte	0x609
 3614 0a91 CA000000 		.4byte	0xca
 3615 0a95 9F140000 		.4byte	.LLST91
 3616 0a99 0A       		.uleb128 0xa
 3617 0a9a 11030000 		.4byte	.LASF100
 3618 0a9e 01       		.byte	0x1
 3619 0a9f 0A06     		.2byte	0x60a
 3620 0aa1 CA000000 		.4byte	0xca
 3621 0aa5 DF140000 		.4byte	.LLST92
 3622 0aa9 0C       		.uleb128 0xc
 3623 0aaa 10000000 		.4byte	.LVL294
 3624 0aae 78040000 		.4byte	0x478
 3625 0ab2 0D       		.uleb128 0xd
 3626 0ab3 01       		.uleb128 0x1
 3627 0ab4 50       		.byte	0x50
 3628 0ab5 02       		.uleb128 0x2
 3629 0ab6 74       		.byte	0x74
 3630 0ab7 00       		.sleb128 0
 3631 0ab8 0D       		.uleb128 0xd
 3632 0ab9 01       		.uleb128 0x1
 3633 0aba 51       		.byte	0x51
 3634 0abb 05       		.uleb128 0x5
 3635 0abc F3       		.byte	0xf3
 3636 0abd 01       		.uleb128 0x1
 3637 0abe 51       		.byte	0x51
 3638 0abf 31       		.byte	0x31
 3639 0ac0 1C       		.byte	0x1c
 3640 0ac1 00       		.byte	0
 3641 0ac2 00       		.byte	0
 3642 0ac3 13       		.uleb128 0x13
 3643 0ac4 08060000 		.4byte	.LASF101
 3644 0ac8 01       		.byte	0x1
 3645 0ac9 B105     		.2byte	0x5b1
 3646 0acb A6020000 		.4byte	0x2a6
 3647 0acf 00000000 		.4byte	.LFB13
 3648 0ad3 0E000000 		.4byte	.LFE13-.LFB13
 3649 0ad7 01       		.uleb128 0x1
 3650 0ad8 9C       		.byte	0x9c
 3651 0ad9 230B0000 		.4byte	0xb23
 3652 0add 07       		.uleb128 0x7
 3653 0ade 49030000 		.4byte	.LASF28
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 142


 3654 0ae2 01       		.byte	0x1
 3655 0ae3 B105     		.2byte	0x5b1
 3656 0ae5 61040000 		.4byte	0x461
 3657 0ae9 F2140000 		.4byte	.LLST93
 3658 0aed 07       		.uleb128 0x7
 3659 0aee 48020000 		.4byte	.LASF94
 3660 0af2 01       		.byte	0x1
 3661 0af3 B205     		.2byte	0x5b2
 3662 0af5 2C000000 		.4byte	0x2c
 3663 0af9 13150000 		.4byte	.LLST94
 3664 0afd 0F       		.uleb128 0xf
 3665 0afe 4E030000 		.4byte	.LASF72
 3666 0b02 01       		.byte	0x1
 3667 0b03 B405     		.2byte	0x5b4
 3668 0b05 A6020000 		.4byte	0x2a6
 3669 0b09 01       		.uleb128 0x1
 3670 0b0a 50       		.byte	0x50
 3671 0b0b 0C       		.uleb128 0xc
 3672 0b0c 0C000000 		.4byte	.LVL306
 3673 0b10 2F0A0000 		.4byte	0xa2f
 3674 0b14 0D       		.uleb128 0xd
 3675 0b15 01       		.uleb128 0x1
 3676 0b16 50       		.byte	0x50
 3677 0b17 03       		.uleb128 0x3
 3678 0b18 F3       		.byte	0xf3
 3679 0b19 01       		.uleb128 0x1
 3680 0b1a 50       		.byte	0x50
 3681 0b1b 0D       		.uleb128 0xd
 3682 0b1c 01       		.uleb128 0x1
 3683 0b1d 51       		.byte	0x51
 3684 0b1e 02       		.uleb128 0x2
 3685 0b1f 09       		.byte	0x9
 3686 0b20 FF       		.byte	0xff
 3687 0b21 00       		.byte	0
 3688 0b22 00       		.byte	0
 3689 0b23 13       		.uleb128 0x13
 3690 0b24 35060000 		.4byte	.LASF102
 3691 0b28 01       		.byte	0x1
 3692 0b29 9306     		.2byte	0x693
 3693 0b2b A6020000 		.4byte	0x2a6
 3694 0b2f 00000000 		.4byte	.LFB16
 3695 0b33 36000000 		.4byte	.LFE16-.LFB16
 3696 0b37 01       		.uleb128 0x1
 3697 0b38 9C       		.byte	0x9c
 3698 0b39 9A0B0000 		.4byte	0xb9a
 3699 0b3d 07       		.uleb128 0x7
 3700 0b3e 49030000 		.4byte	.LASF28
 3701 0b42 01       		.byte	0x1
 3702 0b43 9306     		.2byte	0x693
 3703 0b45 A6020000 		.4byte	0x2a6
 3704 0b49 34150000 		.4byte	.LLST95
 3705 0b4d 08       		.uleb128 0x8
 3706 0b4e 67020000 		.4byte	.LASF103
 3707 0b52 01       		.byte	0x1
 3708 0b53 9406     		.2byte	0x694
 3709 0b55 2C000000 		.4byte	0x2c
 3710 0b59 01       		.uleb128 0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 143


 3711 0b5a 51       		.byte	0x51
 3712 0b5b 08       		.uleb128 0x8
 3713 0b5c 31010000 		.4byte	.LASF104
 3714 0b60 01       		.byte	0x1
 3715 0b61 9506     		.2byte	0x695
 3716 0b63 2C000000 		.4byte	0x2c
 3717 0b67 01       		.uleb128 0x1
 3718 0b68 52       		.byte	0x52
 3719 0b69 07       		.uleb128 0x7
 3720 0b6a A4000000 		.4byte	.LASF61
 3721 0b6e 01       		.byte	0x1
 3722 0b6f 9606     		.2byte	0x696
 3723 0b71 CA000000 		.4byte	0xca
 3724 0b75 BB150000 		.4byte	.LLST96
 3725 0b79 0A       		.uleb128 0xa
 3726 0b7a BB020000 		.4byte	.LASF95
 3727 0b7e 01       		.byte	0x1
 3728 0b7f 9806     		.2byte	0x698
 3729 0b81 A6020000 		.4byte	0x2a6
 3730 0b85 F5150000 		.4byte	.LLST97
 3731 0b89 0B       		.uleb128 0xb
 3732 0b8a 6C656E00 		.ascii	"len\000"
 3733 0b8e 01       		.byte	0x1
 3734 0b8f 9906     		.2byte	0x699
 3735 0b91 CA000000 		.4byte	0xca
 3736 0b95 13160000 		.4byte	.LLST98
 3737 0b99 00       		.byte	0
 3738 0b9a 13       		.uleb128 0x13
 3739 0b9b F1040000 		.4byte	.LASF105
 3740 0b9f 01       		.byte	0x1
 3741 0ba0 5406     		.2byte	0x654
 3742 0ba2 A6020000 		.4byte	0x2a6
 3743 0ba6 00000000 		.4byte	.LFB15
 3744 0baa 0C000000 		.4byte	.LFE15-.LFB15
 3745 0bae 01       		.uleb128 0x1
 3746 0baf 9C       		.byte	0x9c
 3747 0bb0 0A0C0000 		.4byte	0xc0a
 3748 0bb4 07       		.uleb128 0x7
 3749 0bb5 49030000 		.4byte	.LASF28
 3750 0bb9 01       		.byte	0x1
 3751 0bba 5406     		.2byte	0x654
 3752 0bbc A6020000 		.4byte	0x2a6
 3753 0bc0 31160000 		.4byte	.LLST99
 3754 0bc4 07       		.uleb128 0x7
 3755 0bc5 67020000 		.4byte	.LASF103
 3756 0bc9 01       		.byte	0x1
 3757 0bca 5506     		.2byte	0x655
 3758 0bcc 2C000000 		.4byte	0x2c
 3759 0bd0 52160000 		.4byte	.LLST100
 3760 0bd4 07       		.uleb128 0x7
 3761 0bd5 31010000 		.4byte	.LASF104
 3762 0bd9 01       		.byte	0x1
 3763 0bda 5606     		.2byte	0x656
 3764 0bdc 2C000000 		.4byte	0x2c
 3765 0be0 73160000 		.4byte	.LLST101
 3766 0be4 0F       		.uleb128 0xf
 3767 0be5 4E030000 		.4byte	.LASF72
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 144


 3768 0be9 01       		.byte	0x1
 3769 0bea 5806     		.2byte	0x658
 3770 0bec A6020000 		.4byte	0x2a6
 3771 0bf0 01       		.uleb128 0x1
 3772 0bf1 50       		.byte	0x50
 3773 0bf2 0C       		.uleb128 0xc
 3774 0bf3 0A000000 		.4byte	.LVL322
 3775 0bf7 230B0000 		.4byte	0xb23
 3776 0bfb 0D       		.uleb128 0xd
 3777 0bfc 01       		.uleb128 0x1
 3778 0bfd 50       		.byte	0x50
 3779 0bfe 03       		.uleb128 0x3
 3780 0bff F3       		.byte	0xf3
 3781 0c00 01       		.uleb128 0x1
 3782 0c01 50       		.byte	0x50
 3783 0c02 0D       		.uleb128 0xd
 3784 0c03 01       		.uleb128 0x1
 3785 0c04 53       		.byte	0x53
 3786 0c05 02       		.uleb128 0x2
 3787 0c06 09       		.byte	0x9
 3788 0c07 FF       		.byte	0xff
 3789 0c08 00       		.byte	0
 3790 0c09 00       		.byte	0
 3791 0c0a 13       		.uleb128 0x13
 3792 0c0b 92030000 		.4byte	.LASF106
 3793 0c0f 01       		.byte	0x1
 3794 0c10 4907     		.2byte	0x749
 3795 0c12 A6020000 		.4byte	0x2a6
 3796 0c16 00000000 		.4byte	.LFB18
 3797 0c1a 9A000000 		.4byte	.LFE18-.LFB18
 3798 0c1e 01       		.uleb128 0x1
 3799 0c1f 9C       		.byte	0x9c
 3800 0c20 360D0000 		.4byte	0xd36
 3801 0c24 07       		.uleb128 0x7
 3802 0c25 49030000 		.4byte	.LASF28
 3803 0c29 01       		.byte	0x1
 3804 0c2a 4907     		.2byte	0x749
 3805 0c2c 61040000 		.4byte	0x461
 3806 0c30 94160000 		.4byte	.LLST102
 3807 0c34 07       		.uleb128 0x7
 3808 0c35 CD040000 		.4byte	.LASF107
 3809 0c39 01       		.byte	0x1
 3810 0c3a 4A07     		.2byte	0x74a
 3811 0c3c 61040000 		.4byte	0x461
 3812 0c40 F7160000 		.4byte	.LLST103
 3813 0c44 07       		.uleb128 0x7
 3814 0c45 A4000000 		.4byte	.LASF61
 3815 0c49 01       		.byte	0x1
 3816 0c4a 4B07     		.2byte	0x74b
 3817 0c4c CA000000 		.4byte	0xca
 3818 0c50 2B170000 		.4byte	.LLST104
 3819 0c54 0A       		.uleb128 0xa
 3820 0c55 11030000 		.4byte	.LASF100
 3821 0c59 01       		.byte	0x1
 3822 0c5a 4D07     		.2byte	0x74d
 3823 0c5c CA000000 		.4byte	0xca
 3824 0c60 65170000 		.4byte	.LLST105
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 145


 3825 0c64 0A       		.uleb128 0xa
 3826 0c65 DB050000 		.4byte	.LASF108
 3827 0c69 01       		.byte	0x1
 3828 0c6a 4E07     		.2byte	0x74e
 3829 0c6c CA000000 		.4byte	0xca
 3830 0c70 8E170000 		.4byte	.LLST106
 3831 0c74 0A       		.uleb128 0xa
 3832 0c75 7A010000 		.4byte	.LASF109
 3833 0c79 01       		.byte	0x1
 3834 0c7a 4F07     		.2byte	0x74f
 3835 0c7c CA000000 		.4byte	0xca
 3836 0c80 04180000 		.4byte	.LLST107
 3837 0c84 0A       		.uleb128 0xa
 3838 0c85 1F000000 		.4byte	.LASF110
 3839 0c89 01       		.byte	0x1
 3840 0c8a 5007     		.2byte	0x750
 3841 0c8c CA000000 		.4byte	0xca
 3842 0c90 22180000 		.4byte	.LLST108
 3843 0c94 0A       		.uleb128 0xa
 3844 0c95 6C050000 		.4byte	.LASF111
 3845 0c99 01       		.byte	0x1
 3846 0c9a 5107     		.2byte	0x751
 3847 0c9c CA000000 		.4byte	0xca
 3848 0ca0 40180000 		.4byte	.LLST109
 3849 0ca4 0A       		.uleb128 0xa
 3850 0ca5 3F030000 		.4byte	.LASF112
 3851 0ca9 01       		.byte	0x1
 3852 0caa 5207     		.2byte	0x752
 3853 0cac 3E000000 		.4byte	0x3e
 3854 0cb0 6A180000 		.4byte	.LLST110
 3855 0cb4 0A       		.uleb128 0xa
 3856 0cb5 C1050000 		.4byte	.LASF113
 3857 0cb9 01       		.byte	0x1
 3858 0cba 5307     		.2byte	0x753
 3859 0cbc 69000000 		.4byte	0x69
 3860 0cc0 94180000 		.4byte	.LLST111
 3861 0cc4 0A       		.uleb128 0xa
 3862 0cc5 89060000 		.4byte	.LASF114
 3863 0cc9 01       		.byte	0x1
 3864 0cca 5407     		.2byte	0x754
 3865 0ccc 61040000 		.4byte	0x461
 3866 0cd0 B2180000 		.4byte	.LLST112
 3867 0cd4 0A       		.uleb128 0xa
 3868 0cd5 CD030000 		.4byte	.LASF115
 3869 0cd9 01       		.byte	0x1
 3870 0cda 5507     		.2byte	0x755
 3871 0cdc 61040000 		.4byte	0x461
 3872 0ce0 1A190000 		.4byte	.LLST113
 3873 0ce4 11       		.uleb128 0x11
 3874 0ce5 24000000 		.4byte	.LVL327
 3875 0ce9 78040000 		.4byte	0x478
 3876 0ced FF0C0000 		.4byte	0xcff
 3877 0cf1 0D       		.uleb128 0xd
 3878 0cf2 01       		.uleb128 0x1
 3879 0cf3 50       		.byte	0x50
 3880 0cf4 02       		.uleb128 0x2
 3881 0cf5 77       		.byte	0x77
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 146


 3882 0cf6 00       		.sleb128 0
 3883 0cf7 0D       		.uleb128 0xd
 3884 0cf8 01       		.uleb128 0x1
 3885 0cf9 51       		.byte	0x51
 3886 0cfa 03       		.uleb128 0x3
 3887 0cfb F3       		.byte	0xf3
 3888 0cfc 01       		.uleb128 0x1
 3889 0cfd 52       		.byte	0x52
 3890 0cfe 00       		.byte	0
 3891 0cff 11       		.uleb128 0x11
 3892 0d00 2E000000 		.4byte	.LVL330
 3893 0d04 78040000 		.4byte	0x478
 3894 0d08 190D0000 		.4byte	0xd19
 3895 0d0c 0D       		.uleb128 0xd
 3896 0d0d 01       		.uleb128 0x1
 3897 0d0e 50       		.byte	0x50
 3898 0d0f 02       		.uleb128 0x2
 3899 0d10 76       		.byte	0x76
 3900 0d11 00       		.sleb128 0
 3901 0d12 0D       		.uleb128 0xd
 3902 0d13 01       		.uleb128 0x1
 3903 0d14 51       		.byte	0x51
 3904 0d15 02       		.uleb128 0x2
 3905 0d16 74       		.byte	0x74
 3906 0d17 00       		.sleb128 0
 3907 0d18 00       		.byte	0
 3908 0d19 0C       		.uleb128 0xc
 3909 0d1a 52000000 		.4byte	.LVL336
 3910 0d1e E2060000 		.4byte	0x6e2
 3911 0d22 0D       		.uleb128 0xd
 3912 0d23 01       		.uleb128 0x1
 3913 0d24 50       		.byte	0x50
 3914 0d25 02       		.uleb128 0x2
 3915 0d26 75       		.byte	0x75
 3916 0d27 00       		.sleb128 0
 3917 0d28 0D       		.uleb128 0xd
 3918 0d29 01       		.uleb128 0x1
 3919 0d2a 51       		.byte	0x51
 3920 0d2b 02       		.uleb128 0x2
 3921 0d2c 76       		.byte	0x76
 3922 0d2d 00       		.sleb128 0
 3923 0d2e 0D       		.uleb128 0xd
 3924 0d2f 01       		.uleb128 0x1
 3925 0d30 52       		.byte	0x52
 3926 0d31 02       		.uleb128 0x2
 3927 0d32 79       		.byte	0x79
 3928 0d33 00       		.sleb128 0
 3929 0d34 00       		.byte	0
 3930 0d35 00       		.byte	0
 3931 0d36 13       		.uleb128 0x13
 3932 0d37 53040000 		.4byte	.LASF116
 3933 0d3b 01       		.byte	0x1
 3934 0d3c F406     		.2byte	0x6f4
 3935 0d3e A6020000 		.4byte	0x2a6
 3936 0d42 00000000 		.4byte	.LFB17
 3937 0d46 0C000000 		.4byte	.LFE17-.LFB17
 3938 0d4a 01       		.uleb128 0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 147


 3939 0d4b 9C       		.byte	0x9c
 3940 0d4c 9D0D0000 		.4byte	0xd9d
 3941 0d50 07       		.uleb128 0x7
 3942 0d51 49030000 		.4byte	.LASF28
 3943 0d55 01       		.byte	0x1
 3944 0d56 F406     		.2byte	0x6f4
 3945 0d58 61040000 		.4byte	0x461
 3946 0d5c 38190000 		.4byte	.LLST114
 3947 0d60 07       		.uleb128 0x7
 3948 0d61 CD040000 		.4byte	.LASF107
 3949 0d65 01       		.byte	0x1
 3950 0d66 F506     		.2byte	0x6f5
 3951 0d68 61040000 		.4byte	0x461
 3952 0d6c 59190000 		.4byte	.LLST115
 3953 0d70 0F       		.uleb128 0xf
 3954 0d71 4E030000 		.4byte	.LASF72
 3955 0d75 01       		.byte	0x1
 3956 0d76 F706     		.2byte	0x6f7
 3957 0d78 A6020000 		.4byte	0x2a6
 3958 0d7c 01       		.uleb128 0x1
 3959 0d7d 50       		.byte	0x50
 3960 0d7e 0C       		.uleb128 0xc
 3961 0d7f 0A000000 		.4byte	.LVL357
 3962 0d83 0A0C0000 		.4byte	0xc0a
 3963 0d87 0D       		.uleb128 0xd
 3964 0d88 01       		.uleb128 0x1
 3965 0d89 50       		.byte	0x50
 3966 0d8a 03       		.uleb128 0x3
 3967 0d8b F3       		.byte	0xf3
 3968 0d8c 01       		.uleb128 0x1
 3969 0d8d 50       		.byte	0x50
 3970 0d8e 0D       		.uleb128 0xd
 3971 0d8f 01       		.uleb128 0x1
 3972 0d90 51       		.byte	0x51
 3973 0d91 03       		.uleb128 0x3
 3974 0d92 F3       		.byte	0xf3
 3975 0d93 01       		.uleb128 0x1
 3976 0d94 51       		.byte	0x51
 3977 0d95 0D       		.uleb128 0xd
 3978 0d96 01       		.uleb128 0x1
 3979 0d97 52       		.byte	0x52
 3980 0d98 02       		.uleb128 0x2
 3981 0d99 09       		.byte	0x9
 3982 0d9a FF       		.byte	0xff
 3983 0d9b 00       		.byte	0
 3984 0d9c 00       		.byte	0
 3985 0d9d 13       		.uleb128 0x13
 3986 0d9e CE060000 		.4byte	.LASF117
 3987 0da2 01       		.byte	0x1
 3988 0da3 0B08     		.2byte	0x80b
 3989 0da5 A6020000 		.4byte	0x2a6
 3990 0da9 00000000 		.4byte	.LFB19
 3991 0dad 20000000 		.4byte	.LFE19-.LFB19
 3992 0db1 01       		.uleb128 0x1
 3993 0db2 9C       		.byte	0x9c
 3994 0db3 610E0000 		.4byte	0xe61
 3995 0db7 06       		.uleb128 0x6
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 148


 3996 0db8 6E627200 		.ascii	"nbr\000"
 3997 0dbc 01       		.byte	0x1
 3998 0dbd 0B08     		.2byte	0x80b
 3999 0dbf 7B000000 		.4byte	0x7b
 4000 0dc3 7A190000 		.4byte	.LLST116
 4001 0dc7 07       		.uleb128 0x7
 4002 0dc8 A9050000 		.4byte	.LASF23
 4003 0dcc 01       		.byte	0x1
 4004 0dcd 0C08     		.2byte	0x80c
 4005 0dcf 50000000 		.4byte	0x50
 4006 0dd3 9B190000 		.4byte	.LLST117
 4007 0dd7 07       		.uleb128 0x7
 4008 0dd8 4A040000 		.4byte	.LASF24
 4009 0ddc 01       		.byte	0x1
 4010 0ddd 0D08     		.2byte	0x80d
 4011 0ddf 50000000 		.4byte	0x50
 4012 0de3 BC190000 		.4byte	.LLST118
 4013 0de7 07       		.uleb128 0x7
 4014 0de8 69000000 		.4byte	.LASF26
 4015 0dec 01       		.byte	0x1
 4016 0ded 0E08     		.2byte	0x80e
 4017 0def 2C000000 		.4byte	0x2c
 4018 0df3 DD190000 		.4byte	.LLST119
 4019 0df7 08       		.uleb128 0x8
 4020 0df8 C5020000 		.4byte	.LASF27
 4021 0dfc 01       		.byte	0x1
 4022 0dfd 0F08     		.2byte	0x80f
 4023 0dff 3E000000 		.4byte	0x3e
 4024 0e03 02       		.uleb128 0x2
 4025 0e04 91       		.byte	0x91
 4026 0e05 00       		.sleb128 0
 4027 0e06 09       		.uleb128 0x9
 4028 0e07 6E756C00 		.ascii	"nul\000"
 4029 0e0b 01       		.byte	0x1
 4030 0e0c 1008     		.2byte	0x810
 4031 0e0e 3E000000 		.4byte	0x3e
 4032 0e12 02       		.uleb128 0x2
 4033 0e13 91       		.byte	0x91
 4034 0e14 04       		.sleb128 4
 4035 0e15 08       		.uleb128 0x8
 4036 0e16 49030000 		.4byte	.LASF28
 4037 0e1a 01       		.byte	0x1
 4038 0e1b 1108     		.2byte	0x811
 4039 0e1d A6020000 		.4byte	0x2a6
 4040 0e21 02       		.uleb128 0x2
 4041 0e22 91       		.byte	0x91
 4042 0e23 08       		.sleb128 8
 4043 0e24 0F       		.uleb128 0xf
 4044 0e25 52020000 		.4byte	.LASF29
 4045 0e29 01       		.byte	0x1
 4046 0e2a 1308     		.2byte	0x813
 4047 0e2c A6020000 		.4byte	0x2a6
 4048 0e30 01       		.uleb128 0x1
 4049 0e31 50       		.byte	0x50
 4050 0e32 0C       		.uleb128 0xc
 4051 0e33 1C000000 		.4byte	.LVL360
 4052 0e37 F1000000 		.4byte	0xf1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 149


 4053 0e3b 0D       		.uleb128 0xd
 4054 0e3c 01       		.uleb128 0x1
 4055 0e3d 50       		.byte	0x50
 4056 0e3e 03       		.uleb128 0x3
 4057 0e3f F3       		.byte	0xf3
 4058 0e40 01       		.uleb128 0x1
 4059 0e41 50       		.byte	0x50
 4060 0e42 0D       		.uleb128 0xd
 4061 0e43 01       		.uleb128 0x1
 4062 0e44 53       		.byte	0x53
 4063 0e45 01       		.uleb128 0x1
 4064 0e46 30       		.byte	0x30
 4065 0e47 0D       		.uleb128 0xd
 4066 0e48 02       		.uleb128 0x2
 4067 0e49 7D       		.byte	0x7d
 4068 0e4a 04       		.sleb128 4
 4069 0e4b 02       		.uleb128 0x2
 4070 0e4c 74       		.byte	0x74
 4071 0e4d 00       		.sleb128 0
 4072 0e4e 0D       		.uleb128 0xd
 4073 0e4f 02       		.uleb128 0x2
 4074 0e50 7D       		.byte	0x7d
 4075 0e51 08       		.sleb128 8
 4076 0e52 04       		.uleb128 0x4
 4077 0e53 91       		.byte	0x91
 4078 0e54 04       		.sleb128 4
 4079 0e55 94       		.byte	0x94
 4080 0e56 01       		.byte	0x1
 4081 0e57 0D       		.uleb128 0xd
 4082 0e58 02       		.uleb128 0x2
 4083 0e59 7D       		.byte	0x7d
 4084 0e5a 0C       		.sleb128 12
 4085 0e5b 03       		.uleb128 0x3
 4086 0e5c 91       		.byte	0x91
 4087 0e5d 08       		.sleb128 8
 4088 0e5e 06       		.byte	0x6
 4089 0e5f 00       		.byte	0
 4090 0e60 00       		.byte	0
 4091 0e61 13       		.uleb128 0x13
 4092 0e62 BC060000 		.4byte	.LASF118
 4093 0e66 01       		.byte	0x1
 4094 0e67 E408     		.2byte	0x8e4
 4095 0e69 A6020000 		.4byte	0x2a6
 4096 0e6d 00000000 		.4byte	.LFB20
 4097 0e71 2C000000 		.4byte	.LFE20-.LFB20
 4098 0e75 01       		.uleb128 0x1
 4099 0e76 9C       		.byte	0x9c
 4100 0e77 3F0F0000 		.4byte	0xf3f
 4101 0e7b 06       		.uleb128 0x6
 4102 0e7c 6E627200 		.ascii	"nbr\000"
 4103 0e80 01       		.byte	0x1
 4104 0e81 E408     		.2byte	0x8e4
 4105 0e83 86000000 		.4byte	0x86
 4106 0e87 FE190000 		.4byte	.LLST120
 4107 0e8b 07       		.uleb128 0x7
 4108 0e8c A9050000 		.4byte	.LASF23
 4109 0e90 01       		.byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 150


 4110 0e91 E508     		.2byte	0x8e5
 4111 0e93 50000000 		.4byte	0x50
 4112 0e97 381A0000 		.4byte	.LLST121
 4113 0e9b 07       		.uleb128 0x7
 4114 0e9c 4A040000 		.4byte	.LASF24
 4115 0ea0 01       		.byte	0x1
 4116 0ea1 E608     		.2byte	0x8e6
 4117 0ea3 50000000 		.4byte	0x50
 4118 0ea7 591A0000 		.4byte	.LLST122
 4119 0eab 07       		.uleb128 0x7
 4120 0eac 69000000 		.4byte	.LASF26
 4121 0eb0 01       		.byte	0x1
 4122 0eb1 E708     		.2byte	0x8e7
 4123 0eb3 2C000000 		.4byte	0x2c
 4124 0eb7 7A1A0000 		.4byte	.LLST123
 4125 0ebb 08       		.uleb128 0x8
 4126 0ebc C5020000 		.4byte	.LASF27
 4127 0ec0 01       		.byte	0x1
 4128 0ec1 E808     		.2byte	0x8e8
 4129 0ec3 3E000000 		.4byte	0x3e
 4130 0ec7 02       		.uleb128 0x2
 4131 0ec8 91       		.byte	0x91
 4132 0ec9 00       		.sleb128 0
 4133 0eca 09       		.uleb128 0x9
 4134 0ecb 6E756C00 		.ascii	"nul\000"
 4135 0ecf 01       		.byte	0x1
 4136 0ed0 E908     		.2byte	0x8e9
 4137 0ed2 3E000000 		.4byte	0x3e
 4138 0ed6 02       		.uleb128 0x2
 4139 0ed7 91       		.byte	0x91
 4140 0ed8 04       		.sleb128 4
 4141 0ed9 08       		.uleb128 0x8
 4142 0eda 49030000 		.4byte	.LASF28
 4143 0ede 01       		.byte	0x1
 4144 0edf EA08     		.2byte	0x8ea
 4145 0ee1 A6020000 		.4byte	0x2a6
 4146 0ee5 02       		.uleb128 0x2
 4147 0ee6 91       		.byte	0x91
 4148 0ee7 08       		.sleb128 8
 4149 0ee8 0F       		.uleb128 0xf
 4150 0ee9 52020000 		.4byte	.LASF29
 4151 0eed 01       		.byte	0x1
 4152 0eee EC08     		.2byte	0x8ec
 4153 0ef0 A6020000 		.4byte	0x2a6
 4154 0ef4 01       		.uleb128 0x1
 4155 0ef5 50       		.byte	0x50
 4156 0ef6 0A       		.uleb128 0xa
 4157 0ef7 62060000 		.4byte	.LASF30
 4158 0efb 01       		.byte	0x1
 4159 0efc ED08     		.2byte	0x8ed
 4160 0efe 86000000 		.4byte	0x86
 4161 0f02 9B1A0000 		.4byte	.LLST124
 4162 0f06 0A       		.uleb128 0xa
 4163 0f07 57030000 		.4byte	.LASF25
 4164 0f0b 01       		.byte	0x1
 4165 0f0c EE08     		.2byte	0x8ee
 4166 0f0e 3E000000 		.4byte	0x3e
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 151


 4167 0f12 B91A0000 		.4byte	.LLST125
 4168 0f16 0C       		.uleb128 0xc
 4169 0f17 28000000 		.4byte	.LVL366
 4170 0f1b F1000000 		.4byte	0xf1
 4171 0f1f 0D       		.uleb128 0xd
 4172 0f20 01       		.uleb128 0x1
 4173 0f21 53       		.byte	0x53
 4174 0f22 02       		.uleb128 0x2
 4175 0f23 75       		.byte	0x75
 4176 0f24 00       		.sleb128 0
 4177 0f25 0D       		.uleb128 0xd
 4178 0f26 02       		.uleb128 0x2
 4179 0f27 7D       		.byte	0x7d
 4180 0f28 04       		.sleb128 4
 4181 0f29 02       		.uleb128 0x2
 4182 0f2a 74       		.byte	0x74
 4183 0f2b 00       		.sleb128 0
 4184 0f2c 0D       		.uleb128 0xd
 4185 0f2d 02       		.uleb128 0x2
 4186 0f2e 7D       		.byte	0x7d
 4187 0f2f 08       		.sleb128 8
 4188 0f30 04       		.uleb128 0x4
 4189 0f31 91       		.byte	0x91
 4190 0f32 04       		.sleb128 4
 4191 0f33 94       		.byte	0x94
 4192 0f34 01       		.byte	0x1
 4193 0f35 0D       		.uleb128 0xd
 4194 0f36 02       		.uleb128 0x2
 4195 0f37 7D       		.byte	0x7d
 4196 0f38 0C       		.sleb128 12
 4197 0f39 03       		.uleb128 0x3
 4198 0f3a 91       		.byte	0x91
 4199 0f3b 08       		.sleb128 8
 4200 0f3c 06       		.byte	0x6
 4201 0f3d 00       		.byte	0
 4202 0f3e 00       		.byte	0
 4203 0f3f 13       		.uleb128 0x13
 4204 0f40 DA030000 		.4byte	.LASF119
 4205 0f44 01       		.byte	0x1
 4206 0f45 B70B     		.2byte	0xbb7
 4207 0f47 7B000000 		.4byte	0x7b
 4208 0f4b 00000000 		.4byte	.LFB21
 4209 0f4f 12000000 		.4byte	.LFE21-.LFB21
 4210 0f53 01       		.uleb128 0x1
 4211 0f54 9C       		.byte	0x9c
 4212 0f55 BB0F0000 		.4byte	0xfbb
 4213 0f59 07       		.uleb128 0x7
 4214 0f5a 49030000 		.4byte	.LASF28
 4215 0f5e 01       		.byte	0x1
 4216 0f5f B70B     		.2byte	0xbb7
 4217 0f61 61040000 		.4byte	0x461
 4218 0f65 D81A0000 		.4byte	.LLST126
 4219 0f69 07       		.uleb128 0x7
 4220 0f6a 57000000 		.4byte	.LASF47
 4221 0f6e 01       		.byte	0x1
 4222 0f6f B80B     		.2byte	0xbb8
 4223 0f71 6C040000 		.4byte	0x46c
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 152


 4224 0f75 F91A0000 		.4byte	.LLST127
 4225 0f79 07       		.uleb128 0x7
 4226 0f7a 4A040000 		.4byte	.LASF24
 4227 0f7e 01       		.byte	0x1
 4228 0f7f B90B     		.2byte	0xbb9
 4229 0f81 50000000 		.4byte	0x50
 4230 0f85 1A1B0000 		.4byte	.LLST128
 4231 0f89 18       		.uleb128 0x18
 4232 0f8a 6E627200 		.ascii	"nbr\000"
 4233 0f8e 01       		.byte	0x1
 4234 0f8f BB0B     		.2byte	0xbbb
 4235 0f91 7B000000 		.4byte	0x7b
 4236 0f95 01       		.uleb128 0x1
 4237 0f96 50       		.byte	0x50
 4238 0f97 0C       		.uleb128 0xc
 4239 0f98 0C000000 		.4byte	.LVL368
 4240 0f9c AC020000 		.4byte	0x2ac
 4241 0fa0 0D       		.uleb128 0xd
 4242 0fa1 01       		.uleb128 0x1
 4243 0fa2 50       		.byte	0x50
 4244 0fa3 03       		.uleb128 0x3
 4245 0fa4 F3       		.byte	0xf3
 4246 0fa5 01       		.uleb128 0x1
 4247 0fa6 50       		.byte	0x50
 4248 0fa7 0D       		.uleb128 0xd
 4249 0fa8 01       		.uleb128 0x1
 4250 0fa9 51       		.byte	0x51
 4251 0faa 03       		.uleb128 0x3
 4252 0fab F3       		.byte	0xf3
 4253 0fac 01       		.uleb128 0x1
 4254 0fad 51       		.byte	0x51
 4255 0fae 0D       		.uleb128 0xd
 4256 0faf 01       		.uleb128 0x1
 4257 0fb0 53       		.byte	0x53
 4258 0fb1 01       		.uleb128 0x1
 4259 0fb2 30       		.byte	0x30
 4260 0fb3 0D       		.uleb128 0xd
 4261 0fb4 02       		.uleb128 0x2
 4262 0fb5 7D       		.byte	0x7d
 4263 0fb6 00       		.sleb128 0
 4264 0fb7 01       		.uleb128 0x1
 4265 0fb8 30       		.byte	0x30
 4266 0fb9 00       		.byte	0
 4267 0fba 00       		.byte	0
 4268 0fbb 13       		.uleb128 0x13
 4269 0fbc B9030000 		.4byte	.LASF120
 4270 0fc0 01       		.byte	0x1
 4271 0fc1 900C     		.2byte	0xc90
 4272 0fc3 86000000 		.4byte	0x86
 4273 0fc7 00000000 		.4byte	.LFB22
 4274 0fcb 32000000 		.4byte	.LFE22-.LFB22
 4275 0fcf 01       		.uleb128 0x1
 4276 0fd0 9C       		.byte	0x9c
 4277 0fd1 57100000 		.4byte	0x1057
 4278 0fd5 07       		.uleb128 0x7
 4279 0fd6 49030000 		.4byte	.LASF28
 4280 0fda 01       		.byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 153


 4281 0fdb 900C     		.2byte	0xc90
 4282 0fdd 61040000 		.4byte	0x461
 4283 0fe1 3B1B0000 		.4byte	.LLST129
 4284 0fe5 07       		.uleb128 0x7
 4285 0fe6 57000000 		.4byte	.LASF47
 4286 0fea 01       		.byte	0x1
 4287 0feb 910C     		.2byte	0xc91
 4288 0fed 6C040000 		.4byte	0x46c
 4289 0ff1 5C1B0000 		.4byte	.LLST130
 4290 0ff5 07       		.uleb128 0x7
 4291 0ff6 4A040000 		.4byte	.LASF24
 4292 0ffa 01       		.byte	0x1
 4293 0ffb 920C     		.2byte	0xc92
 4294 0ffd 50000000 		.4byte	0x50
 4295 1001 7D1B0000 		.4byte	.LLST131
 4296 1005 18       		.uleb128 0x18
 4297 1006 6E627200 		.ascii	"nbr\000"
 4298 100a 01       		.byte	0x1
 4299 100b 940C     		.2byte	0xc94
 4300 100d 86000000 		.4byte	0x86
 4301 1011 01       		.uleb128 0x1
 4302 1012 50       		.byte	0x50
 4303 1013 0A       		.uleb128 0xa
 4304 1014 20040000 		.4byte	.LASF121
 4305 1018 01       		.byte	0x1
 4306 1019 950C     		.2byte	0xc95
 4307 101b 7B000000 		.4byte	0x7b
 4308 101f 9E1B0000 		.4byte	.LLST132
 4309 1023 0F       		.uleb128 0xf
 4310 1024 57030000 		.4byte	.LASF25
 4311 1028 01       		.byte	0x1
 4312 1029 960C     		.2byte	0xc96
 4313 102b 3E000000 		.4byte	0x3e
 4314 102f 02       		.uleb128 0x2
 4315 1030 91       		.byte	0x91
 4316 1031 77       		.sleb128 -9
 4317 1032 0C       		.uleb128 0xc
 4318 1033 10000000 		.4byte	.LVL370
 4319 1037 AC020000 		.4byte	0x2ac
 4320 103b 0D       		.uleb128 0xd
 4321 103c 01       		.uleb128 0x1
 4322 103d 50       		.byte	0x50
 4323 103e 03       		.uleb128 0x3
 4324 103f F3       		.byte	0xf3
 4325 1040 01       		.uleb128 0x1
 4326 1041 50       		.byte	0x50
 4327 1042 0D       		.uleb128 0xd
 4328 1043 01       		.uleb128 0x1
 4329 1044 51       		.byte	0x51
 4330 1045 03       		.uleb128 0x3
 4331 1046 F3       		.byte	0xf3
 4332 1047 01       		.uleb128 0x1
 4333 1048 51       		.byte	0x51
 4334 1049 0D       		.uleb128 0xd
 4335 104a 01       		.uleb128 0x1
 4336 104b 53       		.byte	0x53
 4337 104c 01       		.uleb128 0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 154


 4338 104d 31       		.byte	0x31
 4339 104e 0D       		.uleb128 0xd
 4340 104f 02       		.uleb128 0x2
 4341 1050 7D       		.byte	0x7d
 4342 1051 00       		.sleb128 0
 4343 1052 02       		.uleb128 0x2
 4344 1053 91       		.byte	0x91
 4345 1054 77       		.sleb128 -9
 4346 1055 00       		.byte	0
 4347 1056 00       		.byte	0
 4348 1057 19       		.uleb128 0x19
 4349 1058 67100000 		.4byte	0x1067
 4350 105c 67100000 		.4byte	0x1067
 4351 1060 1A       		.uleb128 0x1a
 4352 1061 EA000000 		.4byte	0xea
 4353 1065 24       		.byte	0x24
 4354 1066 00       		.byte	0
 4355 1067 12       		.uleb128 0x12
 4356 1068 7B000000 		.4byte	0x7b
 4357 106c 1B       		.uleb128 0x1b
 4358 106d 9C030000 		.4byte	.LASF122
 4359 1071 01       		.byte	0x1
 4360 1072 65       		.byte	0x65
 4361 1073 7D100000 		.4byte	0x107d
 4362 1077 05       		.uleb128 0x5
 4363 1078 03       		.byte	0x3
 4364 1079 00000000 		.4byte	Str_MultOvfThTbl_Int32U
 4365 107d 12       		.uleb128 0x12
 4366 107e 57100000 		.4byte	0x1057
 4367 1082 1C       		.uleb128 0x1c
 4368 1083 42000000 		.4byte	.LASF123
 4369 1087 42000000 		.4byte	.LASF123
 4370 108b 03       		.byte	0x3
 4371 108c 3203     		.2byte	0x332
 4372 108e 1C       		.uleb128 0x1c
 4373 108f 92060000 		.4byte	.LASF124
 4374 1093 92060000 		.4byte	.LASF124
 4375 1097 03       		.byte	0x3
 4376 1098 3003     		.2byte	0x330
 4377 109a 1C       		.uleb128 0x1c
 4378 109b EE030000 		.4byte	.LASF125
 4379 109f EE030000 		.4byte	.LASF125
 4380 10a3 03       		.byte	0x3
 4381 10a4 2C03     		.2byte	0x32c
 4382 10a6 1C       		.uleb128 0x1c
 4383 10a7 CA050000 		.4byte	.LASF126
 4384 10ab CA050000 		.4byte	.LASF126
 4385 10af 03       		.byte	0x3
 4386 10b0 2203     		.2byte	0x322
 4387 10b2 1C       		.uleb128 0x1c
 4388 10b3 F3000000 		.4byte	.LASF127
 4389 10b7 F3000000 		.4byte	.LASF127
 4390 10bb 03       		.byte	0x3
 4391 10bc 2803     		.2byte	0x328
 4392 10be 1C       		.uleb128 0x1c
 4393 10bf 5B040000 		.4byte	.LASF128
 4394 10c3 5B040000 		.4byte	.LASF128
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 155


 4395 10c7 03       		.byte	0x3
 4396 10c8 2403     		.2byte	0x324
 4397 10ca 1C       		.uleb128 0x1c
 4398 10cb F1020000 		.4byte	.LASF129
 4399 10cf F1020000 		.4byte	.LASF129
 4400 10d3 03       		.byte	0x3
 4401 10d4 3B03     		.2byte	0x33b
 4402 10d6 00       		.byte	0
 4403              		.section	.debug_abbrev,"",%progbits
 4404              	.Ldebug_abbrev0:
 4405 0000 01       		.uleb128 0x1
 4406 0001 11       		.uleb128 0x11
 4407 0002 01       		.byte	0x1
 4408 0003 25       		.uleb128 0x25
 4409 0004 0E       		.uleb128 0xe
 4410 0005 13       		.uleb128 0x13
 4411 0006 0B       		.uleb128 0xb
 4412 0007 03       		.uleb128 0x3
 4413 0008 0E       		.uleb128 0xe
 4414 0009 1B       		.uleb128 0x1b
 4415 000a 0E       		.uleb128 0xe
 4416 000b 55       		.uleb128 0x55
 4417 000c 17       		.uleb128 0x17
 4418 000d 11       		.uleb128 0x11
 4419 000e 01       		.uleb128 0x1
 4420 000f 10       		.uleb128 0x10
 4421 0010 17       		.uleb128 0x17
 4422 0011 00       		.byte	0
 4423 0012 00       		.byte	0
 4424 0013 02       		.uleb128 0x2
 4425 0014 24       		.uleb128 0x24
 4426 0015 00       		.byte	0
 4427 0016 0B       		.uleb128 0xb
 4428 0017 0B       		.uleb128 0xb
 4429 0018 3E       		.uleb128 0x3e
 4430 0019 0B       		.uleb128 0xb
 4431 001a 03       		.uleb128 0x3
 4432 001b 0E       		.uleb128 0xe
 4433 001c 00       		.byte	0
 4434 001d 00       		.byte	0
 4435 001e 03       		.uleb128 0x3
 4436 001f 16       		.uleb128 0x16
 4437 0020 00       		.byte	0
 4438 0021 03       		.uleb128 0x3
 4439 0022 0E       		.uleb128 0xe
 4440 0023 3A       		.uleb128 0x3a
 4441 0024 0B       		.uleb128 0xb
 4442 0025 3B       		.uleb128 0x3b
 4443 0026 0B       		.uleb128 0xb
 4444 0027 49       		.uleb128 0x49
 4445 0028 13       		.uleb128 0x13
 4446 0029 00       		.byte	0
 4447 002a 00       		.byte	0
 4448 002b 04       		.uleb128 0x4
 4449 002c 24       		.uleb128 0x24
 4450 002d 00       		.byte	0
 4451 002e 0B       		.uleb128 0xb
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 156


 4452 002f 0B       		.uleb128 0xb
 4453 0030 3E       		.uleb128 0x3e
 4454 0031 0B       		.uleb128 0xb
 4455 0032 03       		.uleb128 0x3
 4456 0033 08       		.uleb128 0x8
 4457 0034 00       		.byte	0
 4458 0035 00       		.byte	0
 4459 0036 05       		.uleb128 0x5
 4460 0037 2E       		.uleb128 0x2e
 4461 0038 01       		.byte	0x1
 4462 0039 03       		.uleb128 0x3
 4463 003a 0E       		.uleb128 0xe
 4464 003b 3A       		.uleb128 0x3a
 4465 003c 0B       		.uleb128 0xb
 4466 003d 3B       		.uleb128 0x3b
 4467 003e 05       		.uleb128 0x5
 4468 003f 27       		.uleb128 0x27
 4469 0040 19       		.uleb128 0x19
 4470 0041 49       		.uleb128 0x49
 4471 0042 13       		.uleb128 0x13
 4472 0043 11       		.uleb128 0x11
 4473 0044 01       		.uleb128 0x1
 4474 0045 12       		.uleb128 0x12
 4475 0046 06       		.uleb128 0x6
 4476 0047 40       		.uleb128 0x40
 4477 0048 18       		.uleb128 0x18
 4478 0049 9742     		.uleb128 0x2117
 4479 004b 19       		.uleb128 0x19
 4480 004c 01       		.uleb128 0x1
 4481 004d 13       		.uleb128 0x13
 4482 004e 00       		.byte	0
 4483 004f 00       		.byte	0
 4484 0050 06       		.uleb128 0x6
 4485 0051 05       		.uleb128 0x5
 4486 0052 00       		.byte	0
 4487 0053 03       		.uleb128 0x3
 4488 0054 08       		.uleb128 0x8
 4489 0055 3A       		.uleb128 0x3a
 4490 0056 0B       		.uleb128 0xb
 4491 0057 3B       		.uleb128 0x3b
 4492 0058 05       		.uleb128 0x5
 4493 0059 49       		.uleb128 0x49
 4494 005a 13       		.uleb128 0x13
 4495 005b 02       		.uleb128 0x2
 4496 005c 17       		.uleb128 0x17
 4497 005d 00       		.byte	0
 4498 005e 00       		.byte	0
 4499 005f 07       		.uleb128 0x7
 4500 0060 05       		.uleb128 0x5
 4501 0061 00       		.byte	0
 4502 0062 03       		.uleb128 0x3
 4503 0063 0E       		.uleb128 0xe
 4504 0064 3A       		.uleb128 0x3a
 4505 0065 0B       		.uleb128 0xb
 4506 0066 3B       		.uleb128 0x3b
 4507 0067 05       		.uleb128 0x5
 4508 0068 49       		.uleb128 0x49
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 157


 4509 0069 13       		.uleb128 0x13
 4510 006a 02       		.uleb128 0x2
 4511 006b 17       		.uleb128 0x17
 4512 006c 00       		.byte	0
 4513 006d 00       		.byte	0
 4514 006e 08       		.uleb128 0x8
 4515 006f 05       		.uleb128 0x5
 4516 0070 00       		.byte	0
 4517 0071 03       		.uleb128 0x3
 4518 0072 0E       		.uleb128 0xe
 4519 0073 3A       		.uleb128 0x3a
 4520 0074 0B       		.uleb128 0xb
 4521 0075 3B       		.uleb128 0x3b
 4522 0076 05       		.uleb128 0x5
 4523 0077 49       		.uleb128 0x49
 4524 0078 13       		.uleb128 0x13
 4525 0079 02       		.uleb128 0x2
 4526 007a 18       		.uleb128 0x18
 4527 007b 00       		.byte	0
 4528 007c 00       		.byte	0
 4529 007d 09       		.uleb128 0x9
 4530 007e 05       		.uleb128 0x5
 4531 007f 00       		.byte	0
 4532 0080 03       		.uleb128 0x3
 4533 0081 08       		.uleb128 0x8
 4534 0082 3A       		.uleb128 0x3a
 4535 0083 0B       		.uleb128 0xb
 4536 0084 3B       		.uleb128 0x3b
 4537 0085 05       		.uleb128 0x5
 4538 0086 49       		.uleb128 0x49
 4539 0087 13       		.uleb128 0x13
 4540 0088 02       		.uleb128 0x2
 4541 0089 18       		.uleb128 0x18
 4542 008a 00       		.byte	0
 4543 008b 00       		.byte	0
 4544 008c 0A       		.uleb128 0xa
 4545 008d 34       		.uleb128 0x34
 4546 008e 00       		.byte	0
 4547 008f 03       		.uleb128 0x3
 4548 0090 0E       		.uleb128 0xe
 4549 0091 3A       		.uleb128 0x3a
 4550 0092 0B       		.uleb128 0xb
 4551 0093 3B       		.uleb128 0x3b
 4552 0094 05       		.uleb128 0x5
 4553 0095 49       		.uleb128 0x49
 4554 0096 13       		.uleb128 0x13
 4555 0097 02       		.uleb128 0x2
 4556 0098 17       		.uleb128 0x17
 4557 0099 00       		.byte	0
 4558 009a 00       		.byte	0
 4559 009b 0B       		.uleb128 0xb
 4560 009c 34       		.uleb128 0x34
 4561 009d 00       		.byte	0
 4562 009e 03       		.uleb128 0x3
 4563 009f 08       		.uleb128 0x8
 4564 00a0 3A       		.uleb128 0x3a
 4565 00a1 0B       		.uleb128 0xb
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 158


 4566 00a2 3B       		.uleb128 0x3b
 4567 00a3 05       		.uleb128 0x5
 4568 00a4 49       		.uleb128 0x49
 4569 00a5 13       		.uleb128 0x13
 4570 00a6 02       		.uleb128 0x2
 4571 00a7 17       		.uleb128 0x17
 4572 00a8 00       		.byte	0
 4573 00a9 00       		.byte	0
 4574 00aa 0C       		.uleb128 0xc
 4575 00ab 898201   		.uleb128 0x4109
 4576 00ae 01       		.byte	0x1
 4577 00af 11       		.uleb128 0x11
 4578 00b0 01       		.uleb128 0x1
 4579 00b1 31       		.uleb128 0x31
 4580 00b2 13       		.uleb128 0x13
 4581 00b3 00       		.byte	0
 4582 00b4 00       		.byte	0
 4583 00b5 0D       		.uleb128 0xd
 4584 00b6 8A8201   		.uleb128 0x410a
 4585 00b9 00       		.byte	0
 4586 00ba 02       		.uleb128 0x2
 4587 00bb 18       		.uleb128 0x18
 4588 00bc 9142     		.uleb128 0x2111
 4589 00be 18       		.uleb128 0x18
 4590 00bf 00       		.byte	0
 4591 00c0 00       		.byte	0
 4592 00c1 0E       		.uleb128 0xe
 4593 00c2 0F       		.uleb128 0xf
 4594 00c3 00       		.byte	0
 4595 00c4 0B       		.uleb128 0xb
 4596 00c5 0B       		.uleb128 0xb
 4597 00c6 49       		.uleb128 0x49
 4598 00c7 13       		.uleb128 0x13
 4599 00c8 00       		.byte	0
 4600 00c9 00       		.byte	0
 4601 00ca 0F       		.uleb128 0xf
 4602 00cb 34       		.uleb128 0x34
 4603 00cc 00       		.byte	0
 4604 00cd 03       		.uleb128 0x3
 4605 00ce 0E       		.uleb128 0xe
 4606 00cf 3A       		.uleb128 0x3a
 4607 00d0 0B       		.uleb128 0xb
 4608 00d1 3B       		.uleb128 0x3b
 4609 00d2 05       		.uleb128 0x5
 4610 00d3 49       		.uleb128 0x49
 4611 00d4 13       		.uleb128 0x13
 4612 00d5 02       		.uleb128 0x2
 4613 00d6 18       		.uleb128 0x18
 4614 00d7 00       		.byte	0
 4615 00d8 00       		.byte	0
 4616 00d9 10       		.uleb128 0x10
 4617 00da 898201   		.uleb128 0x4109
 4618 00dd 00       		.byte	0
 4619 00de 11       		.uleb128 0x11
 4620 00df 01       		.uleb128 0x1
 4621 00e0 31       		.uleb128 0x31
 4622 00e1 13       		.uleb128 0x13
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 159


 4623 00e2 00       		.byte	0
 4624 00e3 00       		.byte	0
 4625 00e4 11       		.uleb128 0x11
 4626 00e5 898201   		.uleb128 0x4109
 4627 00e8 01       		.byte	0x1
 4628 00e9 11       		.uleb128 0x11
 4629 00ea 01       		.uleb128 0x1
 4630 00eb 31       		.uleb128 0x31
 4631 00ec 13       		.uleb128 0x13
 4632 00ed 01       		.uleb128 0x1
 4633 00ee 13       		.uleb128 0x13
 4634 00ef 00       		.byte	0
 4635 00f0 00       		.byte	0
 4636 00f1 12       		.uleb128 0x12
 4637 00f2 26       		.uleb128 0x26
 4638 00f3 00       		.byte	0
 4639 00f4 49       		.uleb128 0x49
 4640 00f5 13       		.uleb128 0x13
 4641 00f6 00       		.byte	0
 4642 00f7 00       		.byte	0
 4643 00f8 13       		.uleb128 0x13
 4644 00f9 2E       		.uleb128 0x2e
 4645 00fa 01       		.byte	0x1
 4646 00fb 3F       		.uleb128 0x3f
 4647 00fc 19       		.uleb128 0x19
 4648 00fd 03       		.uleb128 0x3
 4649 00fe 0E       		.uleb128 0xe
 4650 00ff 3A       		.uleb128 0x3a
 4651 0100 0B       		.uleb128 0xb
 4652 0101 3B       		.uleb128 0x3b
 4653 0102 05       		.uleb128 0x5
 4654 0103 27       		.uleb128 0x27
 4655 0104 19       		.uleb128 0x19
 4656 0105 49       		.uleb128 0x49
 4657 0106 13       		.uleb128 0x13
 4658 0107 11       		.uleb128 0x11
 4659 0108 01       		.uleb128 0x1
 4660 0109 12       		.uleb128 0x12
 4661 010a 06       		.uleb128 0x6
 4662 010b 40       		.uleb128 0x40
 4663 010c 18       		.uleb128 0x18
 4664 010d 9742     		.uleb128 0x2117
 4665 010f 19       		.uleb128 0x19
 4666 0110 01       		.uleb128 0x1
 4667 0111 13       		.uleb128 0x13
 4668 0112 00       		.byte	0
 4669 0113 00       		.byte	0
 4670 0114 14       		.uleb128 0x14
 4671 0115 2E       		.uleb128 0x2e
 4672 0116 01       		.byte	0x1
 4673 0117 3F       		.uleb128 0x3f
 4674 0118 19       		.uleb128 0x19
 4675 0119 03       		.uleb128 0x3
 4676 011a 0E       		.uleb128 0xe
 4677 011b 3A       		.uleb128 0x3a
 4678 011c 0B       		.uleb128 0xb
 4679 011d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 160


 4680 011e 0B       		.uleb128 0xb
 4681 011f 27       		.uleb128 0x27
 4682 0120 19       		.uleb128 0x19
 4683 0121 49       		.uleb128 0x49
 4684 0122 13       		.uleb128 0x13
 4685 0123 11       		.uleb128 0x11
 4686 0124 01       		.uleb128 0x1
 4687 0125 12       		.uleb128 0x12
 4688 0126 06       		.uleb128 0x6
 4689 0127 40       		.uleb128 0x40
 4690 0128 18       		.uleb128 0x18
 4691 0129 9742     		.uleb128 0x2117
 4692 012b 19       		.uleb128 0x19
 4693 012c 01       		.uleb128 0x1
 4694 012d 13       		.uleb128 0x13
 4695 012e 00       		.byte	0
 4696 012f 00       		.byte	0
 4697 0130 15       		.uleb128 0x15
 4698 0131 05       		.uleb128 0x5
 4699 0132 00       		.byte	0
 4700 0133 03       		.uleb128 0x3
 4701 0134 0E       		.uleb128 0xe
 4702 0135 3A       		.uleb128 0x3a
 4703 0136 0B       		.uleb128 0xb
 4704 0137 3B       		.uleb128 0x3b
 4705 0138 0B       		.uleb128 0xb
 4706 0139 49       		.uleb128 0x49
 4707 013a 13       		.uleb128 0x13
 4708 013b 02       		.uleb128 0x2
 4709 013c 17       		.uleb128 0x17
 4710 013d 00       		.byte	0
 4711 013e 00       		.byte	0
 4712 013f 16       		.uleb128 0x16
 4713 0140 34       		.uleb128 0x34
 4714 0141 00       		.byte	0
 4715 0142 03       		.uleb128 0x3
 4716 0143 08       		.uleb128 0x8
 4717 0144 3A       		.uleb128 0x3a
 4718 0145 0B       		.uleb128 0xb
 4719 0146 3B       		.uleb128 0x3b
 4720 0147 0B       		.uleb128 0xb
 4721 0148 49       		.uleb128 0x49
 4722 0149 13       		.uleb128 0x13
 4723 014a 02       		.uleb128 0x2
 4724 014b 18       		.uleb128 0x18
 4725 014c 00       		.byte	0
 4726 014d 00       		.byte	0
 4727 014e 17       		.uleb128 0x17
 4728 014f 34       		.uleb128 0x34
 4729 0150 00       		.byte	0
 4730 0151 03       		.uleb128 0x3
 4731 0152 0E       		.uleb128 0xe
 4732 0153 3A       		.uleb128 0x3a
 4733 0154 0B       		.uleb128 0xb
 4734 0155 3B       		.uleb128 0x3b
 4735 0156 05       		.uleb128 0x5
 4736 0157 49       		.uleb128 0x49
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 161


 4737 0158 13       		.uleb128 0x13
 4738 0159 00       		.byte	0
 4739 015a 00       		.byte	0
 4740 015b 18       		.uleb128 0x18
 4741 015c 34       		.uleb128 0x34
 4742 015d 00       		.byte	0
 4743 015e 03       		.uleb128 0x3
 4744 015f 08       		.uleb128 0x8
 4745 0160 3A       		.uleb128 0x3a
 4746 0161 0B       		.uleb128 0xb
 4747 0162 3B       		.uleb128 0x3b
 4748 0163 05       		.uleb128 0x5
 4749 0164 49       		.uleb128 0x49
 4750 0165 13       		.uleb128 0x13
 4751 0166 02       		.uleb128 0x2
 4752 0167 18       		.uleb128 0x18
 4753 0168 00       		.byte	0
 4754 0169 00       		.byte	0
 4755 016a 19       		.uleb128 0x19
 4756 016b 01       		.uleb128 0x1
 4757 016c 01       		.byte	0x1
 4758 016d 49       		.uleb128 0x49
 4759 016e 13       		.uleb128 0x13
 4760 016f 01       		.uleb128 0x1
 4761 0170 13       		.uleb128 0x13
 4762 0171 00       		.byte	0
 4763 0172 00       		.byte	0
 4764 0173 1A       		.uleb128 0x1a
 4765 0174 21       		.uleb128 0x21
 4766 0175 00       		.byte	0
 4767 0176 49       		.uleb128 0x49
 4768 0177 13       		.uleb128 0x13
 4769 0178 2F       		.uleb128 0x2f
 4770 0179 0B       		.uleb128 0xb
 4771 017a 00       		.byte	0
 4772 017b 00       		.byte	0
 4773 017c 1B       		.uleb128 0x1b
 4774 017d 34       		.uleb128 0x34
 4775 017e 00       		.byte	0
 4776 017f 03       		.uleb128 0x3
 4777 0180 0E       		.uleb128 0xe
 4778 0181 3A       		.uleb128 0x3a
 4779 0182 0B       		.uleb128 0xb
 4780 0183 3B       		.uleb128 0x3b
 4781 0184 0B       		.uleb128 0xb
 4782 0185 49       		.uleb128 0x49
 4783 0186 13       		.uleb128 0x13
 4784 0187 02       		.uleb128 0x2
 4785 0188 18       		.uleb128 0x18
 4786 0189 00       		.byte	0
 4787 018a 00       		.byte	0
 4788 018b 1C       		.uleb128 0x1c
 4789 018c 2E       		.uleb128 0x2e
 4790 018d 00       		.byte	0
 4791 018e 3F       		.uleb128 0x3f
 4792 018f 19       		.uleb128 0x19
 4793 0190 3C       		.uleb128 0x3c
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 162


 4794 0191 19       		.uleb128 0x19
 4795 0192 6E       		.uleb128 0x6e
 4796 0193 0E       		.uleb128 0xe
 4797 0194 03       		.uleb128 0x3
 4798 0195 0E       		.uleb128 0xe
 4799 0196 3A       		.uleb128 0x3a
 4800 0197 0B       		.uleb128 0xb
 4801 0198 3B       		.uleb128 0x3b
 4802 0199 05       		.uleb128 0x5
 4803 019a 00       		.byte	0
 4804 019b 00       		.byte	0
 4805 019c 00       		.byte	0
 4806              		.section	.debug_loc,"",%progbits
 4807              	.Ldebug_loc0:
 4808              	.LLST0:
 4809 0000 00000000 		.4byte	.LVL0
 4810 0004 3E000000 		.4byte	.LVL5
 4811 0008 0100     		.2byte	0x1
 4812 000a 50       		.byte	0x50
 4813 000b 3E000000 		.4byte	.LVL5
 4814 000f 9A010000 		.4byte	.LVL74
 4815 0013 0200     		.2byte	0x2
 4816 0015 91       		.byte	0x91
 4817 0016 50       		.sleb128 -48
 4818 0017 9A010000 		.4byte	.LVL74
 4819 001b 9C010000 		.4byte	.LVL75
 4820 001f 0100     		.2byte	0x1
 4821 0021 50       		.byte	0x50
 4822 0022 9C010000 		.4byte	.LVL75
 4823 0026 9E010000 		.4byte	.LVL76
 4824 002a 0400     		.2byte	0x4
 4825 002c F3       		.byte	0xf3
 4826 002d 01       		.uleb128 0x1
 4827 002e 50       		.byte	0x50
 4828 002f 9F       		.byte	0x9f
 4829 0030 9E010000 		.4byte	.LVL76
 4830 0034 A0010000 		.4byte	.LVL77
 4831 0038 0200     		.2byte	0x2
 4832 003a 91       		.byte	0x91
 4833 003b 50       		.sleb128 -48
 4834 003c A0010000 		.4byte	.LVL77
 4835 0040 A6010000 		.4byte	.LFE23
 4836 0044 0400     		.2byte	0x4
 4837 0046 F3       		.byte	0xf3
 4838 0047 01       		.uleb128 0x1
 4839 0048 50       		.byte	0x50
 4840 0049 9F       		.byte	0x9f
 4841 004a 00000000 		.4byte	0
 4842 004e 00000000 		.4byte	0
 4843              	.LLST1:
 4844 0052 00000000 		.4byte	.LVL0
 4845 0056 41000000 		.4byte	.LVL6-1
 4846 005a 0100     		.2byte	0x1
 4847 005c 51       		.byte	0x51
 4848 005d 41000000 		.4byte	.LVL6-1
 4849 0061 9A010000 		.4byte	.LVL74
 4850 0065 0400     		.2byte	0x4
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 163


 4851 0067 F3       		.byte	0xf3
 4852 0068 01       		.uleb128 0x1
 4853 0069 51       		.byte	0x51
 4854 006a 9F       		.byte	0x9f
 4855 006b 9A010000 		.4byte	.LVL74
 4856 006f 9E010000 		.4byte	.LVL76
 4857 0073 0100     		.2byte	0x1
 4858 0075 51       		.byte	0x51
 4859 0076 9E010000 		.4byte	.LVL76
 4860 007a A6010000 		.4byte	.LFE23
 4861 007e 0400     		.2byte	0x4
 4862 0080 F3       		.byte	0xf3
 4863 0081 01       		.uleb128 0x1
 4864 0082 51       		.byte	0x51
 4865 0083 9F       		.byte	0x9f
 4866 0084 00000000 		.4byte	0
 4867 0088 00000000 		.4byte	0
 4868              	.LLST2:
 4869 008c 00000000 		.4byte	.LVL0
 4870 0090 41000000 		.4byte	.LVL6-1
 4871 0094 0100     		.2byte	0x1
 4872 0096 52       		.byte	0x52
 4873 0097 41000000 		.4byte	.LVL6-1
 4874 009b 9A010000 		.4byte	.LVL74
 4875 009f 0400     		.2byte	0x4
 4876 00a1 F3       		.byte	0xf3
 4877 00a2 01       		.uleb128 0x1
 4878 00a3 52       		.byte	0x52
 4879 00a4 9F       		.byte	0x9f
 4880 00a5 9A010000 		.4byte	.LVL74
 4881 00a9 9E010000 		.4byte	.LVL76
 4882 00ad 0100     		.2byte	0x1
 4883 00af 52       		.byte	0x52
 4884 00b0 9E010000 		.4byte	.LVL76
 4885 00b4 A6010000 		.4byte	.LFE23
 4886 00b8 0400     		.2byte	0x4
 4887 00ba F3       		.byte	0xf3
 4888 00bb 01       		.uleb128 0x1
 4889 00bc 52       		.byte	0x52
 4890 00bd 9F       		.byte	0x9f
 4891 00be 00000000 		.4byte	0
 4892 00c2 00000000 		.4byte	0
 4893              	.LLST3:
 4894 00c6 00000000 		.4byte	.LVL0
 4895 00ca 41000000 		.4byte	.LVL6-1
 4896 00ce 0100     		.2byte	0x1
 4897 00d0 53       		.byte	0x53
 4898 00d1 41000000 		.4byte	.LVL6-1
 4899 00d5 9A010000 		.4byte	.LVL74
 4900 00d9 0400     		.2byte	0x4
 4901 00db F3       		.byte	0xf3
 4902 00dc 01       		.uleb128 0x1
 4903 00dd 53       		.byte	0x53
 4904 00de 9F       		.byte	0x9f
 4905 00df 9A010000 		.4byte	.LVL74
 4906 00e3 9E010000 		.4byte	.LVL76
 4907 00e7 0100     		.2byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 164


 4908 00e9 53       		.byte	0x53
 4909 00ea 9E010000 		.4byte	.LVL76
 4910 00ee A6010000 		.4byte	.LFE23
 4911 00f2 0400     		.2byte	0x4
 4912 00f4 F3       		.byte	0xf3
 4913 00f5 01       		.uleb128 0x1
 4914 00f6 53       		.byte	0x53
 4915 00f7 9F       		.byte	0x9f
 4916 00f8 00000000 		.4byte	0
 4917 00fc 00000000 		.4byte	0
 4918              	.LLST4:
 4919 0100 98000000 		.4byte	.LVL22
 4920 0104 0C010000 		.4byte	.LVL50
 4921 0108 0200     		.2byte	0x2
 4922 010a 91       		.byte	0x91
 4923 010b 0C       		.sleb128 12
 4924 010c 0C010000 		.4byte	.LVL50
 4925 0110 3C010000 		.4byte	.LVL54
 4926 0114 0100     		.2byte	0x1
 4927 0116 52       		.byte	0x52
 4928 0117 3C010000 		.4byte	.LVL54
 4929 011b 42010000 		.4byte	.LVL56
 4930 011f 0300     		.2byte	0x3
 4931 0121 72       		.byte	0x72
 4932 0122 7F       		.sleb128 -1
 4933 0123 9F       		.byte	0x9f
 4934 0124 42010000 		.4byte	.LVL56
 4935 0128 4A010000 		.4byte	.LVL58
 4936 012c 0100     		.2byte	0x1
 4937 012e 52       		.byte	0x52
 4938 012f 4A010000 		.4byte	.LVL58
 4939 0133 50010000 		.4byte	.LVL60
 4940 0137 0300     		.2byte	0x3
 4941 0139 72       		.byte	0x72
 4942 013a 7F       		.sleb128 -1
 4943 013b 9F       		.byte	0x9f
 4944 013c 50010000 		.4byte	.LVL60
 4945 0140 52010000 		.4byte	.LVL61
 4946 0144 0100     		.2byte	0x1
 4947 0146 52       		.byte	0x52
 4948 0147 52010000 		.4byte	.LVL61
 4949 014b 58010000 		.4byte	.LVL63
 4950 014f 0300     		.2byte	0x3
 4951 0151 72       		.byte	0x72
 4952 0152 7F       		.sleb128 -1
 4953 0153 9F       		.byte	0x9f
 4954 0154 58010000 		.4byte	.LVL63
 4955 0158 74010000 		.4byte	.LVL65
 4956 015c 0100     		.2byte	0x1
 4957 015e 52       		.byte	0x52
 4958 015f 74010000 		.4byte	.LVL65
 4959 0163 7A010000 		.4byte	.LVL67
 4960 0167 0300     		.2byte	0x3
 4961 0169 72       		.byte	0x72
 4962 016a 7F       		.sleb128 -1
 4963 016b 9F       		.byte	0x9f
 4964 016c 7A010000 		.4byte	.LVL67
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 165


 4965 0170 82010000 		.4byte	.LVL69
 4966 0174 0100     		.2byte	0x1
 4967 0176 52       		.byte	0x52
 4968 0177 82010000 		.4byte	.LVL69
 4969 017b 86010000 		.4byte	.LVL70
 4970 017f 0300     		.2byte	0x3
 4971 0181 72       		.byte	0x72
 4972 0182 7F       		.sleb128 -1
 4973 0183 9F       		.byte	0x9f
 4974 0184 86010000 		.4byte	.LVL70
 4975 0188 88010000 		.4byte	.LVL71
 4976 018c 0100     		.2byte	0x1
 4977 018e 52       		.byte	0x52
 4978 018f 88010000 		.4byte	.LVL71
 4979 0193 8E010000 		.4byte	.LVL72
 4980 0197 0300     		.2byte	0x3
 4981 0199 72       		.byte	0x72
 4982 019a 7F       		.sleb128 -1
 4983 019b 9F       		.byte	0x9f
 4984 019c 8E010000 		.4byte	.LVL72
 4985 01a0 9A010000 		.4byte	.LVL74
 4986 01a4 0100     		.2byte	0x1
 4987 01a6 52       		.byte	0x52
 4988 01a7 9E010000 		.4byte	.LVL76
 4989 01ab A0010000 		.4byte	.LVL77
 4990 01af 0100     		.2byte	0x1
 4991 01b1 52       		.byte	0x52
 4992 01b2 00000000 		.4byte	0
 4993 01b6 00000000 		.4byte	0
 4994              	.LLST5:
 4995 01ba 1C010000 		.4byte	.LVL51
 4996 01be 28010000 		.4byte	.LVL52
 4997 01c2 0200     		.2byte	0x2
 4998 01c4 30       		.byte	0x30
 4999 01c5 9F       		.byte	0x9f
 5000 01c6 28010000 		.4byte	.LVL52
 5001 01ca 9A010000 		.4byte	.LVL74
 5002 01ce 0100     		.2byte	0x1
 5003 01d0 53       		.byte	0x53
 5004 01d1 9E010000 		.4byte	.LVL76
 5005 01d5 A0010000 		.4byte	.LVL77
 5006 01d9 0100     		.2byte	0x1
 5007 01db 53       		.byte	0x53
 5008 01dc 00000000 		.4byte	0
 5009 01e0 00000000 		.4byte	0
 5010              	.LLST6:
 5011 01e4 FE000000 		.4byte	.LVL48
 5012 01e8 9A010000 		.4byte	.LVL74
 5013 01ec 0100     		.2byte	0x1
 5014 01ee 55       		.byte	0x55
 5015 01ef 9E010000 		.4byte	.LVL76
 5016 01f3 A0010000 		.4byte	.LVL77
 5017 01f7 0100     		.2byte	0x1
 5018 01f9 55       		.byte	0x55
 5019 01fa 00000000 		.4byte	0
 5020 01fe 00000000 		.4byte	0
 5021              	.LLST7:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 166


 5022 0202 9C000000 		.4byte	.LVL23
 5023 0206 A6000000 		.4byte	.LVL27
 5024 020a 0100     		.2byte	0x1
 5025 020c 52       		.byte	0x52
 5026 020d AA000000 		.4byte	.LVL28
 5027 0211 B6000000 		.4byte	.LVL29
 5028 0215 0100     		.2byte	0x1
 5029 0217 52       		.byte	0x52
 5030 0218 B8000000 		.4byte	.LVL30
 5031 021c BA000000 		.4byte	.LVL31
 5032 0220 0100     		.2byte	0x1
 5033 0222 52       		.byte	0x52
 5034 0223 00000000 		.4byte	0
 5035 0227 00000000 		.4byte	0
 5036              	.LLST8:
 5037 022b 9C000000 		.4byte	.LVL23
 5038 022f 9E000000 		.4byte	.LVL24
 5039 0233 0100     		.2byte	0x1
 5040 0235 53       		.byte	0x53
 5041 0236 A0000000 		.4byte	.LVL25
 5042 023a A6000000 		.4byte	.LVL27
 5043 023e 0100     		.2byte	0x1
 5044 0240 53       		.byte	0x53
 5045 0241 AA000000 		.4byte	.LVL28
 5046 0245 C8000000 		.4byte	.LVL33
 5047 0249 0100     		.2byte	0x1
 5048 024b 53       		.byte	0x53
 5049 024c EA000000 		.4byte	.LVL42
 5050 0250 F0000000 		.4byte	.LVL44
 5051 0254 0100     		.2byte	0x1
 5052 0256 53       		.byte	0x53
 5053 0257 00000000 		.4byte	0
 5054 025b 00000000 		.4byte	0
 5055              	.LLST9:
 5056 025f C8000000 		.4byte	.LVL33
 5057 0263 CC000000 		.4byte	.LVL35
 5058 0267 0100     		.2byte	0x1
 5059 0269 53       		.byte	0x53
 5060 026a D4000000 		.4byte	.LVL37
 5061 026e D6000000 		.4byte	.LVL38
 5062 0272 0100     		.2byte	0x1
 5063 0274 53       		.byte	0x53
 5064 0275 00000000 		.4byte	0
 5065 0279 00000000 		.4byte	0
 5066              	.LLST10:
 5067 027d CA000000 		.4byte	.LVL34
 5068 0281 D4000000 		.4byte	.LVL37
 5069 0285 0100     		.2byte	0x1
 5070 0287 55       		.byte	0x55
 5071 0288 DA000000 		.4byte	.LVL39
 5072 028c EA000000 		.4byte	.LVL42
 5073 0290 0100     		.2byte	0x1
 5074 0292 59       		.byte	0x59
 5075 0293 F0000000 		.4byte	.LVL44
 5076 0297 9A010000 		.4byte	.LVL74
 5077 029b 0100     		.2byte	0x1
 5078 029d 59       		.byte	0x59
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 167


 5079 029e 9E010000 		.4byte	.LVL76
 5080 02a2 A0010000 		.4byte	.LVL77
 5081 02a6 0100     		.2byte	0x1
 5082 02a8 59       		.byte	0x59
 5083 02a9 00000000 		.4byte	0
 5084 02ad 00000000 		.4byte	0
 5085              	.LLST11:
 5086 02b1 BA000000 		.4byte	.LVL31
 5087 02b5 FE000000 		.4byte	.LVL48
 5088 02b9 0100     		.2byte	0x1
 5089 02bb 52       		.byte	0x52
 5090 02bc 00000000 		.4byte	0
 5091 02c0 00000000 		.4byte	0
 5092              	.LLST12:
 5093 02c4 D0000000 		.4byte	.LVL36
 5094 02c8 D4000000 		.4byte	.LVL37
 5095 02cc 0100     		.2byte	0x1
 5096 02ce 53       		.byte	0x53
 5097 02cf DA000000 		.4byte	.LVL39
 5098 02d3 DC000000 		.4byte	.LVL40
 5099 02d7 0200     		.2byte	0x2
 5100 02d9 30       		.byte	0x30
 5101 02da 9F       		.byte	0x9f
 5102 02db DC000000 		.4byte	.LVL40
 5103 02df E6000000 		.4byte	.LVL41
 5104 02e3 0100     		.2byte	0x1
 5105 02e5 53       		.byte	0x53
 5106 02e6 F0000000 		.4byte	.LVL44
 5107 02ea F4000000 		.4byte	.LVL45
 5108 02ee 0100     		.2byte	0x1
 5109 02f0 53       		.byte	0x53
 5110 02f1 F8000000 		.4byte	.LVL46
 5111 02f5 FC000000 		.4byte	.LVL47
 5112 02f9 0100     		.2byte	0x1
 5113 02fb 53       		.byte	0x53
 5114 02fc 00000000 		.4byte	0
 5115 0300 00000000 		.4byte	0
 5116              	.LLST13:
 5117 0304 38010000 		.4byte	.LVL53
 5118 0308 3E010000 		.4byte	.LVL55
 5119 030c 0100     		.2byte	0x1
 5120 030e 51       		.byte	0x51
 5121 030f 3E010000 		.4byte	.LVL55
 5122 0313 44010000 		.4byte	.LVL57
 5123 0317 0300     		.2byte	0x3
 5124 0319 71       		.byte	0x71
 5125 031a 50       		.sleb128 -48
 5126 031b 9F       		.byte	0x9f
 5127 031c 44010000 		.4byte	.LVL57
 5128 0320 4C010000 		.4byte	.LVL59
 5129 0324 0100     		.2byte	0x1
 5130 0326 51       		.byte	0x51
 5131 0327 4C010000 		.4byte	.LVL59
 5132 032b 52010000 		.4byte	.LVL61
 5133 032f 0300     		.2byte	0x3
 5134 0331 71       		.byte	0x71
 5135 0332 49       		.sleb128 -55
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 168


 5136 0333 9F       		.byte	0x9f
 5137 0334 52010000 		.4byte	.LVL61
 5138 0338 54010000 		.4byte	.LVL62
 5139 033c 0100     		.2byte	0x1
 5140 033e 51       		.byte	0x51
 5141 033f 54010000 		.4byte	.LVL62
 5142 0343 58010000 		.4byte	.LVL63
 5143 0347 0400     		.2byte	0x4
 5144 0349 71       		.byte	0x71
 5145 034a A97F     		.sleb128 -87
 5146 034c 9F       		.byte	0x9f
 5147 034d 58010000 		.4byte	.LVL63
 5148 0351 5C010000 		.4byte	.LVL64
 5149 0355 1200     		.2byte	0x12
 5150 0357 75       		.byte	0x75
 5151 0358 00       		.sleb128 0
 5152 0359 75       		.byte	0x75
 5153 035a 00       		.sleb128 0
 5154 035b F7       		.byte	0xf7
 5155 035c 25       		.uleb128 0x25
 5156 035d 7C       		.byte	0x7c
 5157 035e 00       		.sleb128 0
 5158 035f F7       		.byte	0xf7
 5159 0360 25       		.uleb128 0x25
 5160 0361 1B       		.byte	0x1b
 5161 0362 F7       		.byte	0xf7
 5162 0363 00       		.uleb128 0
 5163 0364 7C       		.byte	0x7c
 5164 0365 00       		.sleb128 0
 5165 0366 1E       		.byte	0x1e
 5166 0367 1C       		.byte	0x1c
 5167 0368 9F       		.byte	0x9f
 5168 0369 00000000 		.4byte	0
 5169 036d 00000000 		.4byte	0
 5170              	.LLST14:
 5171 0371 50000000 		.4byte	.LVL7
 5172 0375 78000000 		.4byte	.LVL11
 5173 0379 0100     		.2byte	0x1
 5174 037b 53       		.byte	0x53
 5175 037c 78000000 		.4byte	.LVL11
 5176 0380 80000000 		.4byte	.LVL12
 5177 0384 0300     		.2byte	0x3
 5178 0386 77       		.byte	0x77
 5179 0387 50       		.sleb128 -48
 5180 0388 9F       		.byte	0x9f
 5181 0389 80000000 		.4byte	.LVL12
 5182 038d 82000000 		.4byte	.LVL13
 5183 0391 0100     		.2byte	0x1
 5184 0393 53       		.byte	0x53
 5185 0394 82000000 		.4byte	.LVL13
 5186 0398 84000000 		.4byte	.LVL14
 5187 039c 0300     		.2byte	0x3
 5188 039e 77       		.byte	0x77
 5189 039f 50       		.sleb128 -48
 5190 03a0 9F       		.byte	0x9f
 5191 03a1 84000000 		.4byte	.LVL14
 5192 03a5 86000000 		.4byte	.LVL15
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 169


 5193 03a9 0100     		.2byte	0x1
 5194 03ab 53       		.byte	0x53
 5195 03ac 86000000 		.4byte	.LVL15
 5196 03b0 88000000 		.4byte	.LVL16
 5197 03b4 0300     		.2byte	0x3
 5198 03b6 77       		.byte	0x77
 5199 03b7 50       		.sleb128 -48
 5200 03b8 9F       		.byte	0x9f
 5201 03b9 88000000 		.4byte	.LVL16
 5202 03bd 8A000000 		.4byte	.LVL17
 5203 03c1 0100     		.2byte	0x1
 5204 03c3 53       		.byte	0x53
 5205 03c4 8A000000 		.4byte	.LVL17
 5206 03c8 92000000 		.4byte	.LVL19
 5207 03cc 0300     		.2byte	0x3
 5208 03ce 77       		.byte	0x77
 5209 03cf 50       		.sleb128 -48
 5210 03d0 9F       		.byte	0x9f
 5211 03d1 96000000 		.4byte	.LVL21
 5212 03d5 98000000 		.4byte	.LVL22
 5213 03d9 0300     		.2byte	0x3
 5214 03db 77       		.byte	0x77
 5215 03dc 50       		.sleb128 -48
 5216 03dd 9F       		.byte	0x9f
 5217 03de 00000000 		.4byte	0
 5218 03e2 00000000 		.4byte	0
 5219              	.LLST15:
 5220 03e6 5C000000 		.4byte	.LVL8
 5221 03ea 5E000000 		.4byte	.LVL9
 5222 03ee 0100     		.2byte	0x1
 5223 03f0 52       		.byte	0x52
 5224 03f1 64000000 		.4byte	.LVL10
 5225 03f5 92000000 		.4byte	.LVL19
 5226 03f9 0100     		.2byte	0x1
 5227 03fb 52       		.byte	0x52
 5228 03fc 96000000 		.4byte	.LVL21
 5229 0400 98000000 		.4byte	.LVL22
 5230 0404 0100     		.2byte	0x1
 5231 0406 52       		.byte	0x52
 5232 0407 00000000 		.4byte	0
 5233 040b 00000000 		.4byte	0
 5234              	.LLST16:
 5235 040f 8E000000 		.4byte	.LVL18
 5236 0413 92000000 		.4byte	.LVL19
 5237 0417 0100     		.2byte	0x1
 5238 0419 53       		.byte	0x53
 5239 041a 96000000 		.4byte	.LVL21
 5240 041e 98000000 		.4byte	.LVL22
 5241 0422 0100     		.2byte	0x1
 5242 0424 53       		.byte	0x53
 5243 0425 00000000 		.4byte	0
 5244 0429 00000000 		.4byte	0
 5245              	.LLST17:
 5246 042d FE000000 		.4byte	.LVL48
 5247 0431 9A010000 		.4byte	.LVL74
 5248 0435 0200     		.2byte	0x2
 5249 0437 91       		.byte	0x91
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 170


 5250 0438 54       		.sleb128 -44
 5251 0439 9E010000 		.4byte	.LVL76
 5252 043d A0010000 		.4byte	.LVL77
 5253 0441 0200     		.2byte	0x2
 5254 0443 91       		.byte	0x91
 5255 0444 54       		.sleb128 -44
 5256 0445 00000000 		.4byte	0
 5257 0449 00000000 		.4byte	0
 5258              	.LLST18:
 5259 044d 1A000000 		.4byte	.LVL1
 5260 0451 22000000 		.4byte	.LVL2
 5261 0455 0200     		.2byte	0x2
 5262 0457 30       		.byte	0x30
 5263 0458 9F       		.byte	0x9f
 5264 0459 22000000 		.4byte	.LVL2
 5265 045d 32000000 		.4byte	.LVL3
 5266 0461 0100     		.2byte	0x1
 5267 0463 56       		.byte	0x56
 5268 0464 3A000000 		.4byte	.LVL4
 5269 0468 94000000 		.4byte	.LVL20
 5270 046c 0100     		.2byte	0x1
 5271 046e 56       		.byte	0x56
 5272 046f 96000000 		.4byte	.LVL21
 5273 0473 EE000000 		.4byte	.LVL43
 5274 0477 0100     		.2byte	0x1
 5275 0479 56       		.byte	0x56
 5276 047a F0000000 		.4byte	.LVL44
 5277 047e 9A010000 		.4byte	.LVL74
 5278 0482 0100     		.2byte	0x1
 5279 0484 56       		.byte	0x56
 5280 0485 9E010000 		.4byte	.LVL76
 5281 0489 A0010000 		.4byte	.LVL77
 5282 048d 0100     		.2byte	0x1
 5283 048f 56       		.byte	0x56
 5284 0490 00000000 		.4byte	0
 5285 0494 00000000 		.4byte	0
 5286              	.LLST19:
 5287 0498 42000000 		.4byte	.LVL6
 5288 049c 98000000 		.4byte	.LVL22
 5289 04a0 0100     		.2byte	0x1
 5290 04a2 50       		.byte	0x50
 5291 04a3 00000000 		.4byte	0
 5292 04a7 00000000 		.4byte	0
 5293              	.LLST20:
 5294 04ab C2000000 		.4byte	.LVL32
 5295 04af EA000000 		.4byte	.LVL42
 5296 04b3 0200     		.2byte	0x2
 5297 04b5 30       		.byte	0x30
 5298 04b6 9F       		.byte	0x9f
 5299 04b7 F0000000 		.4byte	.LVL44
 5300 04bb 28010000 		.4byte	.LVL52
 5301 04bf 0200     		.2byte	0x2
 5302 04c1 30       		.byte	0x30
 5303 04c2 9F       		.byte	0x9f
 5304 04c3 28010000 		.4byte	.LVL52
 5305 04c7 78010000 		.4byte	.LVL66
 5306 04cb 0100     		.2byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 171


 5307 04cd 5E       		.byte	0x5e
 5308 04ce 78010000 		.4byte	.LVL66
 5309 04d2 80010000 		.4byte	.LVL68
 5310 04d6 0200     		.2byte	0x2
 5311 04d8 31       		.byte	0x31
 5312 04d9 9F       		.byte	0x9f
 5313 04da 80010000 		.4byte	.LVL68
 5314 04de 9A010000 		.4byte	.LVL74
 5315 04e2 0100     		.2byte	0x1
 5316 04e4 5E       		.byte	0x5e
 5317 04e5 9E010000 		.4byte	.LVL76
 5318 04e9 A0010000 		.4byte	.LVL77
 5319 04ed 0100     		.2byte	0x1
 5320 04ef 5E       		.byte	0x5e
 5321 04f0 00000000 		.4byte	0
 5322 04f4 00000000 		.4byte	0
 5323              	.LLST21:
 5324 04f8 00000000 		.4byte	.LVL78
 5325 04fc 44000000 		.4byte	.LVL84
 5326 0500 0100     		.2byte	0x1
 5327 0502 50       		.byte	0x50
 5328 0503 44000000 		.4byte	.LVL84
 5329 0507 90010000 		.4byte	.LVL136
 5330 050b 0100     		.2byte	0x1
 5331 050d 5A       		.byte	0x5a
 5332 050e 90010000 		.4byte	.LVL136
 5333 0512 92010000 		.4byte	.LVL137
 5334 0516 0100     		.2byte	0x1
 5335 0518 50       		.byte	0x50
 5336 0519 92010000 		.4byte	.LVL137
 5337 051d 94010000 		.4byte	.LVL138
 5338 0521 0100     		.2byte	0x1
 5339 0523 5A       		.byte	0x5a
 5340 0524 94010000 		.4byte	.LVL138
 5341 0528 96010000 		.4byte	.LVL139
 5342 052c 0100     		.2byte	0x1
 5343 052e 50       		.byte	0x50
 5344 052f 96010000 		.4byte	.LVL139
 5345 0533 98010000 		.4byte	.LVL140
 5346 0537 0100     		.2byte	0x1
 5347 0539 5A       		.byte	0x5a
 5348 053a 98010000 		.4byte	.LVL140
 5349 053e 9A010000 		.4byte	.LVL141
 5350 0542 0100     		.2byte	0x1
 5351 0544 50       		.byte	0x50
 5352 0545 9A010000 		.4byte	.LVL141
 5353 0549 A0010000 		.4byte	.LVL142
 5354 054d 0100     		.2byte	0x1
 5355 054f 5A       		.byte	0x5a
 5356 0550 A0010000 		.4byte	.LVL142
 5357 0554 A4010000 		.4byte	.LFE24
 5358 0558 0400     		.2byte	0x4
 5359 055a F3       		.byte	0xf3
 5360 055b 01       		.uleb128 0x1
 5361 055c 50       		.byte	0x50
 5362 055d 9F       		.byte	0x9f
 5363 055e 00000000 		.4byte	0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 172


 5364 0562 00000000 		.4byte	0
 5365              	.LLST22:
 5366 0566 00000000 		.4byte	.LVL78
 5367 056a 14000000 		.4byte	.LVL79
 5368 056e 0100     		.2byte	0x1
 5369 0570 51       		.byte	0x51
 5370 0571 14000000 		.4byte	.LVL79
 5371 0575 A0010000 		.4byte	.LVL142
 5372 0579 0100     		.2byte	0x1
 5373 057b 5B       		.byte	0x5b
 5374 057c 00000000 		.4byte	0
 5375 0580 00000000 		.4byte	0
 5376              	.LLST23:
 5377 0584 00000000 		.4byte	.LVL78
 5378 0588 26000000 		.4byte	.LVL82
 5379 058c 0100     		.2byte	0x1
 5380 058e 52       		.byte	0x52
 5381 058f 26000000 		.4byte	.LVL82
 5382 0593 A6000000 		.4byte	.LVL94
 5383 0597 0400     		.2byte	0x4
 5384 0599 F3       		.byte	0xf3
 5385 059a 01       		.uleb128 0x1
 5386 059b 52       		.byte	0x52
 5387 059c 9F       		.byte	0x9f
 5388 059d A6000000 		.4byte	.LVL94
 5389 05a1 B8000000 		.4byte	.LVL98
 5390 05a5 0200     		.2byte	0x2
 5391 05a7 40       		.byte	0x40
 5392 05a8 9F       		.byte	0x9f
 5393 05a9 B8000000 		.4byte	.LVL98
 5394 05ad F4000000 		.4byte	.LVL108
 5395 05b1 0400     		.2byte	0x4
 5396 05b3 F3       		.byte	0xf3
 5397 05b4 01       		.uleb128 0x1
 5398 05b5 52       		.byte	0x52
 5399 05b6 9F       		.byte	0x9f
 5400 05b7 F4000000 		.4byte	.LVL108
 5401 05bb FA000000 		.4byte	.LVL109
 5402 05bf 0200     		.2byte	0x2
 5403 05c1 40       		.byte	0x40
 5404 05c2 9F       		.byte	0x9f
 5405 05c3 FA000000 		.4byte	.LVL109
 5406 05c7 00010000 		.4byte	.LVL110
 5407 05cb 0400     		.2byte	0x4
 5408 05cd F3       		.byte	0xf3
 5409 05ce 01       		.uleb128 0x1
 5410 05cf 52       		.byte	0x52
 5411 05d0 9F       		.byte	0x9f
 5412 05d1 00010000 		.4byte	.LVL110
 5413 05d5 90010000 		.4byte	.LVL136
 5414 05d9 0100     		.2byte	0x1
 5415 05db 58       		.byte	0x58
 5416 05dc 90010000 		.4byte	.LVL136
 5417 05e0 9A010000 		.4byte	.LVL141
 5418 05e4 0400     		.2byte	0x4
 5419 05e6 F3       		.byte	0xf3
 5420 05e7 01       		.uleb128 0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 173


 5421 05e8 52       		.byte	0x52
 5422 05e9 9F       		.byte	0x9f
 5423 05ea 00000000 		.4byte	0
 5424 05ee 00000000 		.4byte	0
 5425              	.LLST24:
 5426 05f2 00000000 		.4byte	.LVL78
 5427 05f6 1A000000 		.4byte	.LVL80
 5428 05fa 0100     		.2byte	0x1
 5429 05fc 53       		.byte	0x53
 5430 05fd 1A000000 		.4byte	.LVL80
 5431 0601 A4010000 		.4byte	.LFE24
 5432 0605 0400     		.2byte	0x4
 5433 0607 F3       		.byte	0xf3
 5434 0608 01       		.uleb128 0x1
 5435 0609 53       		.byte	0x53
 5436 060a 9F       		.byte	0x9f
 5437 060b 00000000 		.4byte	0
 5438 060f 00000000 		.4byte	0
 5439              	.LLST25:
 5440 0613 00000000 		.4byte	.LVL78
 5441 0617 22000000 		.4byte	.LVL81
 5442 061b 0200     		.2byte	0x2
 5443 061d 91       		.byte	0x91
 5444 061e 00       		.sleb128 0
 5445 061f 22000000 		.4byte	.LVL81
 5446 0623 90010000 		.4byte	.LVL136
 5447 0627 0200     		.2byte	0x2
 5448 0629 91       		.byte	0x91
 5449 062a 00       		.sleb128 0
 5450 062b 90010000 		.4byte	.LVL136
 5451 062f 9A010000 		.4byte	.LVL141
 5452 0633 0100     		.2byte	0x1
 5453 0635 52       		.byte	0x52
 5454 0636 9A010000 		.4byte	.LVL141
 5455 063a A0010000 		.4byte	.LVL142
 5456 063e 0200     		.2byte	0x2
 5457 0640 91       		.byte	0x91
 5458 0641 00       		.sleb128 0
 5459 0642 A0010000 		.4byte	.LVL142
 5460 0646 A4010000 		.4byte	.LFE24
 5461 064a 0200     		.2byte	0x2
 5462 064c 7D       		.byte	0x7d
 5463 064d 00       		.sleb128 0
 5464 064e 00000000 		.4byte	0
 5465 0652 00000000 		.4byte	0
 5466              	.LLST26:
 5467 0656 40000000 		.4byte	.LVL83
 5468 065a 44000000 		.4byte	.LVL84
 5469 065e 0100     		.2byte	0x1
 5470 0660 50       		.byte	0x50
 5471 0661 44000000 		.4byte	.LVL84
 5472 0665 4C000000 		.4byte	.LVL86
 5473 0669 0100     		.2byte	0x1
 5474 066b 5A       		.byte	0x5a
 5475 066c 4C000000 		.4byte	.LVL86
 5476 0670 50000000 		.4byte	.LVL87
 5477 0674 0100     		.2byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 174


 5478 0676 57       		.byte	0x57
 5479 0677 50000000 		.4byte	.LVL87
 5480 067b 54000000 		.4byte	.LVL88
 5481 067f 0300     		.2byte	0x3
 5482 0681 77       		.byte	0x77
 5483 0682 7F       		.sleb128 -1
 5484 0683 9F       		.byte	0x9f
 5485 0684 54000000 		.4byte	.LVL88
 5486 0688 9C000000 		.4byte	.LVL93
 5487 068c 0100     		.2byte	0x1
 5488 068e 57       		.byte	0x57
 5489 068f 9C000000 		.4byte	.LVL93
 5490 0693 B8000000 		.4byte	.LVL98
 5491 0697 0100     		.2byte	0x1
 5492 0699 56       		.byte	0x56
 5493 069a B8000000 		.4byte	.LVL98
 5494 069e C0000000 		.4byte	.LVL99
 5495 06a2 0100     		.2byte	0x1
 5496 06a4 57       		.byte	0x57
 5497 06a5 C0000000 		.4byte	.LVL99
 5498 06a9 C2000000 		.4byte	.LVL100
 5499 06ad 0100     		.2byte	0x1
 5500 06af 56       		.byte	0x56
 5501 06b0 C2000000 		.4byte	.LVL100
 5502 06b4 CA000000 		.4byte	.LVL101
 5503 06b8 0100     		.2byte	0x1
 5504 06ba 57       		.byte	0x57
 5505 06bb CA000000 		.4byte	.LVL101
 5506 06bf E2000000 		.4byte	.LVL106
 5507 06c3 0100     		.2byte	0x1
 5508 06c5 56       		.byte	0x56
 5509 06c6 E2000000 		.4byte	.LVL106
 5510 06ca EE000000 		.4byte	.LVL107
 5511 06ce 0100     		.2byte	0x1
 5512 06d0 57       		.byte	0x57
 5513 06d1 EE000000 		.4byte	.LVL107
 5514 06d5 FA000000 		.4byte	.LVL109
 5515 06d9 0100     		.2byte	0x1
 5516 06db 56       		.byte	0x56
 5517 06dc FA000000 		.4byte	.LVL109
 5518 06e0 00010000 		.4byte	.LVL110
 5519 06e4 0100     		.2byte	0x1
 5520 06e6 57       		.byte	0x57
 5521 06e7 00010000 		.4byte	.LVL110
 5522 06eb 90010000 		.4byte	.LVL136
 5523 06ef 0100     		.2byte	0x1
 5524 06f1 56       		.byte	0x56
 5525 06f2 00000000 		.4byte	0
 5526 06f6 00000000 		.4byte	0
 5527              	.LLST27:
 5528 06fa 82000000 		.4byte	.LVL92
 5529 06fe 90010000 		.4byte	.LVL136
 5530 0702 0100     		.2byte	0x1
 5531 0704 57       		.byte	0x57
 5532 0705 00000000 		.4byte	0
 5533 0709 00000000 		.4byte	0
 5534              	.LLST28:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 175


 5535 070d A6000000 		.4byte	.LVL94
 5536 0711 AB000000 		.4byte	.LVL96-1
 5537 0715 0200     		.2byte	0x2
 5538 0717 77       		.byte	0x77
 5539 0718 02       		.sleb128 2
 5540 0719 D4000000 		.4byte	.LVL102
 5541 071d D9000000 		.4byte	.LVL104-1
 5542 0721 0200     		.2byte	0x2
 5543 0723 77       		.byte	0x77
 5544 0724 02       		.sleb128 2
 5545 0725 0A010000 		.4byte	.LVL112
 5546 0729 20010000 		.4byte	.LVL116
 5547 072d 0100     		.2byte	0x1
 5548 072f 54       		.byte	0x54
 5549 0730 20010000 		.4byte	.LVL116
 5550 0734 22010000 		.4byte	.LVL117
 5551 0738 0300     		.2byte	0x3
 5552 073a 74       		.byte	0x74
 5553 073b 30       		.sleb128 48
 5554 073c 9F       		.byte	0x9f
 5555 073d 24010000 		.4byte	.LVL118
 5556 0741 30010000 		.4byte	.LVL121
 5557 0745 0100     		.2byte	0x1
 5558 0747 54       		.byte	0x54
 5559 0748 30010000 		.4byte	.LVL121
 5560 074c 32010000 		.4byte	.LVL122
 5561 0750 0400     		.2byte	0x4
 5562 0752 74       		.byte	0x74
 5563 0753 D700     		.sleb128 87
 5564 0755 9F       		.byte	0x9f
 5565 0756 34010000 		.4byte	.LVL123
 5566 075a 36010000 		.4byte	.LVL124
 5567 075e 0100     		.2byte	0x1
 5568 0760 54       		.byte	0x54
 5569 0761 36010000 		.4byte	.LVL124
 5570 0765 38010000 		.4byte	.LVL125
 5571 0769 0300     		.2byte	0x3
 5572 076b 74       		.byte	0x74
 5573 076c 37       		.sleb128 55
 5574 076d 9F       		.byte	0x9f
 5575 076e 66010000 		.4byte	.LVL133
 5576 0772 68010000 		.4byte	.LVL134
 5577 0776 0100     		.2byte	0x1
 5578 0778 54       		.byte	0x54
 5579 0779 00000000 		.4byte	0
 5580 077d 00000000 		.4byte	0
 5581              	.LLST29:
 5582 0781 22010000 		.4byte	.LVL117
 5583 0785 24010000 		.4byte	.LVL118
 5584 0789 0100     		.2byte	0x1
 5585 078b 54       		.byte	0x54
 5586 078c 32010000 		.4byte	.LVL122
 5587 0790 34010000 		.4byte	.LVL123
 5588 0794 0100     		.2byte	0x1
 5589 0796 54       		.byte	0x54
 5590 0797 38010000 		.4byte	.LVL125
 5591 079b 66010000 		.4byte	.LVL133
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 176


 5592 079f 0100     		.2byte	0x1
 5593 07a1 54       		.byte	0x54
 5594 07a2 00000000 		.4byte	0
 5595 07a6 00000000 		.4byte	0
 5596              	.LLST30:
 5597 07aa 00010000 		.4byte	.LVL110
 5598 07ae 08010000 		.4byte	.LVL111
 5599 07b2 0200     		.2byte	0x2
 5600 07b4 30       		.byte	0x30
 5601 07b5 9F       		.byte	0x9f
 5602 07b6 08010000 		.4byte	.LVL111
 5603 07ba 4A010000 		.4byte	.LVL126
 5604 07be 0100     		.2byte	0x1
 5605 07c0 59       		.byte	0x59
 5606 07c1 4A010000 		.4byte	.LVL126
 5607 07c5 4E010000 		.4byte	.LVL127
 5608 07c9 0600     		.2byte	0x6
 5609 07cb 79       		.byte	0x79
 5610 07cc 00       		.sleb128 0
 5611 07cd 78       		.byte	0x78
 5612 07ce 00       		.sleb128 0
 5613 07cf 1E       		.byte	0x1e
 5614 07d0 9F       		.byte	0x9f
 5615 07d1 4E010000 		.4byte	.LVL127
 5616 07d5 90010000 		.4byte	.LVL136
 5617 07d9 0100     		.2byte	0x1
 5618 07db 59       		.byte	0x59
 5619 07dc 00000000 		.4byte	0
 5620 07e0 00000000 		.4byte	0
 5621              	.LLST31:
 5622 07e4 1A010000 		.4byte	.LVL115
 5623 07e8 26010000 		.4byte	.LVL119
 5624 07ec 0100     		.2byte	0x1
 5625 07ee 50       		.byte	0x50
 5626 07ef 00000000 		.4byte	0
 5627 07f3 00000000 		.4byte	0
 5628              	.LLST32:
 5629 07f7 10010000 		.4byte	.LVL113
 5630 07fb 16010000 		.4byte	.LVL114
 5631 07ff 0100     		.2byte	0x1
 5632 0801 50       		.byte	0x50
 5633 0802 66010000 		.4byte	.LVL133
 5634 0806 68010000 		.4byte	.LVL134
 5635 080a 0100     		.2byte	0x1
 5636 080c 50       		.byte	0x50
 5637 080d 00000000 		.4byte	0
 5638 0811 00000000 		.4byte	0
 5639              	.LLST33:
 5640 0815 AC000000 		.4byte	.LVL96
 5641 0819 B8000000 		.4byte	.LVL98
 5642 081d 0100     		.2byte	0x1
 5643 081f 50       		.byte	0x50
 5644 0820 DA000000 		.4byte	.LVL104
 5645 0824 E2000000 		.4byte	.LVL106
 5646 0828 0100     		.2byte	0x1
 5647 082a 50       		.byte	0x50
 5648 082b F4000000 		.4byte	.LVL108
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 177


 5649 082f FA000000 		.4byte	.LVL109
 5650 0833 0100     		.2byte	0x1
 5651 0835 50       		.byte	0x50
 5652 0836 00000000 		.4byte	0
 5653 083a 00000000 		.4byte	0
 5654              	.LLST34:
 5655 083e 2A010000 		.4byte	.LVL120
 5656 0842 38010000 		.4byte	.LVL125
 5657 0846 0100     		.2byte	0x1
 5658 0848 50       		.byte	0x50
 5659 0849 00000000 		.4byte	0
 5660 084d 00000000 		.4byte	0
 5661              	.LLST35:
 5662 0851 48000000 		.4byte	.LVL85
 5663 0855 50000000 		.4byte	.LVL87
 5664 0859 0100     		.2byte	0x1
 5665 085b 50       		.byte	0x50
 5666 085c 54000000 		.4byte	.LVL88
 5667 0860 A8000000 		.4byte	.LVL95
 5668 0864 0100     		.2byte	0x1
 5669 0866 50       		.byte	0x50
 5670 0867 B8000000 		.4byte	.LVL98
 5671 086b D6000000 		.4byte	.LVL103
 5672 086f 0100     		.2byte	0x1
 5673 0871 50       		.byte	0x50
 5674 0872 E2000000 		.4byte	.LVL106
 5675 0876 F4000000 		.4byte	.LVL108
 5676 087a 0100     		.2byte	0x1
 5677 087c 50       		.byte	0x50
 5678 087d FA000000 		.4byte	.LVL109
 5679 0881 00010000 		.4byte	.LVL110
 5680 0885 0100     		.2byte	0x1
 5681 0887 50       		.byte	0x50
 5682 0888 00000000 		.4byte	0
 5683 088c 00000000 		.4byte	0
 5684              	.LLST36:
 5685 0890 66000000 		.4byte	.LVL89
 5686 0894 6C000000 		.4byte	.LVL90
 5687 0898 0200     		.2byte	0x2
 5688 089a 30       		.byte	0x30
 5689 089b 9F       		.byte	0x9f
 5690 089c 82000000 		.4byte	.LVL92
 5691 08a0 90010000 		.4byte	.LVL136
 5692 08a4 0200     		.2byte	0x2
 5693 08a6 91       		.byte	0x91
 5694 08a7 4C       		.sleb128 -52
 5695 08a8 00000000 		.4byte	0
 5696 08ac 00000000 		.4byte	0
 5697              	.LLST37:
 5698 08b0 00010000 		.4byte	.LVL110
 5699 08b4 08010000 		.4byte	.LVL111
 5700 08b8 0200     		.2byte	0x2
 5701 08ba 30       		.byte	0x30
 5702 08bb 9F       		.byte	0x9f
 5703 08bc 08010000 		.4byte	.LVL111
 5704 08c0 58010000 		.4byte	.LVL128
 5705 08c4 0200     		.2byte	0x2
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 178


 5706 08c6 7D       		.byte	0x7d
 5707 08c7 00       		.sleb128 0
 5708 08c8 5A010000 		.4byte	.LVL129
 5709 08cc 90010000 		.4byte	.LVL136
 5710 08d0 0200     		.2byte	0x2
 5711 08d2 7D       		.byte	0x7d
 5712 08d3 00       		.sleb128 0
 5713 08d4 00000000 		.4byte	0
 5714 08d8 00000000 		.4byte	0
 5715              	.LLST38:
 5716 08dc 00010000 		.4byte	.LVL110
 5717 08e0 08010000 		.4byte	.LVL111
 5718 08e4 0200     		.2byte	0x2
 5719 08e6 30       		.byte	0x30
 5720 08e7 9F       		.byte	0x9f
 5721 08e8 08010000 		.4byte	.LVL111
 5722 08ec 64010000 		.4byte	.LVL132
 5723 08f0 0100     		.2byte	0x1
 5724 08f2 55       		.byte	0x55
 5725 08f3 66010000 		.4byte	.LVL133
 5726 08f7 90010000 		.4byte	.LVL136
 5727 08fb 0100     		.2byte	0x1
 5728 08fd 55       		.byte	0x55
 5729 08fe 00000000 		.4byte	0
 5730 0902 00000000 		.4byte	0
 5731              	.LLST39:
 5732 0906 00000000 		.4byte	.LVL143
 5733 090a 04000000 		.4byte	.LVL145
 5734 090e 0100     		.2byte	0x1
 5735 0910 50       		.byte	0x50
 5736 0911 04000000 		.4byte	.LVL145
 5737 0915 06000000 		.4byte	.LVL146
 5738 0919 0100     		.2byte	0x1
 5739 091b 53       		.byte	0x53
 5740 091c 06000000 		.4byte	.LVL146
 5741 0920 16000000 		.4byte	.LFE2
 5742 0924 0400     		.2byte	0x4
 5743 0926 F3       		.byte	0xf3
 5744 0927 01       		.uleb128 0x1
 5745 0928 50       		.byte	0x50
 5746 0929 9F       		.byte	0x9f
 5747 092a 00000000 		.4byte	0
 5748 092e 00000000 		.4byte	0
 5749              	.LLST40:
 5750 0932 02000000 		.4byte	.LVL144
 5751 0936 04000000 		.4byte	.LVL145
 5752 093a 0100     		.2byte	0x1
 5753 093c 50       		.byte	0x50
 5754 093d 04000000 		.4byte	.LVL145
 5755 0941 16000000 		.4byte	.LFE2
 5756 0945 0100     		.2byte	0x1
 5757 0947 53       		.byte	0x53
 5758 0948 00000000 		.4byte	0
 5759 094c 00000000 		.4byte	0
 5760              	.LLST41:
 5761 0950 02000000 		.4byte	.LVL144
 5762 0954 06000000 		.4byte	.LVL146
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 179


 5763 0958 0200     		.2byte	0x2
 5764 095a 30       		.byte	0x30
 5765 095b 9F       		.byte	0x9f
 5766 095c 06000000 		.4byte	.LVL146
 5767 0960 16000000 		.4byte	.LFE2
 5768 0964 0100     		.2byte	0x1
 5769 0966 50       		.byte	0x50
 5770 0967 00000000 		.4byte	0
 5771 096b 00000000 		.4byte	0
 5772              	.LLST42:
 5773 096f 00000000 		.4byte	.LVL149
 5774 0973 09000000 		.4byte	.LVL150-1
 5775 0977 0100     		.2byte	0x1
 5776 0979 50       		.byte	0x50
 5777 097a 09000000 		.4byte	.LVL150-1
 5778 097e 0C000000 		.4byte	.LFE1
 5779 0982 0400     		.2byte	0x4
 5780 0984 F3       		.byte	0xf3
 5781 0985 01       		.uleb128 0x1
 5782 0986 50       		.byte	0x50
 5783 0987 9F       		.byte	0x9f
 5784 0988 00000000 		.4byte	0
 5785 098c 00000000 		.4byte	0
 5786              	.LLST43:
 5787 0990 00000000 		.4byte	.LVL151
 5788 0994 30000000 		.4byte	.LVL157
 5789 0998 0100     		.2byte	0x1
 5790 099a 50       		.byte	0x50
 5791 099b 30000000 		.4byte	.LVL157
 5792 099f 32000000 		.4byte	.LVL158
 5793 09a3 0100     		.2byte	0x1
 5794 09a5 56       		.byte	0x56
 5795 09a6 32000000 		.4byte	.LVL158
 5796 09aa 34000000 		.4byte	.LVL159
 5797 09ae 0100     		.2byte	0x1
 5798 09b0 50       		.byte	0x50
 5799 09b1 34000000 		.4byte	.LVL159
 5800 09b5 36000000 		.4byte	.LVL160
 5801 09b9 0400     		.2byte	0x4
 5802 09bb F3       		.byte	0xf3
 5803 09bc 01       		.uleb128 0x1
 5804 09bd 50       		.byte	0x50
 5805 09be 9F       		.byte	0x9f
 5806 09bf 36000000 		.4byte	.LVL160
 5807 09c3 38000000 		.4byte	.LVL161
 5808 09c7 0100     		.2byte	0x1
 5809 09c9 50       		.byte	0x50
 5810 09ca 38000000 		.4byte	.LVL161
 5811 09ce 3A000000 		.4byte	.LVL162
 5812 09d2 0100     		.2byte	0x1
 5813 09d4 56       		.byte	0x56
 5814 09d5 3A000000 		.4byte	.LVL162
 5815 09d9 3C000000 		.4byte	.LVL163
 5816 09dd 0100     		.2byte	0x1
 5817 09df 50       		.byte	0x50
 5818 09e0 3C000000 		.4byte	.LVL163
 5819 09e4 3E000000 		.4byte	.LVL164
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 180


 5820 09e8 0100     		.2byte	0x1
 5821 09ea 56       		.byte	0x56
 5822 09eb 3E000000 		.4byte	.LVL164
 5823 09ef 40000000 		.4byte	.LVL165
 5824 09f3 0100     		.2byte	0x1
 5825 09f5 50       		.byte	0x50
 5826 09f6 40000000 		.4byte	.LVL165
 5827 09fa 42000000 		.4byte	.LVL166
 5828 09fe 0100     		.2byte	0x1
 5829 0a00 56       		.byte	0x56
 5830 0a01 42000000 		.4byte	.LVL166
 5831 0a05 44000000 		.4byte	.LVL167
 5832 0a09 0100     		.2byte	0x1
 5833 0a0b 50       		.byte	0x50
 5834 0a0c 44000000 		.4byte	.LVL167
 5835 0a10 46000000 		.4byte	.LVL168
 5836 0a14 0100     		.2byte	0x1
 5837 0a16 56       		.byte	0x56
 5838 0a17 46000000 		.4byte	.LVL168
 5839 0a1b 48000000 		.4byte	.LFE4
 5840 0a1f 0400     		.2byte	0x4
 5841 0a21 F3       		.byte	0xf3
 5842 0a22 01       		.uleb128 0x1
 5843 0a23 50       		.byte	0x50
 5844 0a24 9F       		.byte	0x9f
 5845 0a25 00000000 		.4byte	0
 5846 0a29 00000000 		.4byte	0
 5847              	.LLST44:
 5848 0a2d 00000000 		.4byte	.LVL151
 5849 0a31 0E000000 		.4byte	.LVL152
 5850 0a35 0100     		.2byte	0x1
 5851 0a37 51       		.byte	0x51
 5852 0a38 0E000000 		.4byte	.LVL152
 5853 0a3c 32000000 		.4byte	.LVL158
 5854 0a40 0400     		.2byte	0x4
 5855 0a42 F3       		.byte	0xf3
 5856 0a43 01       		.uleb128 0x1
 5857 0a44 51       		.byte	0x51
 5858 0a45 9F       		.byte	0x9f
 5859 0a46 32000000 		.4byte	.LVL158
 5860 0a4a 3A000000 		.4byte	.LVL162
 5861 0a4e 0100     		.2byte	0x1
 5862 0a50 51       		.byte	0x51
 5863 0a51 3A000000 		.4byte	.LVL162
 5864 0a55 48000000 		.4byte	.LFE4
 5865 0a59 0400     		.2byte	0x4
 5866 0a5b F3       		.byte	0xf3
 5867 0a5c 01       		.uleb128 0x1
 5868 0a5d 51       		.byte	0x51
 5869 0a5e 9F       		.byte	0x9f
 5870 0a5f 00000000 		.4byte	0
 5871 0a63 00000000 		.4byte	0
 5872              	.LLST45:
 5873 0a67 00000000 		.4byte	.LVL151
 5874 0a6b 2C000000 		.4byte	.LVL156
 5875 0a6f 0100     		.2byte	0x1
 5876 0a71 52       		.byte	0x52
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 181


 5877 0a72 2C000000 		.4byte	.LVL156
 5878 0a76 32000000 		.4byte	.LVL158
 5879 0a7a 0400     		.2byte	0x4
 5880 0a7c F3       		.byte	0xf3
 5881 0a7d 01       		.uleb128 0x1
 5882 0a7e 52       		.byte	0x52
 5883 0a7f 9F       		.byte	0x9f
 5884 0a80 32000000 		.4byte	.LVL158
 5885 0a84 44000000 		.4byte	.LVL167
 5886 0a88 0100     		.2byte	0x1
 5887 0a8a 52       		.byte	0x52
 5888 0a8b 44000000 		.4byte	.LVL167
 5889 0a8f 48000000 		.4byte	.LFE4
 5890 0a93 0400     		.2byte	0x4
 5891 0a95 F3       		.byte	0xf3
 5892 0a96 01       		.uleb128 0x1
 5893 0a97 52       		.byte	0x52
 5894 0a98 9F       		.byte	0x9f
 5895 0a99 00000000 		.4byte	0
 5896 0a9d 00000000 		.4byte	0
 5897              	.LLST46:
 5898 0aa1 0E000000 		.4byte	.LVL152
 5899 0aa5 32000000 		.4byte	.LVL158
 5900 0aa9 0100     		.2byte	0x1
 5901 0aab 53       		.byte	0x53
 5902 0aac 3A000000 		.4byte	.LVL162
 5903 0ab0 44000000 		.4byte	.LVL167
 5904 0ab4 0100     		.2byte	0x1
 5905 0ab6 53       		.byte	0x53
 5906 0ab7 00000000 		.4byte	0
 5907 0abb 00000000 		.4byte	0
 5908              	.LLST47:
 5909 0abf 0E000000 		.4byte	.LVL152
 5910 0ac3 32000000 		.4byte	.LVL158
 5911 0ac7 0100     		.2byte	0x1
 5912 0ac9 51       		.byte	0x51
 5913 0aca 3A000000 		.4byte	.LVL162
 5914 0ace 44000000 		.4byte	.LVL167
 5915 0ad2 0100     		.2byte	0x1
 5916 0ad4 51       		.byte	0x51
 5917 0ad5 00000000 		.4byte	0
 5918 0ad9 00000000 		.4byte	0
 5919              	.LLST48:
 5920 0add 0E000000 		.4byte	.LVL152
 5921 0ae1 32000000 		.4byte	.LVL158
 5922 0ae5 0100     		.2byte	0x1
 5923 0ae7 54       		.byte	0x54
 5924 0ae8 3A000000 		.4byte	.LVL162
 5925 0aec 44000000 		.4byte	.LVL167
 5926 0af0 0100     		.2byte	0x1
 5927 0af2 54       		.byte	0x54
 5928 0af3 00000000 		.4byte	0
 5929 0af7 00000000 		.4byte	0
 5930              	.LLST49:
 5931 0afb 00000000 		.4byte	.LVL169
 5932 0aff 09000000 		.4byte	.LVL170-1
 5933 0b03 0100     		.2byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 182


 5934 0b05 50       		.byte	0x50
 5935 0b06 09000000 		.4byte	.LVL170-1
 5936 0b0a 0C000000 		.4byte	.LFE3
 5937 0b0e 0400     		.2byte	0x4
 5938 0b10 F3       		.byte	0xf3
 5939 0b11 01       		.uleb128 0x1
 5940 0b12 50       		.byte	0x50
 5941 0b13 9F       		.byte	0x9f
 5942 0b14 00000000 		.4byte	0
 5943 0b18 00000000 		.4byte	0
 5944              	.LLST50:
 5945 0b1c 00000000 		.4byte	.LVL169
 5946 0b20 09000000 		.4byte	.LVL170-1
 5947 0b24 0100     		.2byte	0x1
 5948 0b26 51       		.byte	0x51
 5949 0b27 09000000 		.4byte	.LVL170-1
 5950 0b2b 0C000000 		.4byte	.LFE3
 5951 0b2f 0400     		.2byte	0x4
 5952 0b31 F3       		.byte	0xf3
 5953 0b32 01       		.uleb128 0x1
 5954 0b33 51       		.byte	0x51
 5955 0b34 9F       		.byte	0x9f
 5956 0b35 00000000 		.4byte	0
 5957 0b39 00000000 		.4byte	0
 5958              	.LLST51:
 5959 0b3d 00000000 		.4byte	.LVL171
 5960 0b41 3C000000 		.4byte	.LVL179
 5961 0b45 0100     		.2byte	0x1
 5962 0b47 50       		.byte	0x50
 5963 0b48 3C000000 		.4byte	.LVL179
 5964 0b4c 3E000000 		.4byte	.LVL180
 5965 0b50 0100     		.2byte	0x1
 5966 0b52 56       		.byte	0x56
 5967 0b53 3E000000 		.4byte	.LVL180
 5968 0b57 40000000 		.4byte	.LVL181
 5969 0b5b 0100     		.2byte	0x1
 5970 0b5d 50       		.byte	0x50
 5971 0b5e 40000000 		.4byte	.LVL181
 5972 0b62 42000000 		.4byte	.LVL182
 5973 0b66 0400     		.2byte	0x4
 5974 0b68 F3       		.byte	0xf3
 5975 0b69 01       		.uleb128 0x1
 5976 0b6a 50       		.byte	0x50
 5977 0b6b 9F       		.byte	0x9f
 5978 0b6c 42000000 		.4byte	.LVL182
 5979 0b70 44000000 		.4byte	.LVL183
 5980 0b74 0100     		.2byte	0x1
 5981 0b76 50       		.byte	0x50
 5982 0b77 44000000 		.4byte	.LVL183
 5983 0b7b 46000000 		.4byte	.LVL184
 5984 0b7f 0100     		.2byte	0x1
 5985 0b81 56       		.byte	0x56
 5986 0b82 46000000 		.4byte	.LVL184
 5987 0b86 4A000000 		.4byte	.LVL186
 5988 0b8a 0100     		.2byte	0x1
 5989 0b8c 50       		.byte	0x50
 5990 0b8d 4A000000 		.4byte	.LVL186
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 183


 5991 0b91 4C000000 		.4byte	.LVL187
 5992 0b95 0100     		.2byte	0x1
 5993 0b97 56       		.byte	0x56
 5994 0b98 4C000000 		.4byte	.LVL187
 5995 0b9c 4E000000 		.4byte	.LVL188
 5996 0ba0 0100     		.2byte	0x1
 5997 0ba2 50       		.byte	0x50
 5998 0ba3 4E000000 		.4byte	.LVL188
 5999 0ba7 50000000 		.4byte	.LVL189
 6000 0bab 0100     		.2byte	0x1
 6001 0bad 56       		.byte	0x56
 6002 0bae 50000000 		.4byte	.LVL189
 6003 0bb2 52000000 		.4byte	.LVL190
 6004 0bb6 0100     		.2byte	0x1
 6005 0bb8 50       		.byte	0x50
 6006 0bb9 52000000 		.4byte	.LVL190
 6007 0bbd 54000000 		.4byte	.LVL191
 6008 0bc1 0100     		.2byte	0x1
 6009 0bc3 56       		.byte	0x56
 6010 0bc4 54000000 		.4byte	.LVL191
 6011 0bc8 56000000 		.4byte	.LFE6
 6012 0bcc 0400     		.2byte	0x4
 6013 0bce F3       		.byte	0xf3
 6014 0bcf 01       		.uleb128 0x1
 6015 0bd0 50       		.byte	0x50
 6016 0bd1 9F       		.byte	0x9f
 6017 0bd2 00000000 		.4byte	0
 6018 0bd6 00000000 		.4byte	0
 6019              	.LLST52:
 6020 0bda 00000000 		.4byte	.LVL171
 6021 0bde 1E000000 		.4byte	.LVL174
 6022 0be2 0100     		.2byte	0x1
 6023 0be4 51       		.byte	0x51
 6024 0be5 1E000000 		.4byte	.LVL174
 6025 0be9 3E000000 		.4byte	.LVL180
 6026 0bed 0400     		.2byte	0x4
 6027 0bef F3       		.byte	0xf3
 6028 0bf0 01       		.uleb128 0x1
 6029 0bf1 51       		.byte	0x51
 6030 0bf2 9F       		.byte	0x9f
 6031 0bf3 3E000000 		.4byte	.LVL180
 6032 0bf7 4C000000 		.4byte	.LVL187
 6033 0bfb 0100     		.2byte	0x1
 6034 0bfd 51       		.byte	0x51
 6035 0bfe 4C000000 		.4byte	.LVL187
 6036 0c02 56000000 		.4byte	.LFE6
 6037 0c06 0400     		.2byte	0x4
 6038 0c08 F3       		.byte	0xf3
 6039 0c09 01       		.uleb128 0x1
 6040 0c0a 51       		.byte	0x51
 6041 0c0b 9F       		.byte	0x9f
 6042 0c0c 00000000 		.4byte	0
 6043 0c10 00000000 		.4byte	0
 6044              	.LLST53:
 6045 0c14 00000000 		.4byte	.LVL171
 6046 0c18 38000000 		.4byte	.LVL178
 6047 0c1c 0100     		.2byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 184


 6048 0c1e 52       		.byte	0x52
 6049 0c1f 38000000 		.4byte	.LVL178
 6050 0c23 3E000000 		.4byte	.LVL180
 6051 0c27 0400     		.2byte	0x4
 6052 0c29 F3       		.byte	0xf3
 6053 0c2a 01       		.uleb128 0x1
 6054 0c2b 52       		.byte	0x52
 6055 0c2c 9F       		.byte	0x9f
 6056 0c2d 3E000000 		.4byte	.LVL180
 6057 0c31 52000000 		.4byte	.LVL190
 6058 0c35 0100     		.2byte	0x1
 6059 0c37 52       		.byte	0x52
 6060 0c38 52000000 		.4byte	.LVL190
 6061 0c3c 56000000 		.4byte	.LFE6
 6062 0c40 0400     		.2byte	0x4
 6063 0c42 F3       		.byte	0xf3
 6064 0c43 01       		.uleb128 0x1
 6065 0c44 52       		.byte	0x52
 6066 0c45 9F       		.byte	0x9f
 6067 0c46 00000000 		.4byte	0
 6068 0c4a 00000000 		.4byte	0
 6069              	.LLST54:
 6070 0c4e 0E000000 		.4byte	.LVL172
 6071 0c52 3E000000 		.4byte	.LVL180
 6072 0c56 0100     		.2byte	0x1
 6073 0c58 53       		.byte	0x53
 6074 0c59 48000000 		.4byte	.LVL185
 6075 0c5d 52000000 		.4byte	.LVL190
 6076 0c61 0100     		.2byte	0x1
 6077 0c63 53       		.byte	0x53
 6078 0c64 00000000 		.4byte	0
 6079 0c68 00000000 		.4byte	0
 6080              	.LLST55:
 6081 0c6c 1E000000 		.4byte	.LVL174
 6082 0c70 3E000000 		.4byte	.LVL180
 6083 0c74 0100     		.2byte	0x1
 6084 0c76 51       		.byte	0x51
 6085 0c77 4C000000 		.4byte	.LVL187
 6086 0c7b 52000000 		.4byte	.LVL190
 6087 0c7f 0100     		.2byte	0x1
 6088 0c81 51       		.byte	0x51
 6089 0c82 00000000 		.4byte	0
 6090 0c86 00000000 		.4byte	0
 6091              	.LLST56:
 6092 0c8a 1E000000 		.4byte	.LVL174
 6093 0c8e 3E000000 		.4byte	.LVL180
 6094 0c92 0100     		.2byte	0x1
 6095 0c94 54       		.byte	0x54
 6096 0c95 4C000000 		.4byte	.LVL187
 6097 0c99 52000000 		.4byte	.LVL190
 6098 0c9d 0100     		.2byte	0x1
 6099 0c9f 54       		.byte	0x54
 6100 0ca0 00000000 		.4byte	0
 6101 0ca4 00000000 		.4byte	0
 6102              	.LLST57:
 6103 0ca8 00000000 		.4byte	.LVL192
 6104 0cac 09000000 		.4byte	.LVL193-1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 185


 6105 0cb0 0100     		.2byte	0x1
 6106 0cb2 50       		.byte	0x50
 6107 0cb3 09000000 		.4byte	.LVL193-1
 6108 0cb7 0C000000 		.4byte	.LFE5
 6109 0cbb 0400     		.2byte	0x4
 6110 0cbd F3       		.byte	0xf3
 6111 0cbe 01       		.uleb128 0x1
 6112 0cbf 50       		.byte	0x50
 6113 0cc0 9F       		.byte	0x9f
 6114 0cc1 00000000 		.4byte	0
 6115 0cc5 00000000 		.4byte	0
 6116              	.LLST58:
 6117 0cc9 00000000 		.4byte	.LVL192
 6118 0ccd 09000000 		.4byte	.LVL193-1
 6119 0cd1 0100     		.2byte	0x1
 6120 0cd3 51       		.byte	0x51
 6121 0cd4 09000000 		.4byte	.LVL193-1
 6122 0cd8 0C000000 		.4byte	.LFE5
 6123 0cdc 0400     		.2byte	0x4
 6124 0cde F3       		.byte	0xf3
 6125 0cdf 01       		.uleb128 0x1
 6126 0ce0 51       		.byte	0x51
 6127 0ce1 9F       		.byte	0x9f
 6128 0ce2 00000000 		.4byte	0
 6129 0ce6 00000000 		.4byte	0
 6130              	.LLST59:
 6131 0cea 00000000 		.4byte	.LVL194
 6132 0cee 10000000 		.4byte	.LVL195
 6133 0cf2 0100     		.2byte	0x1
 6134 0cf4 50       		.byte	0x50
 6135 0cf5 10000000 		.4byte	.LVL195
 6136 0cf9 12000000 		.4byte	.LVL196
 6137 0cfd 0400     		.2byte	0x4
 6138 0cff F3       		.byte	0xf3
 6139 0d00 01       		.uleb128 0x1
 6140 0d01 50       		.byte	0x50
 6141 0d02 9F       		.byte	0x9f
 6142 0d03 12000000 		.4byte	.LVL196
 6143 0d07 16000000 		.4byte	.LVL197
 6144 0d0b 0100     		.2byte	0x1
 6145 0d0d 50       		.byte	0x50
 6146 0d0e 16000000 		.4byte	.LVL197
 6147 0d12 18000000 		.4byte	.LVL198
 6148 0d16 0400     		.2byte	0x4
 6149 0d18 F3       		.byte	0xf3
 6150 0d19 01       		.uleb128 0x1
 6151 0d1a 50       		.byte	0x50
 6152 0d1b 9F       		.byte	0x9f
 6153 0d1c 18000000 		.4byte	.LVL198
 6154 0d20 20000000 		.4byte	.LVL202
 6155 0d24 0100     		.2byte	0x1
 6156 0d26 50       		.byte	0x50
 6157 0d27 20000000 		.4byte	.LVL202
 6158 0d2b 5A000000 		.4byte	.LVL213
 6159 0d2f 0400     		.2byte	0x4
 6160 0d31 F3       		.byte	0xf3
 6161 0d32 01       		.uleb128 0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 186


 6162 0d33 50       		.byte	0x50
 6163 0d34 9F       		.byte	0x9f
 6164 0d35 5A000000 		.4byte	.LVL213
 6165 0d39 5C000000 		.4byte	.LVL214
 6166 0d3d 0100     		.2byte	0x1
 6167 0d3f 50       		.byte	0x50
 6168 0d40 5C000000 		.4byte	.LVL214
 6169 0d44 5E000000 		.4byte	.LVL215
 6170 0d48 0400     		.2byte	0x4
 6171 0d4a F3       		.byte	0xf3
 6172 0d4b 01       		.uleb128 0x1
 6173 0d4c 50       		.byte	0x50
 6174 0d4d 9F       		.byte	0x9f
 6175 0d4e 5E000000 		.4byte	.LVL215
 6176 0d52 60000000 		.4byte	.LVL216
 6177 0d56 0100     		.2byte	0x1
 6178 0d58 50       		.byte	0x50
 6179 0d59 60000000 		.4byte	.LVL216
 6180 0d5d 70000000 		.4byte	.LFE8
 6181 0d61 0400     		.2byte	0x4
 6182 0d63 F3       		.byte	0xf3
 6183 0d64 01       		.uleb128 0x1
 6184 0d65 50       		.byte	0x50
 6185 0d66 9F       		.byte	0x9f
 6186 0d67 00000000 		.4byte	0
 6187 0d6b 00000000 		.4byte	0
 6188              	.LLST60:
 6189 0d6f 00000000 		.4byte	.LVL194
 6190 0d73 20000000 		.4byte	.LVL202
 6191 0d77 0100     		.2byte	0x1
 6192 0d79 51       		.byte	0x51
 6193 0d7a 20000000 		.4byte	.LVL202
 6194 0d7e 5A000000 		.4byte	.LVL213
 6195 0d82 0400     		.2byte	0x4
 6196 0d84 F3       		.byte	0xf3
 6197 0d85 01       		.uleb128 0x1
 6198 0d86 51       		.byte	0x51
 6199 0d87 9F       		.byte	0x9f
 6200 0d88 5A000000 		.4byte	.LVL213
 6201 0d8c 62000000 		.4byte	.LVL217
 6202 0d90 0100     		.2byte	0x1
 6203 0d92 51       		.byte	0x51
 6204 0d93 62000000 		.4byte	.LVL217
 6205 0d97 70000000 		.4byte	.LFE8
 6206 0d9b 0400     		.2byte	0x4
 6207 0d9d F3       		.byte	0xf3
 6208 0d9e 01       		.uleb128 0x1
 6209 0d9f 51       		.byte	0x51
 6210 0da0 9F       		.byte	0x9f
 6211 0da1 00000000 		.4byte	0
 6212 0da5 00000000 		.4byte	0
 6213              	.LLST61:
 6214 0da9 00000000 		.4byte	.LVL194
 6215 0dad 1E000000 		.4byte	.LVL201
 6216 0db1 0100     		.2byte	0x1
 6217 0db3 52       		.byte	0x52
 6218 0db4 1E000000 		.4byte	.LVL201
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 187


 6219 0db8 5A000000 		.4byte	.LVL213
 6220 0dbc 0100     		.2byte	0x1
 6221 0dbe 57       		.byte	0x57
 6222 0dbf 5A000000 		.4byte	.LVL213
 6223 0dc3 62000000 		.4byte	.LVL217
 6224 0dc7 0100     		.2byte	0x1
 6225 0dc9 52       		.byte	0x52
 6226 0dca 62000000 		.4byte	.LVL217
 6227 0dce 6E000000 		.4byte	.LVL223
 6228 0dd2 0100     		.2byte	0x1
 6229 0dd4 57       		.byte	0x57
 6230 0dd5 6E000000 		.4byte	.LVL223
 6231 0dd9 70000000 		.4byte	.LFE8
 6232 0ddd 0400     		.2byte	0x4
 6233 0ddf F3       		.byte	0xf3
 6234 0de0 01       		.uleb128 0x1
 6235 0de1 52       		.byte	0x52
 6236 0de2 9F       		.byte	0x9f
 6237 0de3 00000000 		.4byte	0
 6238 0de7 00000000 		.4byte	0
 6239              	.LLST62:
 6240 0deb 18000000 		.4byte	.LVL198
 6241 0def 46000000 		.4byte	.LVL208
 6242 0df3 0100     		.2byte	0x1
 6243 0df5 50       		.byte	0x50
 6244 0df6 48000000 		.4byte	.LVL209
 6245 0dfa 54000000 		.4byte	.LVL210
 6246 0dfe 0100     		.2byte	0x1
 6247 0e00 50       		.byte	0x50
 6248 0e01 56000000 		.4byte	.LVL211
 6249 0e05 58000000 		.4byte	.LVL212
 6250 0e09 0100     		.2byte	0x1
 6251 0e0b 50       		.byte	0x50
 6252 0e0c 62000000 		.4byte	.LVL217
 6253 0e10 64000000 		.4byte	.LVL218
 6254 0e14 0100     		.2byte	0x1
 6255 0e16 50       		.byte	0x50
 6256 0e17 66000000 		.4byte	.LVL219
 6257 0e1b 68000000 		.4byte	.LVL220
 6258 0e1f 0100     		.2byte	0x1
 6259 0e21 50       		.byte	0x50
 6260 0e22 6A000000 		.4byte	.LVL221
 6261 0e26 6C000000 		.4byte	.LVL222
 6262 0e2a 0100     		.2byte	0x1
 6263 0e2c 50       		.byte	0x50
 6264 0e2d 00000000 		.4byte	0
 6265 0e31 00000000 		.4byte	0
 6266              	.LLST63:
 6267 0e35 18000000 		.4byte	.LVL198
 6268 0e39 5A000000 		.4byte	.LVL213
 6269 0e3d 0100     		.2byte	0x1
 6270 0e3f 51       		.byte	0x51
 6271 0e40 62000000 		.4byte	.LVL217
 6272 0e44 6C000000 		.4byte	.LVL222
 6273 0e48 0100     		.2byte	0x1
 6274 0e4a 51       		.byte	0x51
 6275 0e4b 00000000 		.4byte	0
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 188


 6276 0e4f 00000000 		.4byte	0
 6277              	.LLST64:
 6278 0e53 18000000 		.4byte	.LVL198
 6279 0e57 1A000000 		.4byte	.LVL199
 6280 0e5b 0100     		.2byte	0x1
 6281 0e5d 50       		.byte	0x50
 6282 0e5e 1A000000 		.4byte	.LVL199
 6283 0e62 5A000000 		.4byte	.LVL213
 6284 0e66 0100     		.2byte	0x1
 6285 0e68 54       		.byte	0x54
 6286 0e69 62000000 		.4byte	.LVL217
 6287 0e6d 6C000000 		.4byte	.LVL222
 6288 0e71 0100     		.2byte	0x1
 6289 0e73 54       		.byte	0x54
 6290 0e74 00000000 		.4byte	0
 6291 0e78 00000000 		.4byte	0
 6292              	.LLST65:
 6293 0e7c 18000000 		.4byte	.LVL198
 6294 0e80 1C000000 		.4byte	.LVL200
 6295 0e84 0100     		.2byte	0x1
 6296 0e86 51       		.byte	0x51
 6297 0e87 1C000000 		.4byte	.LVL200
 6298 0e8b 5A000000 		.4byte	.LVL213
 6299 0e8f 0100     		.2byte	0x1
 6300 0e91 55       		.byte	0x55
 6301 0e92 62000000 		.4byte	.LVL217
 6302 0e96 6C000000 		.4byte	.LVL222
 6303 0e9a 0100     		.2byte	0x1
 6304 0e9c 55       		.byte	0x55
 6305 0e9d 00000000 		.4byte	0
 6306 0ea1 00000000 		.4byte	0
 6307              	.LLST66:
 6308 0ea5 1C000000 		.4byte	.LVL200
 6309 0ea9 20000000 		.4byte	.LVL202
 6310 0ead 0200     		.2byte	0x2
 6311 0eaf 30       		.byte	0x30
 6312 0eb0 9F       		.byte	0x9f
 6313 0eb1 20000000 		.4byte	.LVL202
 6314 0eb5 5A000000 		.4byte	.LVL213
 6315 0eb9 0100     		.2byte	0x1
 6316 0ebb 52       		.byte	0x52
 6317 0ebc 62000000 		.4byte	.LVL217
 6318 0ec0 6C000000 		.4byte	.LVL222
 6319 0ec4 0100     		.2byte	0x1
 6320 0ec6 52       		.byte	0x52
 6321 0ec7 00000000 		.4byte	0
 6322 0ecb 00000000 		.4byte	0
 6323              	.LLST67:
 6324 0ecf 00000000 		.4byte	.LVL224
 6325 0ed3 09000000 		.4byte	.LVL225-1
 6326 0ed7 0100     		.2byte	0x1
 6327 0ed9 50       		.byte	0x50
 6328 0eda 09000000 		.4byte	.LVL225-1
 6329 0ede 0C000000 		.4byte	.LFE7
 6330 0ee2 0400     		.2byte	0x4
 6331 0ee4 F3       		.byte	0xf3
 6332 0ee5 01       		.uleb128 0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 189


 6333 0ee6 50       		.byte	0x50
 6334 0ee7 9F       		.byte	0x9f
 6335 0ee8 00000000 		.4byte	0
 6336 0eec 00000000 		.4byte	0
 6337              	.LLST68:
 6338 0ef0 00000000 		.4byte	.LVL224
 6339 0ef4 09000000 		.4byte	.LVL225-1
 6340 0ef8 0100     		.2byte	0x1
 6341 0efa 51       		.byte	0x51
 6342 0efb 09000000 		.4byte	.LVL225-1
 6343 0eff 0C000000 		.4byte	.LFE7
 6344 0f03 0400     		.2byte	0x4
 6345 0f05 F3       		.byte	0xf3
 6346 0f06 01       		.uleb128 0x1
 6347 0f07 51       		.byte	0x51
 6348 0f08 9F       		.byte	0x9f
 6349 0f09 00000000 		.4byte	0
 6350 0f0d 00000000 		.4byte	0
 6351              	.LLST69:
 6352 0f11 00000000 		.4byte	.LVL226
 6353 0f15 16000000 		.4byte	.LVL227
 6354 0f19 0100     		.2byte	0x1
 6355 0f1b 50       		.byte	0x50
 6356 0f1c 16000000 		.4byte	.LVL227
 6357 0f20 22000000 		.4byte	.LVL230
 6358 0f24 0100     		.2byte	0x1
 6359 0f26 54       		.byte	0x54
 6360 0f27 22000000 		.4byte	.LVL230
 6361 0f2b 26000000 		.4byte	.LVL231
 6362 0f2f 0100     		.2byte	0x1
 6363 0f31 50       		.byte	0x50
 6364 0f32 26000000 		.4byte	.LVL231
 6365 0f36 30000000 		.4byte	.LVL234
 6366 0f3a 0100     		.2byte	0x1
 6367 0f3c 54       		.byte	0x54
 6368 0f3d 30000000 		.4byte	.LVL234
 6369 0f41 36000000 		.4byte	.LVL237
 6370 0f45 0100     		.2byte	0x1
 6371 0f47 50       		.byte	0x50
 6372 0f48 36000000 		.4byte	.LVL237
 6373 0f4c 48000000 		.4byte	.LVL241
 6374 0f50 0100     		.2byte	0x1
 6375 0f52 54       		.byte	0x54
 6376 0f53 48000000 		.4byte	.LVL241
 6377 0f57 A6000000 		.4byte	.LVL259
 6378 0f5b 0400     		.2byte	0x4
 6379 0f5d F3       		.byte	0xf3
 6380 0f5e 01       		.uleb128 0x1
 6381 0f5f 50       		.byte	0x50
 6382 0f60 9F       		.byte	0x9f
 6383 0f61 A6000000 		.4byte	.LVL259
 6384 0f65 A8000000 		.4byte	.LVL260
 6385 0f69 0100     		.2byte	0x1
 6386 0f6b 50       		.byte	0x50
 6387 0f6c A8000000 		.4byte	.LVL260
 6388 0f70 AA000000 		.4byte	.LVL261
 6389 0f74 0400     		.2byte	0x4
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 190


 6390 0f76 F3       		.byte	0xf3
 6391 0f77 01       		.uleb128 0x1
 6392 0f78 50       		.byte	0x50
 6393 0f79 9F       		.byte	0x9f
 6394 0f7a AA000000 		.4byte	.LVL261
 6395 0f7e AC000000 		.4byte	.LVL262
 6396 0f82 0100     		.2byte	0x1
 6397 0f84 50       		.byte	0x50
 6398 0f85 AC000000 		.4byte	.LVL262
 6399 0f89 B0000000 		.4byte	.LVL263
 6400 0f8d 0100     		.2byte	0x1
 6401 0f8f 54       		.byte	0x54
 6402 0f90 B0000000 		.4byte	.LVL263
 6403 0f94 C2000000 		.4byte	.LFE10
 6404 0f98 0400     		.2byte	0x4
 6405 0f9a F3       		.byte	0xf3
 6406 0f9b 01       		.uleb128 0x1
 6407 0f9c 50       		.byte	0x50
 6408 0f9d 9F       		.byte	0x9f
 6409 0f9e 00000000 		.4byte	0
 6410 0fa2 00000000 		.4byte	0
 6411              	.LLST70:
 6412 0fa6 00000000 		.4byte	.LVL226
 6413 0faa 19000000 		.4byte	.LVL228-1
 6414 0fae 0100     		.2byte	0x1
 6415 0fb0 51       		.byte	0x51
 6416 0fb1 19000000 		.4byte	.LVL228-1
 6417 0fb5 22000000 		.4byte	.LVL230
 6418 0fb9 0100     		.2byte	0x1
 6419 0fbb 58       		.byte	0x58
 6420 0fbc 22000000 		.4byte	.LVL230
 6421 0fc0 29000000 		.4byte	.LVL232-1
 6422 0fc4 0100     		.2byte	0x1
 6423 0fc6 51       		.byte	0x51
 6424 0fc7 29000000 		.4byte	.LVL232-1
 6425 0fcb 30000000 		.4byte	.LVL234
 6426 0fcf 0100     		.2byte	0x1
 6427 0fd1 58       		.byte	0x58
 6428 0fd2 30000000 		.4byte	.LVL234
 6429 0fd6 39000000 		.4byte	.LVL238-1
 6430 0fda 0100     		.2byte	0x1
 6431 0fdc 51       		.byte	0x51
 6432 0fdd 39000000 		.4byte	.LVL238-1
 6433 0fe1 48000000 		.4byte	.LVL241
 6434 0fe5 0100     		.2byte	0x1
 6435 0fe7 58       		.byte	0x58
 6436 0fe8 48000000 		.4byte	.LVL241
 6437 0fec A6000000 		.4byte	.LVL259
 6438 0ff0 0400     		.2byte	0x4
 6439 0ff2 F3       		.byte	0xf3
 6440 0ff3 01       		.uleb128 0x1
 6441 0ff4 51       		.byte	0x51
 6442 0ff5 9F       		.byte	0x9f
 6443 0ff6 A6000000 		.4byte	.LVL259
 6444 0ffa B0000000 		.4byte	.LVL263
 6445 0ffe 0100     		.2byte	0x1
 6446 1000 51       		.byte	0x51
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 191


 6447 1001 B0000000 		.4byte	.LVL263
 6448 1005 C2000000 		.4byte	.LFE10
 6449 1009 0400     		.2byte	0x4
 6450 100b F3       		.byte	0xf3
 6451 100c 01       		.uleb128 0x1
 6452 100d 51       		.byte	0x51
 6453 100e 9F       		.byte	0x9f
 6454 100f 00000000 		.4byte	0
 6455 1013 00000000 		.4byte	0
 6456              	.LLST71:
 6457 1017 00000000 		.4byte	.LVL226
 6458 101b 19000000 		.4byte	.LVL228-1
 6459 101f 0100     		.2byte	0x1
 6460 1021 52       		.byte	0x52
 6461 1022 19000000 		.4byte	.LVL228-1
 6462 1026 22000000 		.4byte	.LVL230
 6463 102a 0100     		.2byte	0x1
 6464 102c 5A       		.byte	0x5a
 6465 102d 22000000 		.4byte	.LVL230
 6466 1031 29000000 		.4byte	.LVL232-1
 6467 1035 0100     		.2byte	0x1
 6468 1037 52       		.byte	0x52
 6469 1038 29000000 		.4byte	.LVL232-1
 6470 103c 30000000 		.4byte	.LVL234
 6471 1040 0100     		.2byte	0x1
 6472 1042 5A       		.byte	0x5a
 6473 1043 30000000 		.4byte	.LVL234
 6474 1047 39000000 		.4byte	.LVL238-1
 6475 104b 0100     		.2byte	0x1
 6476 104d 52       		.byte	0x52
 6477 104e 39000000 		.4byte	.LVL238-1
 6478 1052 A6000000 		.4byte	.LVL259
 6479 1056 0100     		.2byte	0x1
 6480 1058 5A       		.byte	0x5a
 6481 1059 A6000000 		.4byte	.LVL259
 6482 105d B0000000 		.4byte	.LVL263
 6483 1061 0100     		.2byte	0x1
 6484 1063 52       		.byte	0x52
 6485 1064 B0000000 		.4byte	.LVL263
 6486 1068 C2000000 		.4byte	.LFE10
 6487 106c 0100     		.2byte	0x1
 6488 106e 5A       		.byte	0x5a
 6489 106f 00000000 		.4byte	0
 6490 1073 00000000 		.4byte	0
 6491              	.LLST72:
 6492 1077 30000000 		.4byte	.LVL234
 6493 107b 36000000 		.4byte	.LVL237
 6494 107f 0100     		.2byte	0x1
 6495 1081 50       		.byte	0x50
 6496 1082 36000000 		.4byte	.LVL237
 6497 1086 52000000 		.4byte	.LVL245
 6498 108a 0100     		.2byte	0x1
 6499 108c 54       		.byte	0x54
 6500 108d 52000000 		.4byte	.LVL245
 6501 1091 60000000 		.4byte	.LVL249
 6502 1095 0300     		.2byte	0x3
 6503 1097 74       		.byte	0x74
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 192


 6504 1098 7F       		.sleb128 -1
 6505 1099 9F       		.byte	0x9f
 6506 109a 60000000 		.4byte	.LVL249
 6507 109e A6000000 		.4byte	.LVL259
 6508 10a2 0100     		.2byte	0x1
 6509 10a4 54       		.byte	0x54
 6510 10a5 B0000000 		.4byte	.LVL263
 6511 10a9 C2000000 		.4byte	.LFE10
 6512 10ad 0100     		.2byte	0x1
 6513 10af 54       		.byte	0x54
 6514 10b0 00000000 		.4byte	0
 6515 10b4 00000000 		.4byte	0
 6516              	.LLST73:
 6517 10b8 30000000 		.4byte	.LVL234
 6518 10bc 39000000 		.4byte	.LVL238-1
 6519 10c0 0100     		.2byte	0x1
 6520 10c2 51       		.byte	0x51
 6521 10c3 39000000 		.4byte	.LVL238-1
 6522 10c7 5C000000 		.4byte	.LVL248
 6523 10cb 0100     		.2byte	0x1
 6524 10cd 58       		.byte	0x58
 6525 10ce 5C000000 		.4byte	.LVL248
 6526 10d2 60000000 		.4byte	.LVL249
 6527 10d6 0300     		.2byte	0x3
 6528 10d8 78       		.byte	0x78
 6529 10d9 7F       		.sleb128 -1
 6530 10da 9F       		.byte	0x9f
 6531 10db 60000000 		.4byte	.LVL249
 6532 10df A6000000 		.4byte	.LVL259
 6533 10e3 0100     		.2byte	0x1
 6534 10e5 58       		.byte	0x58
 6535 10e6 B0000000 		.4byte	.LVL263
 6536 10ea C2000000 		.4byte	.LFE10
 6537 10ee 0100     		.2byte	0x1
 6538 10f0 58       		.byte	0x58
 6539 10f1 00000000 		.4byte	0
 6540 10f5 00000000 		.4byte	0
 6541              	.LLST74:
 6542 10f9 30000000 		.4byte	.LVL234
 6543 10fd 32000000 		.4byte	.LVL235
 6544 1101 0100     		.2byte	0x1
 6545 1103 50       		.byte	0x50
 6546 1104 32000000 		.4byte	.LVL235
 6547 1108 A6000000 		.4byte	.LVL259
 6548 110c 0100     		.2byte	0x1
 6549 110e 56       		.byte	0x56
 6550 110f B0000000 		.4byte	.LVL263
 6551 1113 C2000000 		.4byte	.LFE10
 6552 1117 0100     		.2byte	0x1
 6553 1119 56       		.byte	0x56
 6554 111a 00000000 		.4byte	0
 6555 111e 00000000 		.4byte	0
 6556              	.LLST75:
 6557 1122 30000000 		.4byte	.LVL234
 6558 1126 34000000 		.4byte	.LVL236
 6559 112a 0100     		.2byte	0x1
 6560 112c 51       		.byte	0x51
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 193


 6561 112d 34000000 		.4byte	.LVL236
 6562 1131 A6000000 		.4byte	.LVL259
 6563 1135 0100     		.2byte	0x1
 6564 1137 57       		.byte	0x57
 6565 1138 B0000000 		.4byte	.LVL263
 6566 113c C2000000 		.4byte	.LFE10
 6567 1140 0100     		.2byte	0x1
 6568 1142 57       		.byte	0x57
 6569 1143 00000000 		.4byte	0
 6570 1147 00000000 		.4byte	0
 6571              	.LLST76:
 6572 114b 2A000000 		.4byte	.LVL232
 6573 114f 2C000000 		.4byte	.LVL233
 6574 1153 0100     		.2byte	0x1
 6575 1155 50       		.byte	0x50
 6576 1156 3C000000 		.4byte	.LVL239
 6577 115a A0000000 		.4byte	.LVL257
 6578 115e 0100     		.2byte	0x1
 6579 1160 59       		.byte	0x59
 6580 1161 A0000000 		.4byte	.LVL257
 6581 1165 A2000000 		.4byte	.LVL258
 6582 1169 0100     		.2byte	0x1
 6583 116b 50       		.byte	0x50
 6584 116c B0000000 		.4byte	.LVL263
 6585 1170 C2000000 		.4byte	.LFE10
 6586 1174 0100     		.2byte	0x1
 6587 1176 59       		.byte	0x59
 6588 1177 00000000 		.4byte	0
 6589 117b 00000000 		.4byte	0
 6590              	.LLST77:
 6591 117f 1A000000 		.4byte	.LVL228
 6592 1183 1C000000 		.4byte	.LVL229
 6593 1187 0100     		.2byte	0x1
 6594 1189 50       		.byte	0x50
 6595 118a 44000000 		.4byte	.LVL240
 6596 118e 52000000 		.4byte	.LVL245
 6597 1192 0100     		.2byte	0x1
 6598 1194 50       		.byte	0x50
 6599 1195 60000000 		.4byte	.LVL249
 6600 1199 7C000000 		.4byte	.LVL250
 6601 119d 0100     		.2byte	0x1
 6602 119f 50       		.byte	0x50
 6603 11a0 82000000 		.4byte	.LVL251
 6604 11a4 8E000000 		.4byte	.LVL252
 6605 11a8 0100     		.2byte	0x1
 6606 11aa 50       		.byte	0x50
 6607 11ab 92000000 		.4byte	.LVL253
 6608 11af 94000000 		.4byte	.LVL254
 6609 11b3 0100     		.2byte	0x1
 6610 11b5 50       		.byte	0x50
 6611 11b6 9A000000 		.4byte	.LVL255
 6612 11ba 9C000000 		.4byte	.LVL256
 6613 11be 0100     		.2byte	0x1
 6614 11c0 50       		.byte	0x50
 6615 11c1 B0000000 		.4byte	.LVL263
 6616 11c5 B2000000 		.4byte	.LVL264
 6617 11c9 0100     		.2byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 194


 6618 11cb 50       		.byte	0x50
 6619 11cc B6000000 		.4byte	.LVL265
 6620 11d0 B8000000 		.4byte	.LVL266
 6621 11d4 0100     		.2byte	0x1
 6622 11d6 50       		.byte	0x50
 6623 11d7 BC000000 		.4byte	.LVL267
 6624 11db BE000000 		.4byte	.LVL268
 6625 11df 0100     		.2byte	0x1
 6626 11e1 50       		.byte	0x50
 6627 11e2 00000000 		.4byte	0
 6628 11e6 00000000 		.4byte	0
 6629              	.LLST78:
 6630 11ea 44000000 		.4byte	.LVL240
 6631 11ee 48000000 		.4byte	.LVL241
 6632 11f2 0200     		.2byte	0x2
 6633 11f4 30       		.byte	0x30
 6634 11f5 9F       		.byte	0x9f
 6635 11f6 48000000 		.4byte	.LVL241
 6636 11fa A6000000 		.4byte	.LVL259
 6637 11fe 0100     		.2byte	0x1
 6638 1200 55       		.byte	0x55
 6639 1201 B0000000 		.4byte	.LVL263
 6640 1205 C2000000 		.4byte	.LFE10
 6641 1209 0100     		.2byte	0x1
 6642 120b 55       		.byte	0x55
 6643 120c 00000000 		.4byte	0
 6644 1210 00000000 		.4byte	0
 6645              	.LLST79:
 6646 1214 00000000 		.4byte	.LVL269
 6647 1218 09000000 		.4byte	.LVL270-1
 6648 121c 0100     		.2byte	0x1
 6649 121e 50       		.byte	0x50
 6650 121f 09000000 		.4byte	.LVL270-1
 6651 1223 0C000000 		.4byte	.LFE9
 6652 1227 0400     		.2byte	0x4
 6653 1229 F3       		.byte	0xf3
 6654 122a 01       		.uleb128 0x1
 6655 122b 50       		.byte	0x50
 6656 122c 9F       		.byte	0x9f
 6657 122d 00000000 		.4byte	0
 6658 1231 00000000 		.4byte	0
 6659              	.LLST80:
 6660 1235 00000000 		.4byte	.LVL269
 6661 1239 09000000 		.4byte	.LVL270-1
 6662 123d 0100     		.2byte	0x1
 6663 123f 51       		.byte	0x51
 6664 1240 09000000 		.4byte	.LVL270-1
 6665 1244 0C000000 		.4byte	.LFE9
 6666 1248 0400     		.2byte	0x4
 6667 124a F3       		.byte	0xf3
 6668 124b 01       		.uleb128 0x1
 6669 124c 51       		.byte	0x51
 6670 124d 9F       		.byte	0x9f
 6671 124e 00000000 		.4byte	0
 6672 1252 00000000 		.4byte	0
 6673              	.LLST81:
 6674 1256 00000000 		.4byte	.LVL271
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 195


 6675 125a 0A000000 		.4byte	.LVL272
 6676 125e 0100     		.2byte	0x1
 6677 1260 50       		.byte	0x50
 6678 1261 0A000000 		.4byte	.LVL272
 6679 1265 0C000000 		.4byte	.LVL273
 6680 1269 0100     		.2byte	0x1
 6681 126b 53       		.byte	0x53
 6682 126c 0C000000 		.4byte	.LVL273
 6683 1270 2E000000 		.4byte	.LVL278
 6684 1274 0400     		.2byte	0x4
 6685 1276 F3       		.byte	0xf3
 6686 1277 01       		.uleb128 0x1
 6687 1278 50       		.byte	0x50
 6688 1279 9F       		.byte	0x9f
 6689 127a 2E000000 		.4byte	.LVL278
 6690 127e 30000000 		.4byte	.LVL279
 6691 1282 0100     		.2byte	0x1
 6692 1284 50       		.byte	0x50
 6693 1285 30000000 		.4byte	.LVL279
 6694 1289 32000000 		.4byte	.LVL280
 6695 128d 0400     		.2byte	0x4
 6696 128f F3       		.byte	0xf3
 6697 1290 01       		.uleb128 0x1
 6698 1291 50       		.byte	0x50
 6699 1292 9F       		.byte	0x9f
 6700 1293 32000000 		.4byte	.LVL280
 6701 1297 34000000 		.4byte	.LVL281
 6702 129b 0100     		.2byte	0x1
 6703 129d 50       		.byte	0x50
 6704 129e 34000000 		.4byte	.LVL281
 6705 12a2 36000000 		.4byte	.LVL282
 6706 12a6 0100     		.2byte	0x1
 6707 12a8 53       		.byte	0x53
 6708 12a9 36000000 		.4byte	.LVL282
 6709 12ad 44000000 		.4byte	.LFE12
 6710 12b1 0400     		.2byte	0x4
 6711 12b3 F3       		.byte	0xf3
 6712 12b4 01       		.uleb128 0x1
 6713 12b5 50       		.byte	0x50
 6714 12b6 9F       		.byte	0x9f
 6715 12b7 00000000 		.4byte	0
 6716 12bb 00000000 		.4byte	0
 6717              	.LLST82:
 6718 12bf 00000000 		.4byte	.LVL271
 6719 12c3 26000000 		.4byte	.LVL276
 6720 12c7 0100     		.2byte	0x1
 6721 12c9 51       		.byte	0x51
 6722 12ca 26000000 		.4byte	.LVL276
 6723 12ce 2E000000 		.4byte	.LVL278
 6724 12d2 0400     		.2byte	0x4
 6725 12d4 F3       		.byte	0xf3
 6726 12d5 01       		.uleb128 0x1
 6727 12d6 51       		.byte	0x51
 6728 12d7 9F       		.byte	0x9f
 6729 12d8 2E000000 		.4byte	.LVL278
 6730 12dc 3E000000 		.4byte	.LVL286
 6731 12e0 0100     		.2byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 196


 6732 12e2 51       		.byte	0x51
 6733 12e3 3E000000 		.4byte	.LVL286
 6734 12e7 44000000 		.4byte	.LFE12
 6735 12eb 0400     		.2byte	0x4
 6736 12ed F3       		.byte	0xf3
 6737 12ee 01       		.uleb128 0x1
 6738 12ef 51       		.byte	0x51
 6739 12f0 9F       		.byte	0x9f
 6740 12f1 00000000 		.4byte	0
 6741 12f5 00000000 		.4byte	0
 6742              	.LLST83:
 6743 12f9 0C000000 		.4byte	.LVL273
 6744 12fd 2E000000 		.4byte	.LVL278
 6745 1301 0100     		.2byte	0x1
 6746 1303 53       		.byte	0x53
 6747 1304 36000000 		.4byte	.LVL282
 6748 1308 44000000 		.4byte	.LFE12
 6749 130c 0100     		.2byte	0x1
 6750 130e 53       		.byte	0x53
 6751 130f 00000000 		.4byte	0
 6752 1313 00000000 		.4byte	0
 6753              	.LLST84:
 6754 1317 0C000000 		.4byte	.LVL273
 6755 131b 2C000000 		.4byte	.LVL277
 6756 131f 0100     		.2byte	0x1
 6757 1321 50       		.byte	0x50
 6758 1322 36000000 		.4byte	.LVL282
 6759 1326 38000000 		.4byte	.LVL283
 6760 132a 0100     		.2byte	0x1
 6761 132c 50       		.byte	0x50
 6762 132d 3A000000 		.4byte	.LVL284
 6763 1331 3C000000 		.4byte	.LVL285
 6764 1335 0100     		.2byte	0x1
 6765 1337 50       		.byte	0x50
 6766 1338 3E000000 		.4byte	.LVL286
 6767 133c 40000000 		.4byte	.LVL287
 6768 1340 0100     		.2byte	0x1
 6769 1342 50       		.byte	0x50
 6770 1343 00000000 		.4byte	0
 6771 1347 00000000 		.4byte	0
 6772              	.LLST85:
 6773 134b 00000000 		.4byte	.LVL288
 6774 134f 0B000000 		.4byte	.LVL290-1
 6775 1353 0100     		.2byte	0x1
 6776 1355 50       		.byte	0x50
 6777 1356 0B000000 		.4byte	.LVL290-1
 6778 135a 0E000000 		.4byte	.LFE11
 6779 135e 0400     		.2byte	0x4
 6780 1360 F3       		.byte	0xf3
 6781 1361 01       		.uleb128 0x1
 6782 1362 50       		.byte	0x50
 6783 1363 9F       		.byte	0x9f
 6784 1364 00000000 		.4byte	0
 6785 1368 00000000 		.4byte	0
 6786              	.LLST86:
 6787 136c 00000000 		.4byte	.LVL288
 6788 1370 08000000 		.4byte	.LVL289
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 197


 6789 1374 0100     		.2byte	0x1
 6790 1376 51       		.byte	0x51
 6791 1377 08000000 		.4byte	.LVL289
 6792 137b 0E000000 		.4byte	.LFE11
 6793 137f 0400     		.2byte	0x4
 6794 1381 F3       		.byte	0xf3
 6795 1382 01       		.uleb128 0x1
 6796 1383 51       		.byte	0x51
 6797 1384 9F       		.byte	0x9f
 6798 1385 00000000 		.4byte	0
 6799 1389 00000000 		.4byte	0
 6800              	.LLST87:
 6801 138d 00000000 		.4byte	.LVL291
 6802 1391 0F000000 		.4byte	.LVL294-1
 6803 1395 0100     		.2byte	0x1
 6804 1397 50       		.byte	0x50
 6805 1398 0F000000 		.4byte	.LVL294-1
 6806 139c 2C000000 		.4byte	.LVL298
 6807 13a0 0100     		.2byte	0x1
 6808 13a2 54       		.byte	0x54
 6809 13a3 2C000000 		.4byte	.LVL298
 6810 13a7 2E000000 		.4byte	.LVL299
 6811 13ab 0100     		.2byte	0x1
 6812 13ad 50       		.byte	0x50
 6813 13ae 2E000000 		.4byte	.LVL299
 6814 13b2 30000000 		.4byte	.LVL300
 6815 13b6 0400     		.2byte	0x4
 6816 13b8 F3       		.byte	0xf3
 6817 13b9 01       		.uleb128 0x1
 6818 13ba 50       		.byte	0x50
 6819 13bb 9F       		.byte	0x9f
 6820 13bc 30000000 		.4byte	.LVL300
 6821 13c0 32000000 		.4byte	.LVL301
 6822 13c4 0100     		.2byte	0x1
 6823 13c6 50       		.byte	0x50
 6824 13c7 32000000 		.4byte	.LVL301
 6825 13cb 38000000 		.4byte	.LFE14
 6826 13cf 0100     		.2byte	0x1
 6827 13d1 54       		.byte	0x54
 6828 13d2 00000000 		.4byte	0
 6829 13d6 00000000 		.4byte	0
 6830              	.LLST88:
 6831 13da 00000000 		.4byte	.LVL291
 6832 13de 0C000000 		.4byte	.LVL293
 6833 13e2 0100     		.2byte	0x1
 6834 13e4 51       		.byte	0x51
 6835 13e5 0C000000 		.4byte	.LVL293
 6836 13e9 0F000000 		.4byte	.LVL294-1
 6837 13ed 0300     		.2byte	0x3
 6838 13ef 71       		.byte	0x71
 6839 13f0 01       		.sleb128 1
 6840 13f1 9F       		.byte	0x9f
 6841 13f2 0F000000 		.4byte	.LVL294-1
 6842 13f6 2C000000 		.4byte	.LVL298
 6843 13fa 0400     		.2byte	0x4
 6844 13fc F3       		.byte	0xf3
 6845 13fd 01       		.uleb128 0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 198


 6846 13fe 51       		.byte	0x51
 6847 13ff 9F       		.byte	0x9f
 6848 1400 2C000000 		.4byte	.LVL298
 6849 1404 34000000 		.4byte	.LVL302
 6850 1408 0100     		.2byte	0x1
 6851 140a 51       		.byte	0x51
 6852 140b 34000000 		.4byte	.LVL302
 6853 140f 38000000 		.4byte	.LFE14
 6854 1413 0400     		.2byte	0x4
 6855 1415 F3       		.byte	0xf3
 6856 1416 01       		.uleb128 0x1
 6857 1417 51       		.byte	0x51
 6858 1418 9F       		.byte	0x9f
 6859 1419 00000000 		.4byte	0
 6860 141d 00000000 		.4byte	0
 6861              	.LLST89:
 6862 1421 00000000 		.4byte	.LVL291
 6863 1425 0F000000 		.4byte	.LVL294-1
 6864 1429 0100     		.2byte	0x1
 6865 142b 52       		.byte	0x52
 6866 142c 0F000000 		.4byte	.LVL294-1
 6867 1430 2C000000 		.4byte	.LVL298
 6868 1434 0400     		.2byte	0x4
 6869 1436 F3       		.byte	0xf3
 6870 1437 01       		.uleb128 0x1
 6871 1438 52       		.byte	0x52
 6872 1439 9F       		.byte	0x9f
 6873 143a 2C000000 		.4byte	.LVL298
 6874 143e 34000000 		.4byte	.LVL302
 6875 1442 0100     		.2byte	0x1
 6876 1444 52       		.byte	0x52
 6877 1445 34000000 		.4byte	.LVL302
 6878 1449 38000000 		.4byte	.LFE14
 6879 144d 0400     		.2byte	0x4
 6880 144f F3       		.byte	0xf3
 6881 1450 01       		.uleb128 0x1
 6882 1451 52       		.byte	0x52
 6883 1452 9F       		.byte	0x9f
 6884 1453 00000000 		.4byte	0
 6885 1457 00000000 		.4byte	0
 6886              	.LLST90:
 6887 145b 0A000000 		.4byte	.LVL292
 6888 145f 0F000000 		.4byte	.LVL294-1
 6889 1463 0100     		.2byte	0x1
 6890 1465 50       		.byte	0x50
 6891 1466 0F000000 		.4byte	.LVL294-1
 6892 146a 10000000 		.4byte	.LVL294
 6893 146e 0100     		.2byte	0x1
 6894 1470 54       		.byte	0x54
 6895 1471 10000000 		.4byte	.LVL294
 6896 1475 12000000 		.4byte	.LVL295
 6897 1479 0600     		.2byte	0x6
 6898 147b 74       		.byte	0x74
 6899 147c 00       		.sleb128 0
 6900 147d 70       		.byte	0x70
 6901 147e 00       		.sleb128 0
 6902 147f 22       		.byte	0x22
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 199


 6903 1480 9F       		.byte	0x9f
 6904 1481 12000000 		.4byte	.LVL295
 6905 1485 2A000000 		.4byte	.LVL297
 6906 1489 0100     		.2byte	0x1
 6907 148b 50       		.byte	0x50
 6908 148c 34000000 		.4byte	.LVL302
 6909 1490 36000000 		.4byte	.LVL303
 6910 1494 0100     		.2byte	0x1
 6911 1496 50       		.byte	0x50
 6912 1497 00000000 		.4byte	0
 6913 149b 00000000 		.4byte	0
 6914              	.LLST91:
 6915 149f 0A000000 		.4byte	.LVL292
 6916 14a3 0C000000 		.4byte	.LVL293
 6917 14a7 0300     		.2byte	0x3
 6918 14a9 71       		.byte	0x71
 6919 14aa 7F       		.sleb128 -1
 6920 14ab 9F       		.byte	0x9f
 6921 14ac 0C000000 		.4byte	.LVL293
 6922 14b0 0F000000 		.4byte	.LVL294-1
 6923 14b4 0100     		.2byte	0x1
 6924 14b6 51       		.byte	0x51
 6925 14b7 0F000000 		.4byte	.LVL294-1
 6926 14bb 2C000000 		.4byte	.LVL298
 6927 14bf 0600     		.2byte	0x6
 6928 14c1 F3       		.byte	0xf3
 6929 14c2 01       		.uleb128 0x1
 6930 14c3 51       		.byte	0x51
 6931 14c4 31       		.byte	0x31
 6932 14c5 1C       		.byte	0x1c
 6933 14c6 9F       		.byte	0x9f
 6934 14c7 34000000 		.4byte	.LVL302
 6935 14cb 38000000 		.4byte	.LFE14
 6936 14cf 0600     		.2byte	0x6
 6937 14d1 F3       		.byte	0xf3
 6938 14d2 01       		.uleb128 0x1
 6939 14d3 51       		.byte	0x51
 6940 14d4 31       		.byte	0x31
 6941 14d5 1C       		.byte	0x1c
 6942 14d6 9F       		.byte	0x9f
 6943 14d7 00000000 		.4byte	0
 6944 14db 00000000 		.4byte	0
 6945              	.LLST92:
 6946 14df 10000000 		.4byte	.LVL294
 6947 14e3 12000000 		.4byte	.LVL295
 6948 14e7 0100     		.2byte	0x1
 6949 14e9 50       		.byte	0x50
 6950 14ea 00000000 		.4byte	0
 6951 14ee 00000000 		.4byte	0
 6952              	.LLST93:
 6953 14f2 00000000 		.4byte	.LVL304
 6954 14f6 0B000000 		.4byte	.LVL306-1
 6955 14fa 0100     		.2byte	0x1
 6956 14fc 50       		.byte	0x50
 6957 14fd 0B000000 		.4byte	.LVL306-1
 6958 1501 0E000000 		.4byte	.LFE13
 6959 1505 0400     		.2byte	0x4
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 200


 6960 1507 F3       		.byte	0xf3
 6961 1508 01       		.uleb128 0x1
 6962 1509 50       		.byte	0x50
 6963 150a 9F       		.byte	0x9f
 6964 150b 00000000 		.4byte	0
 6965 150f 00000000 		.4byte	0
 6966              	.LLST94:
 6967 1513 00000000 		.4byte	.LVL304
 6968 1517 08000000 		.4byte	.LVL305
 6969 151b 0100     		.2byte	0x1
 6970 151d 51       		.byte	0x51
 6971 151e 08000000 		.4byte	.LVL305
 6972 1522 0E000000 		.4byte	.LFE13
 6973 1526 0400     		.2byte	0x4
 6974 1528 F3       		.byte	0xf3
 6975 1529 01       		.uleb128 0x1
 6976 152a 51       		.byte	0x51
 6977 152b 9F       		.byte	0x9f
 6978 152c 00000000 		.4byte	0
 6979 1530 00000000 		.4byte	0
 6980              	.LLST95:
 6981 1534 00000000 		.4byte	.LVL307
 6982 1538 22000000 		.4byte	.LVL311
 6983 153c 0100     		.2byte	0x1
 6984 153e 50       		.byte	0x50
 6985 153f 22000000 		.4byte	.LVL311
 6986 1543 24000000 		.4byte	.LVL312
 6987 1547 0100     		.2byte	0x1
 6988 1549 56       		.byte	0x56
 6989 154a 24000000 		.4byte	.LVL312
 6990 154e 26000000 		.4byte	.LVL313
 6991 1552 0100     		.2byte	0x1
 6992 1554 50       		.byte	0x50
 6993 1555 26000000 		.4byte	.LVL313
 6994 1559 28000000 		.4byte	.LVL314
 6995 155d 0400     		.2byte	0x4
 6996 155f F3       		.byte	0xf3
 6997 1560 01       		.uleb128 0x1
 6998 1561 50       		.byte	0x50
 6999 1562 9F       		.byte	0x9f
 7000 1563 28000000 		.4byte	.LVL314
 7001 1567 2A000000 		.4byte	.LVL315
 7002 156b 0100     		.2byte	0x1
 7003 156d 50       		.byte	0x50
 7004 156e 2A000000 		.4byte	.LVL315
 7005 1572 2C000000 		.4byte	.LVL316
 7006 1576 0100     		.2byte	0x1
 7007 1578 56       		.byte	0x56
 7008 1579 2C000000 		.4byte	.LVL316
 7009 157d 2E000000 		.4byte	.LVL317
 7010 1581 0100     		.2byte	0x1
 7011 1583 50       		.byte	0x50
 7012 1584 2E000000 		.4byte	.LVL317
 7013 1588 30000000 		.4byte	.LVL318
 7014 158c 0100     		.2byte	0x1
 7015 158e 56       		.byte	0x56
 7016 158f 30000000 		.4byte	.LVL318
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 201


 7017 1593 32000000 		.4byte	.LVL319
 7018 1597 0100     		.2byte	0x1
 7019 1599 50       		.byte	0x50
 7020 159a 32000000 		.4byte	.LVL319
 7021 159e 34000000 		.4byte	.LVL320
 7022 15a2 0100     		.2byte	0x1
 7023 15a4 56       		.byte	0x56
 7024 15a5 34000000 		.4byte	.LVL320
 7025 15a9 36000000 		.4byte	.LFE16
 7026 15ad 0400     		.2byte	0x4
 7027 15af F3       		.byte	0xf3
 7028 15b0 01       		.uleb128 0x1
 7029 15b1 50       		.byte	0x50
 7030 15b2 9F       		.byte	0x9f
 7031 15b3 00000000 		.4byte	0
 7032 15b7 00000000 		.4byte	0
 7033              	.LLST96:
 7034 15bb 00000000 		.4byte	.LVL307
 7035 15bf 0C000000 		.4byte	.LVL308
 7036 15c3 0100     		.2byte	0x1
 7037 15c5 53       		.byte	0x53
 7038 15c6 0C000000 		.4byte	.LVL308
 7039 15ca 24000000 		.4byte	.LVL312
 7040 15ce 0400     		.2byte	0x4
 7041 15d0 F3       		.byte	0xf3
 7042 15d1 01       		.uleb128 0x1
 7043 15d2 53       		.byte	0x53
 7044 15d3 9F       		.byte	0x9f
 7045 15d4 24000000 		.4byte	.LVL312
 7046 15d8 2C000000 		.4byte	.LVL316
 7047 15dc 0100     		.2byte	0x1
 7048 15de 53       		.byte	0x53
 7049 15df 2C000000 		.4byte	.LVL316
 7050 15e3 36000000 		.4byte	.LFE16
 7051 15e7 0400     		.2byte	0x4
 7052 15e9 F3       		.byte	0xf3
 7053 15ea 01       		.uleb128 0x1
 7054 15eb 53       		.byte	0x53
 7055 15ec 9F       		.byte	0x9f
 7056 15ed 00000000 		.4byte	0
 7057 15f1 00000000 		.4byte	0
 7058              	.LLST97:
 7059 15f5 0C000000 		.4byte	.LVL308
 7060 15f9 24000000 		.4byte	.LVL312
 7061 15fd 0100     		.2byte	0x1
 7062 15ff 54       		.byte	0x54
 7063 1600 2C000000 		.4byte	.LVL316
 7064 1604 32000000 		.4byte	.LVL319
 7065 1608 0100     		.2byte	0x1
 7066 160a 54       		.byte	0x54
 7067 160b 00000000 		.4byte	0
 7068 160f 00000000 		.4byte	0
 7069              	.LLST98:
 7070 1613 0C000000 		.4byte	.LVL308
 7071 1617 24000000 		.4byte	.LVL312
 7072 161b 0100     		.2byte	0x1
 7073 161d 53       		.byte	0x53
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 202


 7074 161e 2C000000 		.4byte	.LVL316
 7075 1622 32000000 		.4byte	.LVL319
 7076 1626 0100     		.2byte	0x1
 7077 1628 53       		.byte	0x53
 7078 1629 00000000 		.4byte	0
 7079 162d 00000000 		.4byte	0
 7080              	.LLST99:
 7081 1631 00000000 		.4byte	.LVL321
 7082 1635 09000000 		.4byte	.LVL322-1
 7083 1639 0100     		.2byte	0x1
 7084 163b 50       		.byte	0x50
 7085 163c 09000000 		.4byte	.LVL322-1
 7086 1640 0C000000 		.4byte	.LFE15
 7087 1644 0400     		.2byte	0x4
 7088 1646 F3       		.byte	0xf3
 7089 1647 01       		.uleb128 0x1
 7090 1648 50       		.byte	0x50
 7091 1649 9F       		.byte	0x9f
 7092 164a 00000000 		.4byte	0
 7093 164e 00000000 		.4byte	0
 7094              	.LLST100:
 7095 1652 00000000 		.4byte	.LVL321
 7096 1656 09000000 		.4byte	.LVL322-1
 7097 165a 0100     		.2byte	0x1
 7098 165c 51       		.byte	0x51
 7099 165d 09000000 		.4byte	.LVL322-1
 7100 1661 0C000000 		.4byte	.LFE15
 7101 1665 0400     		.2byte	0x4
 7102 1667 F3       		.byte	0xf3
 7103 1668 01       		.uleb128 0x1
 7104 1669 51       		.byte	0x51
 7105 166a 9F       		.byte	0x9f
 7106 166b 00000000 		.4byte	0
 7107 166f 00000000 		.4byte	0
 7108              	.LLST101:
 7109 1673 00000000 		.4byte	.LVL321
 7110 1677 09000000 		.4byte	.LVL322-1
 7111 167b 0100     		.2byte	0x1
 7112 167d 52       		.byte	0x52
 7113 167e 09000000 		.4byte	.LVL322-1
 7114 1682 0C000000 		.4byte	.LFE15
 7115 1686 0400     		.2byte	0x4
 7116 1688 F3       		.byte	0xf3
 7117 1689 01       		.uleb128 0x1
 7118 168a 52       		.byte	0x52
 7119 168b 9F       		.byte	0x9f
 7120 168c 00000000 		.4byte	0
 7121 1690 00000000 		.4byte	0
 7122              	.LLST102:
 7123 1694 00000000 		.4byte	.LVL323
 7124 1698 20000000 		.4byte	.LVL326
 7125 169c 0100     		.2byte	0x1
 7126 169e 50       		.byte	0x50
 7127 169f 20000000 		.4byte	.LVL326
 7128 16a3 6C000000 		.4byte	.LVL340
 7129 16a7 0100     		.2byte	0x1
 7130 16a9 57       		.byte	0x57
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 203


 7131 16aa 6C000000 		.4byte	.LVL340
 7132 16ae 6E000000 		.4byte	.LVL341
 7133 16b2 0100     		.2byte	0x1
 7134 16b4 50       		.byte	0x50
 7135 16b5 6E000000 		.4byte	.LVL341
 7136 16b9 70000000 		.4byte	.LVL342
 7137 16bd 0400     		.2byte	0x4
 7138 16bf F3       		.byte	0xf3
 7139 16c0 01       		.uleb128 0x1
 7140 16c1 50       		.byte	0x50
 7141 16c2 9F       		.byte	0x9f
 7142 16c3 70000000 		.4byte	.LVL342
 7143 16c7 72000000 		.4byte	.LVL343
 7144 16cb 0100     		.2byte	0x1
 7145 16cd 50       		.byte	0x50
 7146 16ce 72000000 		.4byte	.LVL343
 7147 16d2 76000000 		.4byte	.LVL344
 7148 16d6 0100     		.2byte	0x1
 7149 16d8 57       		.byte	0x57
 7150 16d9 76000000 		.4byte	.LVL344
 7151 16dd 78000000 		.4byte	.LVL345
 7152 16e1 0100     		.2byte	0x1
 7153 16e3 50       		.byte	0x50
 7154 16e4 78000000 		.4byte	.LVL345
 7155 16e8 9A000000 		.4byte	.LFE18
 7156 16ec 0100     		.2byte	0x1
 7157 16ee 57       		.byte	0x57
 7158 16ef 00000000 		.4byte	0
 7159 16f3 00000000 		.4byte	0
 7160              	.LLST103:
 7161 16f7 00000000 		.4byte	.LVL323
 7162 16fb 1E000000 		.4byte	.LVL325
 7163 16ff 0100     		.2byte	0x1
 7164 1701 51       		.byte	0x51
 7165 1702 1E000000 		.4byte	.LVL325
 7166 1706 6C000000 		.4byte	.LVL340
 7167 170a 0100     		.2byte	0x1
 7168 170c 56       		.byte	0x56
 7169 170d 6C000000 		.4byte	.LVL340
 7170 1711 7C000000 		.4byte	.LVL346
 7171 1715 0100     		.2byte	0x1
 7172 1717 51       		.byte	0x51
 7173 1718 7C000000 		.4byte	.LVL346
 7174 171c 9A000000 		.4byte	.LFE18
 7175 1720 0100     		.2byte	0x1
 7176 1722 56       		.byte	0x56
 7177 1723 00000000 		.4byte	0
 7178 1727 00000000 		.4byte	0
 7179              	.LLST104:
 7180 172b 00000000 		.4byte	.LVL323
 7181 172f 23000000 		.4byte	.LVL327-1
 7182 1733 0100     		.2byte	0x1
 7183 1735 52       		.byte	0x52
 7184 1736 23000000 		.4byte	.LVL327-1
 7185 173a 6C000000 		.4byte	.LVL340
 7186 173e 0400     		.2byte	0x4
 7187 1740 F3       		.byte	0xf3
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 204


 7188 1741 01       		.uleb128 0x1
 7189 1742 52       		.byte	0x52
 7190 1743 9F       		.byte	0x9f
 7191 1744 6C000000 		.4byte	.LVL340
 7192 1748 7C000000 		.4byte	.LVL346
 7193 174c 0100     		.2byte	0x1
 7194 174e 52       		.byte	0x52
 7195 174f 7C000000 		.4byte	.LVL346
 7196 1753 9A000000 		.4byte	.LFE18
 7197 1757 0400     		.2byte	0x4
 7198 1759 F3       		.byte	0xf3
 7199 175a 01       		.uleb128 0x1
 7200 175b 52       		.byte	0x52
 7201 175c 9F       		.byte	0x9f
 7202 175d 00000000 		.4byte	0
 7203 1761 00000000 		.4byte	0
 7204              	.LLST105:
 7205 1765 26000000 		.4byte	.LVL328
 7206 1769 2A000000 		.4byte	.LVL329
 7207 176d 0100     		.2byte	0x1
 7208 176f 50       		.byte	0x50
 7209 1770 2A000000 		.4byte	.LVL329
 7210 1774 44000000 		.4byte	.LVL333
 7211 1778 0100     		.2byte	0x1
 7212 177a 58       		.byte	0x58
 7213 177b 7C000000 		.4byte	.LVL346
 7214 177f 94000000 		.4byte	.LVL354
 7215 1783 0100     		.2byte	0x1
 7216 1785 58       		.byte	0x58
 7217 1786 00000000 		.4byte	0
 7218 178a 00000000 		.4byte	0
 7219              	.LLST106:
 7220 178e 2E000000 		.4byte	.LVL330
 7221 1792 46000000 		.4byte	.LVL334
 7222 1796 0100     		.2byte	0x1
 7223 1798 50       		.byte	0x50
 7224 1799 46000000 		.4byte	.LVL334
 7225 179d 6C000000 		.4byte	.LVL340
 7226 17a1 0100     		.2byte	0x1
 7227 17a3 59       		.byte	0x59
 7228 17a4 7C000000 		.4byte	.LVL346
 7229 17a8 7E000000 		.4byte	.LVL347
 7230 17ac 0100     		.2byte	0x1
 7231 17ae 50       		.byte	0x50
 7232 17af 7E000000 		.4byte	.LVL347
 7233 17b3 82000000 		.4byte	.LVL348
 7234 17b7 0100     		.2byte	0x1
 7235 17b9 59       		.byte	0x59
 7236 17ba 82000000 		.4byte	.LVL348
 7237 17be 84000000 		.4byte	.LVL349
 7238 17c2 0100     		.2byte	0x1
 7239 17c4 50       		.byte	0x50
 7240 17c5 84000000 		.4byte	.LVL349
 7241 17c9 88000000 		.4byte	.LVL350
 7242 17cd 0100     		.2byte	0x1
 7243 17cf 59       		.byte	0x59
 7244 17d0 88000000 		.4byte	.LVL350
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 205


 7245 17d4 8A000000 		.4byte	.LVL351
 7246 17d8 0100     		.2byte	0x1
 7247 17da 50       		.byte	0x50
 7248 17db 8A000000 		.4byte	.LVL351
 7249 17df 8E000000 		.4byte	.LVL352
 7250 17e3 0100     		.2byte	0x1
 7251 17e5 59       		.byte	0x59
 7252 17e6 8E000000 		.4byte	.LVL352
 7253 17ea 90000000 		.4byte	.LVL353
 7254 17ee 0100     		.2byte	0x1
 7255 17f0 50       		.byte	0x50
 7256 17f1 90000000 		.4byte	.LVL353
 7257 17f5 9A000000 		.4byte	.LFE18
 7258 17f9 0100     		.2byte	0x1
 7259 17fb 59       		.byte	0x59
 7260 17fc 00000000 		.4byte	0
 7261 1800 00000000 		.4byte	0
 7262              	.LLST107:
 7263 1804 1C000000 		.4byte	.LVL324
 7264 1808 46000000 		.4byte	.LVL334
 7265 180c 0100     		.2byte	0x1
 7266 180e 54       		.byte	0x54
 7267 180f 7C000000 		.4byte	.LVL346
 7268 1813 94000000 		.4byte	.LVL354
 7269 1817 0100     		.2byte	0x1
 7270 1819 54       		.byte	0x54
 7271 181a 00000000 		.4byte	0
 7272 181e 00000000 		.4byte	0
 7273              	.LLST108:
 7274 1822 44000000 		.4byte	.LVL333
 7275 1826 6C000000 		.4byte	.LVL340
 7276 182a 0100     		.2byte	0x1
 7277 182c 58       		.byte	0x58
 7278 182d 94000000 		.4byte	.LVL354
 7279 1831 9A000000 		.4byte	.LFE18
 7280 1835 0100     		.2byte	0x1
 7281 1837 58       		.byte	0x58
 7282 1838 00000000 		.4byte	0
 7283 183c 00000000 		.4byte	0
 7284              	.LLST109:
 7285 1840 44000000 		.4byte	.LVL333
 7286 1844 46000000 		.4byte	.LVL334
 7287 1848 0200     		.2byte	0x2
 7288 184a 30       		.byte	0x30
 7289 184b 9F       		.byte	0x9f
 7290 184c 46000000 		.4byte	.LVL334
 7291 1850 6C000000 		.4byte	.LVL340
 7292 1854 0100     		.2byte	0x1
 7293 1856 54       		.byte	0x54
 7294 1857 94000000 		.4byte	.LVL354
 7295 185b 9A000000 		.4byte	.LFE18
 7296 185f 0100     		.2byte	0x1
 7297 1861 54       		.byte	0x54
 7298 1862 00000000 		.4byte	0
 7299 1866 00000000 		.4byte	0
 7300              	.LLST110:
 7301 186a 44000000 		.4byte	.LVL333
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 206


 7302 186e 46000000 		.4byte	.LVL334
 7303 1872 0200     		.2byte	0x2
 7304 1874 30       		.byte	0x30
 7305 1875 9F       		.byte	0x9f
 7306 1876 5C000000 		.4byte	.LVL337
 7307 187a 6C000000 		.4byte	.LVL340
 7308 187e 0100     		.2byte	0x1
 7309 1880 53       		.byte	0x53
 7310 1881 94000000 		.4byte	.LVL354
 7311 1885 9A000000 		.4byte	.LFE18
 7312 1889 0100     		.2byte	0x1
 7313 188b 53       		.byte	0x53
 7314 188c 00000000 		.4byte	0
 7315 1890 00000000 		.4byte	0
 7316              	.LLST111:
 7317 1894 52000000 		.4byte	.LVL336
 7318 1898 68000000 		.4byte	.LVL339
 7319 189c 0100     		.2byte	0x1
 7320 189e 50       		.byte	0x50
 7321 189f 94000000 		.4byte	.LVL354
 7322 18a3 96000000 		.4byte	.LVL355
 7323 18a7 0100     		.2byte	0x1
 7324 18a9 50       		.byte	0x50
 7325 18aa 00000000 		.4byte	0
 7326 18ae 00000000 		.4byte	0
 7327              	.LLST112:
 7328 18b2 36000000 		.4byte	.LVL331
 7329 18b6 3C000000 		.4byte	.LVL332
 7330 18ba 0600     		.2byte	0x6
 7331 18bc 77       		.byte	0x77
 7332 18bd 00       		.sleb128 0
 7333 18be 78       		.byte	0x78
 7334 18bf 00       		.sleb128 0
 7335 18c0 22       		.byte	0x22
 7336 18c1 9F       		.byte	0x9f
 7337 18c2 3C000000 		.4byte	.LVL332
 7338 18c6 46000000 		.4byte	.LVL334
 7339 18ca 0600     		.2byte	0x6
 7340 18cc 76       		.byte	0x76
 7341 18cd 00       		.sleb128 0
 7342 18ce 70       		.byte	0x70
 7343 18cf 00       		.sleb128 0
 7344 18d0 22       		.byte	0x22
 7345 18d1 9F       		.byte	0x9f
 7346 18d2 46000000 		.4byte	.LVL334
 7347 18d6 6C000000 		.4byte	.LVL340
 7348 18da 0600     		.2byte	0x6
 7349 18dc 76       		.byte	0x76
 7350 18dd 00       		.sleb128 0
 7351 18de 79       		.byte	0x79
 7352 18df 00       		.sleb128 0
 7353 18e0 22       		.byte	0x22
 7354 18e1 9F       		.byte	0x9f
 7355 18e2 88000000 		.4byte	.LVL350
 7356 18e6 8E000000 		.4byte	.LVL352
 7357 18ea 0600     		.2byte	0x6
 7358 18ec 77       		.byte	0x77
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 207


 7359 18ed 00       		.sleb128 0
 7360 18ee 78       		.byte	0x78
 7361 18ef 00       		.sleb128 0
 7362 18f0 22       		.byte	0x22
 7363 18f1 9F       		.byte	0x9f
 7364 18f2 8E000000 		.4byte	.LVL352
 7365 18f6 90000000 		.4byte	.LVL353
 7366 18fa 0600     		.2byte	0x6
 7367 18fc 76       		.byte	0x76
 7368 18fd 00       		.sleb128 0
 7369 18fe 70       		.byte	0x70
 7370 18ff 00       		.sleb128 0
 7371 1900 22       		.byte	0x22
 7372 1901 9F       		.byte	0x9f
 7373 1902 90000000 		.4byte	.LVL353
 7374 1906 9A000000 		.4byte	.LFE18
 7375 190a 0600     		.2byte	0x6
 7376 190c 76       		.byte	0x76
 7377 190d 00       		.sleb128 0
 7378 190e 79       		.byte	0x79
 7379 190f 00       		.sleb128 0
 7380 1910 22       		.byte	0x22
 7381 1911 9F       		.byte	0x9f
 7382 1912 00000000 		.4byte	0
 7383 1916 00000000 		.4byte	0
 7384              	.LLST113:
 7385 191a 48000000 		.4byte	.LVL335
 7386 191e 6C000000 		.4byte	.LVL340
 7387 1922 0100     		.2byte	0x1
 7388 1924 55       		.byte	0x55
 7389 1925 94000000 		.4byte	.LVL354
 7390 1929 9A000000 		.4byte	.LFE18
 7391 192d 0100     		.2byte	0x1
 7392 192f 55       		.byte	0x55
 7393 1930 00000000 		.4byte	0
 7394 1934 00000000 		.4byte	0
 7395              	.LLST114:
 7396 1938 00000000 		.4byte	.LVL356
 7397 193c 09000000 		.4byte	.LVL357-1
 7398 1940 0100     		.2byte	0x1
 7399 1942 50       		.byte	0x50
 7400 1943 09000000 		.4byte	.LVL357-1
 7401 1947 0C000000 		.4byte	.LFE17
 7402 194b 0400     		.2byte	0x4
 7403 194d F3       		.byte	0xf3
 7404 194e 01       		.uleb128 0x1
 7405 194f 50       		.byte	0x50
 7406 1950 9F       		.byte	0x9f
 7407 1951 00000000 		.4byte	0
 7408 1955 00000000 		.4byte	0
 7409              	.LLST115:
 7410 1959 00000000 		.4byte	.LVL356
 7411 195d 09000000 		.4byte	.LVL357-1
 7412 1961 0100     		.2byte	0x1
 7413 1963 51       		.byte	0x51
 7414 1964 09000000 		.4byte	.LVL357-1
 7415 1968 0C000000 		.4byte	.LFE17
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 208


 7416 196c 0400     		.2byte	0x4
 7417 196e F3       		.byte	0xf3
 7418 196f 01       		.uleb128 0x1
 7419 1970 51       		.byte	0x51
 7420 1971 9F       		.byte	0x9f
 7421 1972 00000000 		.4byte	0
 7422 1976 00000000 		.4byte	0
 7423              	.LLST116:
 7424 197a 00000000 		.4byte	.LVL358
 7425 197e 1B000000 		.4byte	.LVL360-1
 7426 1982 0100     		.2byte	0x1
 7427 1984 50       		.byte	0x50
 7428 1985 1B000000 		.4byte	.LVL360-1
 7429 1989 20000000 		.4byte	.LFE19
 7430 198d 0400     		.2byte	0x4
 7431 198f F3       		.byte	0xf3
 7432 1990 01       		.uleb128 0x1
 7433 1991 50       		.byte	0x50
 7434 1992 9F       		.byte	0x9f
 7435 1993 00000000 		.4byte	0
 7436 1997 00000000 		.4byte	0
 7437              	.LLST117:
 7438 199b 00000000 		.4byte	.LVL358
 7439 199f 1B000000 		.4byte	.LVL360-1
 7440 19a3 0100     		.2byte	0x1
 7441 19a5 51       		.byte	0x51
 7442 19a6 1B000000 		.4byte	.LVL360-1
 7443 19aa 20000000 		.4byte	.LFE19
 7444 19ae 0400     		.2byte	0x4
 7445 19b0 F3       		.byte	0xf3
 7446 19b1 01       		.uleb128 0x1
 7447 19b2 51       		.byte	0x51
 7448 19b3 9F       		.byte	0x9f
 7449 19b4 00000000 		.4byte	0
 7450 19b8 00000000 		.4byte	0
 7451              	.LLST118:
 7452 19bc 00000000 		.4byte	.LVL358
 7453 19c0 1B000000 		.4byte	.LVL360-1
 7454 19c4 0100     		.2byte	0x1
 7455 19c6 52       		.byte	0x52
 7456 19c7 1B000000 		.4byte	.LVL360-1
 7457 19cb 20000000 		.4byte	.LFE19
 7458 19cf 0400     		.2byte	0x4
 7459 19d1 F3       		.byte	0xf3
 7460 19d2 01       		.uleb128 0x1
 7461 19d3 52       		.byte	0x52
 7462 19d4 9F       		.byte	0x9f
 7463 19d5 00000000 		.4byte	0
 7464 19d9 00000000 		.4byte	0
 7465              	.LLST119:
 7466 19dd 00000000 		.4byte	.LVL358
 7467 19e1 18000000 		.4byte	.LVL359
 7468 19e5 0100     		.2byte	0x1
 7469 19e7 53       		.byte	0x53
 7470 19e8 18000000 		.4byte	.LVL359
 7471 19ec 20000000 		.4byte	.LFE19
 7472 19f0 0400     		.2byte	0x4
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 209


 7473 19f2 F3       		.byte	0xf3
 7474 19f3 01       		.uleb128 0x1
 7475 19f4 53       		.byte	0x53
 7476 19f5 9F       		.byte	0x9f
 7477 19f6 00000000 		.4byte	0
 7478 19fa 00000000 		.4byte	0
 7479              	.LLST120:
 7480 19fe 00000000 		.4byte	.LVL361
 7481 1a02 0A000000 		.4byte	.LVL362
 7482 1a06 0100     		.2byte	0x1
 7483 1a08 50       		.byte	0x50
 7484 1a09 0A000000 		.4byte	.LVL362
 7485 1a0d 0E000000 		.4byte	.LVL363
 7486 1a11 0400     		.2byte	0x4
 7487 1a13 70       		.byte	0x70
 7488 1a14 00       		.sleb128 0
 7489 1a15 1F       		.byte	0x1f
 7490 1a16 9F       		.byte	0x9f
 7491 1a17 0E000000 		.4byte	.LVL363
 7492 1a1b 10000000 		.4byte	.LVL364
 7493 1a1f 0100     		.2byte	0x1
 7494 1a21 50       		.byte	0x50
 7495 1a22 10000000 		.4byte	.LVL364
 7496 1a26 2C000000 		.4byte	.LFE20
 7497 1a2a 0400     		.2byte	0x4
 7498 1a2c F3       		.byte	0xf3
 7499 1a2d 01       		.uleb128 0x1
 7500 1a2e 50       		.byte	0x50
 7501 1a2f 9F       		.byte	0x9f
 7502 1a30 00000000 		.4byte	0
 7503 1a34 00000000 		.4byte	0
 7504              	.LLST121:
 7505 1a38 00000000 		.4byte	.LVL361
 7506 1a3c 27000000 		.4byte	.LVL366-1
 7507 1a40 0100     		.2byte	0x1
 7508 1a42 51       		.byte	0x51
 7509 1a43 27000000 		.4byte	.LVL366-1
 7510 1a47 2C000000 		.4byte	.LFE20
 7511 1a4b 0400     		.2byte	0x4
 7512 1a4d F3       		.byte	0xf3
 7513 1a4e 01       		.uleb128 0x1
 7514 1a4f 51       		.byte	0x51
 7515 1a50 9F       		.byte	0x9f
 7516 1a51 00000000 		.4byte	0
 7517 1a55 00000000 		.4byte	0
 7518              	.LLST122:
 7519 1a59 00000000 		.4byte	.LVL361
 7520 1a5d 27000000 		.4byte	.LVL366-1
 7521 1a61 0100     		.2byte	0x1
 7522 1a63 52       		.byte	0x52
 7523 1a64 27000000 		.4byte	.LVL366-1
 7524 1a68 2C000000 		.4byte	.LFE20
 7525 1a6c 0400     		.2byte	0x4
 7526 1a6e F3       		.byte	0xf3
 7527 1a6f 01       		.uleb128 0x1
 7528 1a70 52       		.byte	0x52
 7529 1a71 9F       		.byte	0x9f
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 210


 7530 1a72 00000000 		.4byte	0
 7531 1a76 00000000 		.4byte	0
 7532              	.LLST123:
 7533 1a7a 00000000 		.4byte	.LVL361
 7534 1a7e 24000000 		.4byte	.LVL365
 7535 1a82 0100     		.2byte	0x1
 7536 1a84 53       		.byte	0x53
 7537 1a85 24000000 		.4byte	.LVL365
 7538 1a89 2C000000 		.4byte	.LFE20
 7539 1a8d 0400     		.2byte	0x4
 7540 1a8f F3       		.byte	0xf3
 7541 1a90 01       		.uleb128 0x1
 7542 1a91 53       		.byte	0x53
 7543 1a92 9F       		.byte	0x9f
 7544 1a93 00000000 		.4byte	0
 7545 1a97 00000000 		.4byte	0
 7546              	.LLST124:
 7547 1a9b 0A000000 		.4byte	.LVL362
 7548 1a9f 0E000000 		.4byte	.LVL363
 7549 1aa3 0100     		.2byte	0x1
 7550 1aa5 50       		.byte	0x50
 7551 1aa6 10000000 		.4byte	.LVL364
 7552 1aaa 27000000 		.4byte	.LVL366-1
 7553 1aae 0100     		.2byte	0x1
 7554 1ab0 50       		.byte	0x50
 7555 1ab1 00000000 		.4byte	0
 7556 1ab5 00000000 		.4byte	0
 7557              	.LLST125:
 7558 1ab9 0A000000 		.4byte	.LVL362
 7559 1abd 0E000000 		.4byte	.LVL363
 7560 1ac1 0200     		.2byte	0x2
 7561 1ac3 31       		.byte	0x31
 7562 1ac4 9F       		.byte	0x9f
 7563 1ac5 10000000 		.4byte	.LVL364
 7564 1ac9 2C000000 		.4byte	.LFE20
 7565 1acd 0100     		.2byte	0x1
 7566 1acf 55       		.byte	0x55
 7567 1ad0 00000000 		.4byte	0
 7568 1ad4 00000000 		.4byte	0
 7569              	.LLST126:
 7570 1ad8 00000000 		.4byte	.LVL367
 7571 1adc 0B000000 		.4byte	.LVL368-1
 7572 1ae0 0100     		.2byte	0x1
 7573 1ae2 50       		.byte	0x50
 7574 1ae3 0B000000 		.4byte	.LVL368-1
 7575 1ae7 12000000 		.4byte	.LFE21
 7576 1aeb 0400     		.2byte	0x4
 7577 1aed F3       		.byte	0xf3
 7578 1aee 01       		.uleb128 0x1
 7579 1aef 50       		.byte	0x50
 7580 1af0 9F       		.byte	0x9f
 7581 1af1 00000000 		.4byte	0
 7582 1af5 00000000 		.4byte	0
 7583              	.LLST127:
 7584 1af9 00000000 		.4byte	.LVL367
 7585 1afd 0B000000 		.4byte	.LVL368-1
 7586 1b01 0100     		.2byte	0x1
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 211


 7587 1b03 51       		.byte	0x51
 7588 1b04 0B000000 		.4byte	.LVL368-1
 7589 1b08 12000000 		.4byte	.LFE21
 7590 1b0c 0400     		.2byte	0x4
 7591 1b0e F3       		.byte	0xf3
 7592 1b0f 01       		.uleb128 0x1
 7593 1b10 51       		.byte	0x51
 7594 1b11 9F       		.byte	0x9f
 7595 1b12 00000000 		.4byte	0
 7596 1b16 00000000 		.4byte	0
 7597              	.LLST128:
 7598 1b1a 00000000 		.4byte	.LVL367
 7599 1b1e 0B000000 		.4byte	.LVL368-1
 7600 1b22 0100     		.2byte	0x1
 7601 1b24 52       		.byte	0x52
 7602 1b25 0B000000 		.4byte	.LVL368-1
 7603 1b29 12000000 		.4byte	.LFE21
 7604 1b2d 0400     		.2byte	0x4
 7605 1b2f F3       		.byte	0xf3
 7606 1b30 01       		.uleb128 0x1
 7607 1b31 52       		.byte	0x52
 7608 1b32 9F       		.byte	0x9f
 7609 1b33 00000000 		.4byte	0
 7610 1b37 00000000 		.4byte	0
 7611              	.LLST129:
 7612 1b3b 00000000 		.4byte	.LVL369
 7613 1b3f 0F000000 		.4byte	.LVL370-1
 7614 1b43 0100     		.2byte	0x1
 7615 1b45 50       		.byte	0x50
 7616 1b46 0F000000 		.4byte	.LVL370-1
 7617 1b4a 32000000 		.4byte	.LFE22
 7618 1b4e 0400     		.2byte	0x4
 7619 1b50 F3       		.byte	0xf3
 7620 1b51 01       		.uleb128 0x1
 7621 1b52 50       		.byte	0x50
 7622 1b53 9F       		.byte	0x9f
 7623 1b54 00000000 		.4byte	0
 7624 1b58 00000000 		.4byte	0
 7625              	.LLST130:
 7626 1b5c 00000000 		.4byte	.LVL369
 7627 1b60 0F000000 		.4byte	.LVL370-1
 7628 1b64 0100     		.2byte	0x1
 7629 1b66 51       		.byte	0x51
 7630 1b67 0F000000 		.4byte	.LVL370-1
 7631 1b6b 32000000 		.4byte	.LFE22
 7632 1b6f 0400     		.2byte	0x4
 7633 1b71 F3       		.byte	0xf3
 7634 1b72 01       		.uleb128 0x1
 7635 1b73 51       		.byte	0x51
 7636 1b74 9F       		.byte	0x9f
 7637 1b75 00000000 		.4byte	0
 7638 1b79 00000000 		.4byte	0
 7639              	.LLST131:
 7640 1b7d 00000000 		.4byte	.LVL369
 7641 1b81 0F000000 		.4byte	.LVL370-1
 7642 1b85 0100     		.2byte	0x1
 7643 1b87 52       		.byte	0x52
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 212


 7644 1b88 0F000000 		.4byte	.LVL370-1
 7645 1b8c 32000000 		.4byte	.LFE22
 7646 1b90 0400     		.2byte	0x4
 7647 1b92 F3       		.byte	0xf3
 7648 1b93 01       		.uleb128 0x1
 7649 1b94 52       		.byte	0x52
 7650 1b95 9F       		.byte	0x9f
 7651 1b96 00000000 		.4byte	0
 7652 1b9a 00000000 		.4byte	0
 7653              	.LLST132:
 7654 1b9e 10000000 		.4byte	.LVL370
 7655 1ba2 1E000000 		.4byte	.LVL371
 7656 1ba6 0100     		.2byte	0x1
 7657 1ba8 50       		.byte	0x50
 7658 1ba9 20000000 		.4byte	.LVL372
 7659 1bad 26000000 		.4byte	.LVL373
 7660 1bb1 0100     		.2byte	0x1
 7661 1bb3 50       		.byte	0x50
 7662 1bb4 26000000 		.4byte	.LVL373
 7663 1bb8 28000000 		.4byte	.LVL374
 7664 1bbc 0400     		.2byte	0x4
 7665 1bbe 70       		.byte	0x70
 7666 1bbf 00       		.sleb128 0
 7667 1bc0 1F       		.byte	0x1f
 7668 1bc1 9F       		.byte	0x9f
 7669 1bc2 28000000 		.4byte	.LVL374
 7670 1bc6 2C000000 		.4byte	.LVL375
 7671 1bca 0100     		.2byte	0x1
 7672 1bcc 50       		.byte	0x50
 7673 1bcd 00000000 		.4byte	0
 7674 1bd1 00000000 		.4byte	0
 7675              		.section	.debug_aranges,"",%progbits
 7676 0000 D4000000 		.4byte	0xd4
 7677 0004 0200     		.2byte	0x2
 7678 0006 00000000 		.4byte	.Ldebug_info0
 7679 000a 04       		.byte	0x4
 7680 000b 00       		.byte	0
 7681 000c 0000     		.2byte	0
 7682 000e 0000     		.2byte	0
 7683 0010 00000000 		.4byte	.LFB23
 7684 0014 A6010000 		.4byte	.LFE23-.LFB23
 7685 0018 00000000 		.4byte	.LFB24
 7686 001c A4010000 		.4byte	.LFE24-.LFB24
 7687 0020 00000000 		.4byte	.LFB2
 7688 0024 16000000 		.4byte	.LFE2-.LFB2
 7689 0028 00000000 		.4byte	.LFB1
 7690 002c 0C000000 		.4byte	.LFE1-.LFB1
 7691 0030 00000000 		.4byte	.LFB4
 7692 0034 48000000 		.4byte	.LFE4-.LFB4
 7693 0038 00000000 		.4byte	.LFB3
 7694 003c 0C000000 		.4byte	.LFE3-.LFB3
 7695 0040 00000000 		.4byte	.LFB6
 7696 0044 56000000 		.4byte	.LFE6-.LFB6
 7697 0048 00000000 		.4byte	.LFB5
 7698 004c 0C000000 		.4byte	.LFE5-.LFB5
 7699 0050 00000000 		.4byte	.LFB8
 7700 0054 70000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 213


 7701 0058 00000000 		.4byte	.LFB7
 7702 005c 0C000000 		.4byte	.LFE7-.LFB7
 7703 0060 00000000 		.4byte	.LFB10
 7704 0064 C2000000 		.4byte	.LFE10-.LFB10
 7705 0068 00000000 		.4byte	.LFB9
 7706 006c 0C000000 		.4byte	.LFE9-.LFB9
 7707 0070 00000000 		.4byte	.LFB12
 7708 0074 44000000 		.4byte	.LFE12-.LFB12
 7709 0078 00000000 		.4byte	.LFB11
 7710 007c 0E000000 		.4byte	.LFE11-.LFB11
 7711 0080 00000000 		.4byte	.LFB14
 7712 0084 38000000 		.4byte	.LFE14-.LFB14
 7713 0088 00000000 		.4byte	.LFB13
 7714 008c 0E000000 		.4byte	.LFE13-.LFB13
 7715 0090 00000000 		.4byte	.LFB16
 7716 0094 36000000 		.4byte	.LFE16-.LFB16
 7717 0098 00000000 		.4byte	.LFB15
 7718 009c 0C000000 		.4byte	.LFE15-.LFB15
 7719 00a0 00000000 		.4byte	.LFB18
 7720 00a4 9A000000 		.4byte	.LFE18-.LFB18
 7721 00a8 00000000 		.4byte	.LFB17
 7722 00ac 0C000000 		.4byte	.LFE17-.LFB17
 7723 00b0 00000000 		.4byte	.LFB19
 7724 00b4 20000000 		.4byte	.LFE19-.LFB19
 7725 00b8 00000000 		.4byte	.LFB20
 7726 00bc 2C000000 		.4byte	.LFE20-.LFB20
 7727 00c0 00000000 		.4byte	.LFB21
 7728 00c4 12000000 		.4byte	.LFE21-.LFB21
 7729 00c8 00000000 		.4byte	.LFB22
 7730 00cc 32000000 		.4byte	.LFE22-.LFB22
 7731 00d0 00000000 		.4byte	0
 7732 00d4 00000000 		.4byte	0
 7733              		.section	.debug_ranges,"",%progbits
 7734              	.Ldebug_ranges0:
 7735 0000 00000000 		.4byte	.LFB23
 7736 0004 A6010000 		.4byte	.LFE23
 7737 0008 00000000 		.4byte	.LFB24
 7738 000c A4010000 		.4byte	.LFE24
 7739 0010 00000000 		.4byte	.LFB2
 7740 0014 16000000 		.4byte	.LFE2
 7741 0018 00000000 		.4byte	.LFB1
 7742 001c 0C000000 		.4byte	.LFE1
 7743 0020 00000000 		.4byte	.LFB4
 7744 0024 48000000 		.4byte	.LFE4
 7745 0028 00000000 		.4byte	.LFB3
 7746 002c 0C000000 		.4byte	.LFE3
 7747 0030 00000000 		.4byte	.LFB6
 7748 0034 56000000 		.4byte	.LFE6
 7749 0038 00000000 		.4byte	.LFB5
 7750 003c 0C000000 		.4byte	.LFE5
 7751 0040 00000000 		.4byte	.LFB8
 7752 0044 70000000 		.4byte	.LFE8
 7753 0048 00000000 		.4byte	.LFB7
 7754 004c 0C000000 		.4byte	.LFE7
 7755 0050 00000000 		.4byte	.LFB10
 7756 0054 C2000000 		.4byte	.LFE10
 7757 0058 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 214


 7758 005c 0C000000 		.4byte	.LFE9
 7759 0060 00000000 		.4byte	.LFB12
 7760 0064 44000000 		.4byte	.LFE12
 7761 0068 00000000 		.4byte	.LFB11
 7762 006c 0E000000 		.4byte	.LFE11
 7763 0070 00000000 		.4byte	.LFB14
 7764 0074 38000000 		.4byte	.LFE14
 7765 0078 00000000 		.4byte	.LFB13
 7766 007c 0E000000 		.4byte	.LFE13
 7767 0080 00000000 		.4byte	.LFB16
 7768 0084 36000000 		.4byte	.LFE16
 7769 0088 00000000 		.4byte	.LFB15
 7770 008c 0C000000 		.4byte	.LFE15
 7771 0090 00000000 		.4byte	.LFB18
 7772 0094 9A000000 		.4byte	.LFE18
 7773 0098 00000000 		.4byte	.LFB17
 7774 009c 0C000000 		.4byte	.LFE17
 7775 00a0 00000000 		.4byte	.LFB19
 7776 00a4 20000000 		.4byte	.LFE19
 7777 00a8 00000000 		.4byte	.LFB20
 7778 00ac 2C000000 		.4byte	.LFE20
 7779 00b0 00000000 		.4byte	.LFB21
 7780 00b4 12000000 		.4byte	.LFE21
 7781 00b8 00000000 		.4byte	.LFB22
 7782 00bc 32000000 		.4byte	.LFE22
 7783 00c0 00000000 		.4byte	0
 7784 00c4 00000000 		.4byte	0
 7785              		.section	.debug_line,"",%progbits
 7786              	.Ldebug_line0:
 7787 0000 F4040000 		.section	.debug_str,"MS",%progbits,1
 7787      02006300 
 7787      00000201 
 7787      FB0E0D00 
 7787      01010101 
 7788              	.LASF34:
 7789 0000 6E62725F 		.ascii	"nbr_dig_fmtd\000"
 7789      6469675F 
 7789      666D7464 
 7789      00
 7790              	.LASF73:
 7791 000d 5374725F 		.ascii	"Str_Cat_N\000"
 7791      4361745F 
 7791      4E00
 7792              	.LASF37:
 7793 0017 6469675F 		.ascii	"dig_val\000"
 7793      76616C00 
 7794              	.LASF110:
 7795 001f 73726368 		.ascii	"srch_len\000"
 7795      5F6C656E 
 7795      00
 7796              	.LASF53:
 7797 0028 70617273 		.ascii	"parse_char\000"
 7797      655F6368 
 7797      617200
 7798              	.LASF51:
 7799 0033 70737472 		.ascii	"pstr_parse_nbr\000"
 7799      5F706172 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 215


 7799      73655F6E 
 7799      627200
 7800              	.LASF123:
 7801 0042 41534349 		.ascii	"ASCII_IsPrint\000"
 7801      495F4973 
 7801      5072696E 
 7801      7400
 7802              	.LASF81:
 7803 0050 70325F73 		.ascii	"p2_str\000"
 7803      747200
 7804              	.LASF47:
 7805 0057 70737472 		.ascii	"pstr_next\000"
 7805      5F6E6578 
 7805      7400
 7806              	.LASF86:
 7807 0061 636D705F 		.ascii	"cmp_len\000"
 7807      6C656E00 
 7808              	.LASF26:
 7809 0069 6C656164 		.ascii	"lead_char\000"
 7809      5F636861 
 7809      7200
 7810              	.LASF131:
 7811 0073 75432D4C 		.ascii	"uC-LIB\\lib_str.c\000"
 7811      49425C6C 
 7811      69625F73 
 7811      74722E63 
 7811      00
 7812              	.LASF78:
 7813 0084 5374725F 		.ascii	"Str_Cat\000"
 7813      43617400 
 7814              	.LASF11:
 7815 008c 4350555F 		.ascii	"CPU_INT32S\000"
 7815      494E5433 
 7815      325300
 7816              	.LASF0:
 7817 0097 756E7369 		.ascii	"unsigned int\000"
 7817      676E6564 
 7817      20696E74 
 7817      00
 7818              	.LASF61:
 7819 00a4 6C656E5F 		.ascii	"len_max\000"
 7819      6D617800 
 7820              	.LASF92:
 7821 00ac 5374725F 		.ascii	"Str_CmpIgnoreCase\000"
 7821      436D7049 
 7821      676E6F72 
 7821      65436173 
 7821      6500
 7822              	.LASF70:
 7823 00be 6C656E5F 		.ascii	"len_copy\000"
 7823      636F7079 
 7823      00
 7824              	.LASF77:
 7825 00c7 6C656E5F 		.ascii	"len_cat\000"
 7825      63617400 
 7826              	.LASF58:
 7827 00cf 6E62725F 		.ascii	"nbr_hex_lower\000"
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 216


 7827      6865785F 
 7827      6C6F7765 
 7827      7200
 7828              	.LASF99:
 7829 00dd 7374725F 		.ascii	"str_len_max\000"
 7829      6C656E5F 
 7829      6D617800 
 7830              	.LASF56:
 7831 00e9 6E62725F 		.ascii	"nbr_alpha\000"
 7831      616C7068 
 7831      6100
 7832              	.LASF127:
 7833 00f3 41534349 		.ascii	"ASCII_IsDig\000"
 7833      495F4973 
 7833      44696700 
 7834              	.LASF62:
 7835 00ff 70737472 		.ascii	"pstr_len\000"
 7835      5F6C656E 
 7835      00
 7836              	.LASF38:
 7837 0108 6C656164 		.ascii	"lead_char_delta_0\000"
 7837      5F636861 
 7837      725F6465 
 7837      6C74615F 
 7837      3000
 7838              	.LASF55:
 7839 011a 6E62725F 		.ascii	"nbr_neg_unused\000"
 7839      6E65675F 
 7839      756E7573 
 7839      656400
 7840              	.LASF57:
 7841 0129 6E62725F 		.ascii	"nbr_hex\000"
 7841      68657800 
 7842              	.LASF104:
 7843 0131 63686172 		.ascii	"char_replace\000"
 7843      5F726570 
 7843      6C616365 
 7843      00
 7844              	.LASF46:
 7845 013e 5374725F 		.ascii	"Str_ParseNbr_Int32\000"
 7845      50617273 
 7845      654E6272 
 7845      5F496E74 
 7845      333200
 7846              	.LASF32:
 7847 0151 6E62725F 		.ascii	"nbr_dig_max\000"
 7847      6469675F 
 7847      6D617800 
 7848              	.LASF14:
 7849 015d 666C6F61 		.ascii	"float\000"
 7849      7400
 7850              	.LASF12:
 7851 0163 6C6F6E67 		.ascii	"long long unsigned int\000"
 7851      206C6F6E 
 7851      6720756E 
 7851      7369676E 
 7851      65642069 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 217


 7852              	.LASF109:
 7853 017a 6C656E5F 		.ascii	"len_max_srch\000"
 7853      6D61785F 
 7853      73726368 
 7853      00
 7854              	.LASF82:
 7855 0187 70315F73 		.ascii	"p1_str_cmp\000"
 7855      74725F63 
 7855      6D7000
 7856              	.LASF49:
 7857 0192 706E6272 		.ascii	"pnbr_neg\000"
 7857      5F6E6567 
 7857      00
 7858              	.LASF5:
 7859 019b 4350555F 		.ascii	"CPU_INT08U\000"
 7859      494E5430 
 7859      385500
 7860              	.LASF10:
 7861 01a6 4350555F 		.ascii	"CPU_INT32U\000"
 7861      494E5433 
 7861      325500
 7862              	.LASF71:
 7863 01b1 5374725F 		.ascii	"Str_Copy\000"
 7863      436F7079 
 7863      00
 7864              	.LASF130:
 7865 01ba 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 7865      43313120 
 7865      352E342E 
 7865      31203230 
 7865      31363036 
 7866 01ed 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 7866      20726576 
 7866      6973696F 
 7866      6E203233 
 7866      37373135 
 7867 0220 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 7867      66756E63 
 7867      74696F6E 
 7867      2D736563 
 7867      74696F6E 
 7868              	.LASF94:
 7869 0248 73726368 		.ascii	"srch_char\000"
 7869      5F636861 
 7869      7200
 7870              	.LASF29:
 7871 0252 70737472 		.ascii	"pstr_fmt\000"
 7871      5F666D74 
 7871      00
 7872              	.LASF41:
 7873 025b 6C656164 		.ascii	"lead_char_0\000"
 7873      5F636861 
 7873      725F3000 
 7874              	.LASF103:
 7875 0267 63686172 		.ascii	"char_srch\000"
 7875      5F737263 
 7875      6800
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 218


 7876              	.LASF74:
 7877 0271 70737472 		.ascii	"pstr_cat\000"
 7877      5F636174 
 7877      00
 7878              	.LASF79:
 7879 027a 5374725F 		.ascii	"Str_Cmp_N\000"
 7879      436D705F 
 7879      4E00
 7880              	.LASF2:
 7881 0284 4350555F 		.ascii	"CPU_CHAR\000"
 7881      43484152 
 7881      00
 7882              	.LASF65:
 7883 028d 5374725F 		.ascii	"Str_Copy_N\000"
 7883      436F7079 
 7883      5F4E00
 7884              	.LASF93:
 7885 0298 5374725F 		.ascii	"Str_Char_N\000"
 7885      43686172 
 7885      5F4E00
 7886              	.LASF68:
 7887 02a3 70737472 		.ascii	"pstr_copy_dest\000"
 7887      5F636F70 
 7887      795F6465 
 7887      737400
 7888              	.LASF17:
 7889 02b2 4350555F 		.ascii	"CPU_DATA\000"
 7889      44415441 
 7889      00
 7890              	.LASF95:
 7891 02bb 70737472 		.ascii	"pstr_char\000"
 7891      5F636861 
 7891      7200
 7892              	.LASF27:
 7893 02c5 6C6F7765 		.ascii	"lower_case\000"
 7893      725F6361 
 7893      736500
 7894              	.LASF44:
 7895 02d0 6E62725F 		.ascii	"nbr_neg_fmtd\000"
 7895      6E65675F 
 7895      666D7464 
 7895      00
 7896              	.LASF80:
 7897 02dd 70315F73 		.ascii	"p1_str\000"
 7897      747200
 7898              	.LASF31:
 7899 02e4 6E62725F 		.ascii	"nbr_log\000"
 7899      6C6F6700 
 7900              	.LASF1:
 7901 02ec 63686172 		.ascii	"char\000"
 7901      00
 7902              	.LASF129:
 7903 02f1 41534349 		.ascii	"ASCII_ToLower\000"
 7903      495F546F 
 7903      4C6F7765 
 7903      7200
 7904              	.LASF39:
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 219


 7905 02ff 6C656164 		.ascii	"lead_char_delta_a\000"
 7905      5F636861 
 7905      725F6465 
 7905      6C74615F 
 7905      6100
 7906              	.LASF100:
 7907 0311 7374725F 		.ascii	"str_len\000"
 7907      6C656E00 
 7908              	.LASF18:
 7909 0319 4350555F 		.ascii	"CPU_SIZE_T\000"
 7909      53495A45 
 7909      5F5400
 7910              	.LASF35:
 7911 0324 6E62725F 		.ascii	"nbr_neg_sign\000"
 7911      6E65675F 
 7911      7369676E 
 7911      00
 7912              	.LASF13:
 7913 0331 6C6F6E67 		.ascii	"long long int\000"
 7913      206C6F6E 
 7913      6720696E 
 7913      7400
 7914              	.LASF112:
 7915 033f 73726368 		.ascii	"srch_done\000"
 7915      5F646F6E 
 7915      6500
 7916              	.LASF28:
 7917 0349 70737472 		.ascii	"pstr\000"
 7917      00
 7918              	.LASF72:
 7919 034e 70737472 		.ascii	"pstr_rtn\000"
 7919      5F72746E 
 7919      00
 7920              	.LASF25:
 7921 0357 6E62725F 		.ascii	"nbr_neg\000"
 7921      6E656700 
 7922              	.LASF83:
 7923 035f 70325F73 		.ascii	"p2_str_cmp\000"
 7923      74725F63 
 7923      6D7000
 7924              	.LASF8:
 7925 036a 4350555F 		.ascii	"CPU_INT16S\000"
 7925      494E5431 
 7925      365300
 7926              	.LASF45:
 7927 0375 5374725F 		.ascii	"Str_FmtNbr_Int32\000"
 7927      466D744E 
 7927      62725F49 
 7927      6E743332 
 7927      00
 7928              	.LASF42:
 7929 0386 666D745F 		.ascii	"fmt_invalid\000"
 7929      696E7661 
 7929      6C696400 
 7930              	.LASF106:
 7931 0392 5374725F 		.ascii	"Str_Str_N\000"
 7931      5374725F 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 220


 7931      4E00
 7932              	.LASF122:
 7933 039c 5374725F 		.ascii	"Str_MultOvfThTbl_Int32U\000"
 7933      4D756C74 
 7933      4F766654 
 7933      6854626C 
 7933      5F496E74 
 7934              	.LASF60:
 7935 03b4 646F6E65 		.ascii	"done\000"
 7935      00
 7936              	.LASF120:
 7937 03b9 5374725F 		.ascii	"Str_ParseNbr_Int32S\000"
 7937      50617273 
 7937      654E6272 
 7937      5F496E74 
 7937      33325300 
 7938              	.LASF115:
 7939 03cd 70737472 		.ascii	"pstr_srch_ix\000"
 7939      5F737263 
 7939      685F6978 
 7939      00
 7940              	.LASF119:
 7941 03da 5374725F 		.ascii	"Str_ParseNbr_Int32U\000"
 7941      50617273 
 7941      654E6272 
 7941      5F496E74 
 7941      33325500 
 7942              	.LASF125:
 7943 03ee 41534349 		.ascii	"ASCII_IsDigHex\000"
 7943      495F4973 
 7943      44696748 
 7943      657800
 7944              	.LASF97:
 7945 03fd 5374725F 		.ascii	"Str_Char\000"
 7945      43686172 
 7945      00
 7946              	.LASF21:
 7947 0406 6C6F6E67 		.ascii	"long double\000"
 7947      20646F75 
 7947      626C6500 
 7948              	.LASF69:
 7949 0412 70737472 		.ascii	"pstr_copy_src\000"
 7949      5F636F70 
 7949      795F7372 
 7949      6300
 7950              	.LASF121:
 7951 0420 6E62725F 		.ascii	"nbr_abs\000"
 7951      61627300 
 7952              	.LASF48:
 7953 0428 6E62725F 		.ascii	"nbr_signed\000"
 7953      7369676E 
 7953      656400
 7954              	.LASF90:
 7955 0433 63686172 		.ascii	"char_1\000"
 7955      5F3100
 7956              	.LASF91:
 7957 043a 63686172 		.ascii	"char_2\000"
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 221


 7957      5F3200
 7958              	.LASF96:
 7959 0441 6C656E5F 		.ascii	"len_srch\000"
 7959      73726368 
 7959      00
 7960              	.LASF24:
 7961 044a 6E62725F 		.ascii	"nbr_base\000"
 7961      62617365 
 7961      00
 7962              	.LASF116:
 7963 0453 5374725F 		.ascii	"Str_Str\000"
 7963      53747200 
 7964              	.LASF128:
 7965 045b 41534349 		.ascii	"ASCII_IsLower\000"
 7965      495F4973 
 7965      4C6F7765 
 7965      7200
 7966              	.LASF9:
 7967 0469 73686F72 		.ascii	"short int\000"
 7967      7420696E 
 7967      7400
 7968              	.LASF132:
 7969 0473 5C5C4D61 		.ascii	"\\\\Mac\\Home\\Documents\\cypress\\esw_bmp280_Petro"
 7969      635C486F 
 7969      6D655C44 
 7969      6F63756D 
 7969      656E7473 
 7970 04a0 7669635F 		.ascii	"vic_Wagner\\BMP280_CY8CKIT_059.cydsn\000"
 7970      5761676E 
 7970      65725C42 
 7970      4D503238 
 7970      305F4359 
 7971              	.LASF19:
 7972 04c4 6C6F6E67 		.ascii	"long int\000"
 7972      20696E74 
 7972      00
 7973              	.LASF107:
 7974 04cd 70737472 		.ascii	"pstr_srch\000"
 7974      5F737263 
 7974      6800
 7975              	.LASF33:
 7976 04d7 6E62725F 		.ascii	"nbr_dig_min\000"
 7976      6469675F 
 7976      6D696E00 
 7977              	.LASF40:
 7978 04e3 6C656164 		.ascii	"lead_char_dig\000"
 7978      5F636861 
 7978      725F6469 
 7978      6700
 7979              	.LASF105:
 7980 04f1 5374725F 		.ascii	"Str_Char_Replace\000"
 7980      43686172 
 7980      5F526570 
 7980      6C616365 
 7980      00
 7981              	.LASF76:
 7982 0502 70737472 		.ascii	"pstr_cat_src\000"
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 222


 7982      5F636174 
 7982      5F737263 
 7982      00
 7983              	.LASF88:
 7984 050f 636D705F 		.ascii	"cmp_val\000"
 7984      76616C00 
 7985              	.LASF75:
 7986 0517 70737472 		.ascii	"pstr_cat_dest\000"
 7986      5F636174 
 7986      5F646573 
 7986      7400
 7987              	.LASF67:
 7988 0525 70737472 		.ascii	"pstr_src\000"
 7988      5F737263 
 7988      00
 7989              	.LASF22:
 7990 052e 73697A65 		.ascii	"sizetype\000"
 7990      74797065 
 7990      00
 7991              	.LASF20:
 7992 0537 6C6F6E67 		.ascii	"long unsigned int\000"
 7992      20756E73 
 7992      69676E65 
 7992      6420696E 
 7992      7400
 7993              	.LASF63:
 7994 0549 5374725F 		.ascii	"Str_Len_N\000"
 7994      4C656E5F 
 7994      4E00
 7995              	.LASF85:
 7996 0553 70325F73 		.ascii	"p2_str_cmp_next\000"
 7996      74725F63 
 7996      6D705F6E 
 7996      65787400 
 7997              	.LASF16:
 7998 0563 4350555F 		.ascii	"CPU_ADDR\000"
 7998      41444452 
 7998      00
 7999              	.LASF111:
 8000 056c 73726368 		.ascii	"srch_ix\000"
 8000      5F697800 
 8001              	.LASF3:
 8002 0574 4350555F 		.ascii	"CPU_BOOLEAN\000"
 8002      424F4F4C 
 8002      45414E00 
 8003              	.LASF50:
 8004 0580 70737472 		.ascii	"pstr_parse\000"
 8004      5F706172 
 8004      736500
 8005              	.LASF4:
 8006 058b 756E7369 		.ascii	"unsigned char\000"
 8006      676E6564 
 8006      20636861 
 8006      7200
 8007              	.LASF84:
 8008 0599 70315F73 		.ascii	"p1_str_cmp_next\000"
 8008      74725F63 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 223


 8008      6D705F6E 
 8008      65787400 
 8009              	.LASF23:
 8010 05a9 6E62725F 		.ascii	"nbr_dig\000"
 8010      64696700 
 8011              	.LASF98:
 8012 05b1 5374725F 		.ascii	"Str_Char_Last_N\000"
 8012      43686172 
 8012      5F4C6173 
 8012      745F4E00 
 8013              	.LASF113:
 8014 05c1 73726368 		.ascii	"srch_cmp\000"
 8014      5F636D70 
 8014      00
 8015              	.LASF126:
 8016 05ca 41534349 		.ascii	"ASCII_IsAlphaNum\000"
 8016      495F4973 
 8016      416C7068 
 8016      614E756D 
 8016      00
 8017              	.LASF108:
 8018 05db 7374725F 		.ascii	"str_len_srch\000"
 8018      6C656E5F 
 8018      73726368 
 8018      00
 8019              	.LASF87:
 8020 05e8 5374725F 		.ascii	"Str_Cmp\000"
 8020      436D7000 
 8021              	.LASF54:
 8022 05f0 70617273 		.ascii	"parse_dig\000"
 8022      655F6469 
 8022      6700
 8023              	.LASF36:
 8024 05fa 6E62725F 		.ascii	"nbr_lead_char\000"
 8024      6C656164 
 8024      5F636861 
 8024      7200
 8025              	.LASF101:
 8026 0608 5374725F 		.ascii	"Str_Char_Last\000"
 8026      43686172 
 8026      5F4C6173 
 8026      7400
 8027              	.LASF89:
 8028 0616 5374725F 		.ascii	"Str_CmpIgnoreCase_N\000"
 8028      436D7049 
 8028      676E6F72 
 8028      65436173 
 8028      655F4E00 
 8029              	.LASF59:
 8030 062a 77686974 		.ascii	"whitespace\000"
 8030      65737061 
 8030      636500
 8031              	.LASF102:
 8032 0635 5374725F 		.ascii	"Str_Char_Replace_N\000"
 8032      43686172 
 8032      5F526570 
 8032      6C616365 
ARM GAS  C:\Users\filip\AppData\Local\Temp\ccPgz1RR.s 			page 224


 8032      5F4E00
 8033              	.LASF52:
 8034 0648 70737472 		.ascii	"pstr_parse_unused\000"
 8034      5F706172 
 8034      73655F75 
 8034      6E757365 
 8034      6400
 8035              	.LASF64:
 8036 065a 5374725F 		.ascii	"Str_Len\000"
 8036      4C656E00 
 8037              	.LASF30:
 8038 0662 6E62725F 		.ascii	"nbr_fmt\000"
 8038      666D7400 
 8039              	.LASF6:
 8040 066a 7369676E 		.ascii	"signed char\000"
 8040      65642063 
 8040      68617200 
 8041              	.LASF7:
 8042 0676 73686F72 		.ascii	"short unsigned int\000"
 8042      7420756E 
 8042      7369676E 
 8042      65642069 
 8042      6E7400
 8043              	.LASF114:
 8044 0689 70737472 		.ascii	"pstr_str\000"
 8044      5F737472 
 8044      00
 8045              	.LASF124:
 8046 0692 41534349 		.ascii	"ASCII_IsSpace\000"
 8046      495F4973 
 8046      53706163 
 8046      6500
 8047              	.LASF15:
 8048 06a0 646F7562 		.ascii	"double\000"
 8048      6C6500
 8049              	.LASF66:
 8050 06a7 70737472 		.ascii	"pstr_dest\000"
 8050      5F646573 
 8050      7400
 8051              	.LASF43:
 8052 06b1 7072696E 		.ascii	"print_char\000"
 8052      745F6368 
 8052      617200
 8053              	.LASF118:
 8054 06bc 5374725F 		.ascii	"Str_FmtNbr_Int32S\000"
 8054      466D744E 
 8054      62725F49 
 8054      6E743332 
 8054      5300
 8055              	.LASF117:
 8056 06ce 5374725F 		.ascii	"Str_FmtNbr_Int32U\000"
 8056      466D744E 
 8056      62725F49 
 8056      6E743332 
 8056      5500
 8057              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
